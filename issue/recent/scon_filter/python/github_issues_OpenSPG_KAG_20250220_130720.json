[
  {
    "number": 255,
    "title": "Best practices for upserting knowledge base",
    "created_at": "2025-01-10T02:49:41Z",
    "closed_at": "2025-01-10T09:24:16Z",
    "labels": [],
    "url": "https://github.com/OpenSPG/KAG/issues/255",
    "body": "In my application scenario, I will build a knowledge base based on a large number of requirement analysis documents for requirement element retrieval. For new requirements or requirement changes, I need to add documents to the directory and then rebuild the knowledge base. Is it only possible to rebuild the entire knowledge base, or is there an incremental build method?\r\n\r\n\u5728\u6211\u7684\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u4f1a\u57fa\u4e8e\u5927\u91cf\u7684\u9700\u6c42\u5206\u6790\u6587\u6863\u6784\u5efa\u77e5\u8bc6\u5e93\uff0c\u7528\u4e8e\u9700\u6c42\u8981\u7d20\u68c0\u7d22\u3002\u5bf9\u4e8e\u65b0\u589e\u7684\u9700\u6c42\uff0c\u6216\u8005\u9700\u6c42\u53d8\u66f4\uff0c\u6211\u9700\u8981\u5728\u76ee\u5f55\u4e0b\u65b0\u589e\u6587\u6863\uff0c\u7136\u540e\u91cd\u65b0\u6784\u5efa\u77e5\u8bc6\u5e93\u3002\u6b64\u65f6\u53ea\u80fd\u5168\u91cf\u91cd\u65b0\u6784\u5efa\u5417\uff0c\u8fd8\u662f\u6709\u589e\u91cf\u6784\u5efa\u7684\u5b9e\u8df5\u65b9\u5f0f\uff1f",
    "comments_url": "https://api.github.com/repos/OpenSPG/KAG/issues/255/comments",
    "author": "zhaoyw4478",
    "comments": [
      {
        "user": "caszkgui",
        "created_at": "2025-01-10T08:25:36Z",
        "body": "> In my application scenario, I will build a knowledge base based on a large number of requirement analysis documents for requirement element retrieval. For new requirements or requirement changes, I need to add documents to the directory and then rebuild the knowledge base. Is it only possible to rebuild the entire knowledge base, or is there an incremental build method?\r\n> \r\n> \u5728\u6211\u7684\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u4f1a\u57fa\u4e8e\u5927\u91cf\u7684\u9700\u6c42\u5206\u6790\u6587\u6863\u6784\u5efa\u77e5\u8bc6\u5e93\uff0c\u7528\u4e8e\u9700\u6c42\u8981\u7d20\u68c0\u7d22\u3002\u5bf9\u4e8e\u65b0\u589e\u7684\u9700\u6c42\uff0c\u6216\u8005\u9700\u6c42\u53d8\u66f4\uff0c\u6211\u9700\u8981\u5728\u76ee\u5f55\u4e0b\u65b0\u589e\u6587\u6863\uff0c\u7136\u540e\u91cd\u65b0\u6784\u5efa\u77e5\u8bc6\u5e93\u3002\u6b64\u65f6\u53ea\u80fd\u5168\u91cf\u91cd\u65b0\u6784\u5efa\u5417\uff0c\u8fd8\u662f\u6709\u589e\u91cf\u6784\u5efa\u7684\u5b9e\u8df5\u65b9\u5f0f\uff1f\r\n\r\nKAG-builder tasks are all incremental jobs\uff0cwhich means user can append or delete some partial subgraphs each time. "
      },
      {
        "user": "zhaoyw4478",
        "created_at": "2025-01-10T09:24:16Z",
        "body": "I know what you mean and have deeper understanding of the KAG`S architecute: one kg is composed of multi subgraphs which named 'task' in openspg webui.  \r\nThanks for your explanation and look forward to more features released by KAG!\r\n"
      }
    ],
    "satisfaction_conditions": [
      "Supports incremental updates to the knowledge base",
      "Allows partial modifications (additions/deletions) to knowledge components",
      "Maintains knowledge base integrity during updates",
      "Provides a modular architecture for knowledge components",
      "Reduces computational/time resources compared to full rebuilds"
    ]
  },
  {
    "number": 57,
    "title": "docker-compose.yml \u5e76\u7528 Docker Compose \u542f\u52a8\u670d\u52a1   neo4j\u5b89\u88c5\u5931\u8d25",
    "created_at": "2024-11-20T02:00:19Z",
    "closed_at": "2024-11-20T07:20:26Z",
    "labels": [],
    "url": "https://github.com/OpenSPG/KAG/issues/57",
    "body": "\r\n\r\n*****************************************************************************\r\n *********************** Enhanced By DozerDB Plugin ***********************\r\n*****************************************************************************\r\n\r\n\r\n2024-11-19 10:40:30.081+0000 INFO  This instance is ServerId{b120a046} (b120a046-471b-4b27-9e78-dd359f9ff0ff)\r\n2024-11-19 10:40:31.355+0000 INFO  ======== Neo4j 5.25.1 ========\r\n2024-11-19 10:40:31.456+0000 ERROR Failed to start Neo4j on 0.0.0.0:7474.\r\njava.lang.RuntimeException: Error starting Neo4j database server at /data/databases\r\n\tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:288) ~[neo4j-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.build(DatabaseManagementServiceFactory.java:223) ~[neo4j-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.server.DozerDbBootstrapper.createNeo(DozerDbBootstrapper.java:46) ~[dozerdb-core-5.25.1-1.1.0-alpha.1.jar:5.25.1-1.1.0-alpha.1]\r\n\tat org.neo4j.server.NeoBootstrapper.start(NeoBootstrapper.java:185) [neo4j-5.25.1.jar:5.25.1-1.1.0-alpha.1]\r\n\tat org.neo4j.server.NeoBootstrapper.start(NeoBootstrapper.java:100) [neo4j-5.25.1.jar:5.25.1-1.1.0-alpha.1]\r\n\tat org.neo4j.server.DozerDbEntryPoint.main(DozerDbEntryPoint.java:48) [dozerdb-core-5.25.1-1.1.0-alpha.1.jar:5.25.1-1.1.0-alpha.1]\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.extension.GlobalExtensions@6ff37443' failed to initialize. Please see the attached cause exception \"org.neo4j.internal.batchimport.Configuration\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:334) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:56) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:85) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:279) ~[neo4j-5.25.1.jar:5.25.1]\r\n\t... 5 more\r\nCaused by: org.neo4j.kernel.extension.FailedToBuildExtensionException: Failed to build kernel extension Extension:OpenGraphDataScienceExtension[gds.open] because it is compiled with a reference to a class, method, or field, that is not in the class path: 'org/neo4j/internal/batchimport/Configuration'. The most common cause of this problem, is that Neo4j has been upgraded without also upgrading all installed extensions, such as APOC. Make sure that all of your extensions are build against your specific version of Neo4j.\r\n\tat org.neo4j.kernel.extension.ExtensionFailureStrategies.wrap(ExtensionFailureStrategies.java:56) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.extension.ExtensionFailureStrategies$1.handle(ExtensionFailureStrategies.java:68) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.extension.AbstractExtensions.init(AbstractExtensions.java:68) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:317) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:56) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:85) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:279) ~[neo4j-5.25.1.jar:5.25.1]\r\n\t... 5 more\r\nCaused by: java.lang.NoClassDefFoundError: org/neo4j/internal/batchimport/Configuration\r\n\tat org.neo4j.gds.procedures.integration.LogAccessor.getLog(LogAccessor.java:33) ~[open-gds-2.8.0-alpha01.jar:?]\r\n\tat org.neo4j.gds.extension.OpenGraphDataScienceExtension.newInstance(OpenGraphDataScienceExtension.java:52) ~[open-gds-2.8.0-alpha01.jar:?]\r\n\tat org.neo4j.gds.extension.OpenGraphDataScienceExtension.newInstance(OpenGraphDataScienceExtension.java:43) ~[open-gds-2.8.0-alpha01.jar:?]\r\n\tat org.neo4j.kernel.extension.AbstractExtensions.newInstance(AbstractExtensions.java:124) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.extension.AbstractExtensions.init(AbstractExtensions.java:62) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:317) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:56) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:85) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:279) ~[neo4j-5.25.1.jar:5.25.1]\r\n\t... 5 more\r\nCaused by: java.lang.ClassNotFoundException: org.neo4j.internal.batchimport.Configuration\r\n\tat jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[?:?]\r\n\tat jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[?:?]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:525) ~[?:?]\r\n\tat org.neo4j.gds.procedures.integration.LogAccessor.getLog(LogAccessor.java:33) ~[open-gds-2.8.0-alpha01.jar:?]\r\n\tat org.neo4j.gds.extension.OpenGraphDataScienceExtension.newInstance(OpenGraphDataScienceExtension.java:52) ~[open-gds-2.8.0-alpha01.jar:?]\r\n\tat org.neo4j.gds.extension.OpenGraphDataScienceExtension.newInstance(OpenGraphDataScienceExtension.java:43) ~[open-gds-2.8.0-alpha01.jar:?]\r\n\tat org.neo4j.kernel.extension.AbstractExtensions.newInstance(AbstractExtensions.java:124) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.extension.AbstractExtensions.init(AbstractExtensions.java:62) ~[neo4j-kernel-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:317) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:56) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:85) ~[neo4j-common-5.25.1.jar:5.25.1]\r\n\tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:279) ~[neo4j-5.25.1.jar:5.25.1]\r\n\t... 5 more\r\n2024-11-19 10:40:31.462+0000 INFO  Neo4j Server shutdown initiated by request\r\n2024-11-19 10:40:31.462+0000 INFO  Stopped.\r\n",
    "comments_url": "https://api.github.com/repos/OpenSPG/KAG/issues/57/comments",
    "author": "zhangqaws",
    "comments": [
      {
        "user": "andylau-55",
        "created_at": "2024-11-20T06:36:56Z",
        "body": "Thank you for your feedback. Please delete the local cache and pull the latest openspg-neo4j image again"
      },
      {
        "user": "zhangqaws",
        "created_at": "2024-11-20T07:20:26Z",
        "body": "Thank you\uff0cThe problem has been resolved @andylau-55 "
      }
    ],
    "satisfaction_conditions": [
      "Resolve version incompatibility between Neo4j and its extensions",
      "Ensure Docker image contains compatible extension versions"
    ]
  }
]