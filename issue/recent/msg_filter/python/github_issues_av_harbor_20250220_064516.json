[
  {
    "number": 109,
    "title": "librechat fails to start due to permissions on /app/start_librechat.sh",
    "created_at": "2025-01-25T19:57:08Z",
    "closed_at": "2025-01-26T01:21:48Z",
    "labels": [],
    "url": "https://github.com/av/harbor/issues/109",
    "body": "```\nharbor$ harbor up librechat --remove-orphans\n[+] Running 7/8\n \u2714 Container harbor.librechat-vector  Starte...                                     0.4s \n \u2714 Container harbor.librechat-db      Started                                       0.4s \n \u2714 Container harbor.librechat-search  Starte...                                     0.4s \n \u2714 Container harbor.ollama            Healthy                                       0.6s \n \u2714 Container harbor.webui             Running                                       0.0s \n \u2714 Container harbor.ollama-init       Started                                       0.8s \n \u2714 Container harbor.librechat-rag     Started                                       0.5s \n \u2834 Container harbor.librechat         Starting                                      0.8s \nError response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: error during container init: exec: \"/app/start_librechat.sh\": permission denied: unknown\n\nharbor$ harbor shell librechat sh\n[+] Creating 4/4\n \u2714 Container harbor.librechat-db      Running                                       0.0s \n \u2714 Container harbor.librechat-vector  Runnin...                                     0.0s \n \u2714 Container harbor.librechat-search  Runnin...                                     0.0s \n \u2714 Container harbor.librechat-rag     Created                                       0.0s \n[+] Running 1/1\n \u2714 Container harbor.librechat-rag  Started                                          0.2s \n\n/app $ ls -l /app/start_librechat.sh \n-rw-r-----    1 node     node           617 Jan 25 18:47 /app/start_librechat.sh\n```\n\nSetting the permissions on that file doesn't seem to help.\n\n```\n$ ls -l librechat/start_librechat.sh \n-rwxr-xr-x 1 user user 617 Jan 25 11:47 librechat/start_librechat.sh\n```",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/109/comments",
    "author": "papamoose",
    "comments": [
      {
        "user": "ColumbusAI",
        "created_at": "2025-01-26T00:03:16Z",
        "body": "Hey OP did 'harbor fixfs' help or are you saying that's a command you already tried?"
      },
      {
        "user": "papamoose",
        "created_at": "2025-01-26T01:21:48Z",
        "body": "@ColumbusAI That seems to have worked. Thank you. Closing."
      }
    ]
  },
  {
    "number": 31,
    "title": "Clarification on Frontend and Backend Compatibility with Multiple Models",
    "created_at": "2024-09-24T16:40:13Z",
    "closed_at": "2024-09-27T06:48:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/av/harbor/issues/31",
    "body": "I have a few questions regarding frontend and backend compatibility:\r\n\r\n1. Frontend-Backend Compatibility: Does any frontend work with any backend? I noticed that most backends are designed to work with GGUF models, but this project seems to support various backends, including vLLM, Mistral.rs, etc. If I select one of these backends, will it be compatible with frontends like Open WebUI and other similar platforms?\r\n2. Closed-Source Frontend Support: Currently, I have a closed-source frontend that is only compatible with GGUF models. If I choose to use this project, is it possible to expose a backend that my closed-source frontend can consume, allowing it to support multiple types of backends?\r\n\r\nI\u2019d appreciate any guidance or clarification on these points!",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/31/comments",
    "author": "bhupesh-sf",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-09-24T16:59:23Z",
        "body": "Thanks for trying out Harbor!\r\n\r\n1. It's only mentioned in the docs implicitly, but the support is not complete (nor it could be, to be fair)\r\n\r\nThe policy is to support everything for the main default UI and default Backend. I.e. - integrate all UIs with the default backend and all UIs with the default backend. Anything else is considered extra and provided on the best effort basis (contributions are very welcomed!)\r\n\r\nThis is not to discourage you in any way - plenty of services combinations work out of the box, the best way to check is to lookup the `x` files to see if there's an intersection.\r\n\r\n2. All the Harbor services that expose the APIs can be used with external clients. See docs on the `harbor url` / `harbor qr` commands"
      },
      {
        "user": "bhupesh-sf",
        "created_at": "2024-09-27T01:32:57Z",
        "body": "Thanks for the answer, it does clarifies \ud83d\udc4d\ud83c\udffb "
      },
      {
        "user": "av",
        "created_at": "2024-09-27T06:48:11Z",
        "body": "Awesome, feel free to reopen if needed"
      }
    ]
  }
]