{
  "number": 47,
  "title": "TryParse on empty color string now returns null",
  "created_at": "2024-11-14T14:48:44Z",
  "closed_at": "2024-11-22T20:20:14Z",
  "labels": [
    "duplicate"
  ],
  "url": "https://github.com/dcronqvist/DotTiled/pull/47",
  "body": "Moved exception into Parse in the case of a string greater than 1 character (\"#\")",
  "comments_url": "https://api.github.com/repos/dcronqvist/DotTiled/issues/47/comments",
  "author": "differenceclouds",
  "comments": [
    {
      "user": "dcronqvist",
      "created_at": "2024-11-16T12:57:17Z",
      "body": "I am not sure I agree with this modification. Typically in C#, a `Parse` method will be used when you expect the parsing to be successful (and want an exception to be thrown if it fails since that is an unexpected outcome). \r\n\r\n`TryParse` is used when you would like to attempt to parse a string into some kind of structure, and get a `bool` result of its success.\r\n\r\nTo be in line with typical C# conventions, I think we should stick to the current implementation of letting `Parse` throw an exception and have `TryParse` be exception-less. \r\n\r\nPerhaps we are trying to solve a different problem here? Is there some kind of parsing error regarding colors that you are attempting to solve? Perhaps one that is expected to be present when there is none?"
    },
    {
      "user": "differenceclouds",
      "created_at": "2024-11-16T19:18:53Z",
      "body": "Basically, there are scenarios where Tiled will output a color property with an empty string. Like if you make an object, and just add a new Color property to it, but leave it unset, the tmx will save with that property as an empty string. If the color property is part of a custom type however, the tmx won't add the property at all if it is unset. So I think it makes sense to allow the color value to be null, or perhaps an Optional. Or just return black as is the case in a lot of other places in the library. My fix keeps the exception in the case that the string is greater than one character, but returns null (or default) in the case that the string is one character, since it recurses with \"#\" added in any case. The difference between Parse and TryParse is a bit arbitrary to me, though, so however it's implemented is fine with me."
    },
    {
      "user": "dcronqvist",
      "created_at": "2024-11-21T20:04:09Z",
      "body": "I believe I understand the issue you are describing, and I have made a draft PR #63 with a proposed solution. If you have time, could you check if the proposed solution works for the case you are describing? Or if you can review the solution in a way to check that it would work."
    },
    {
      "user": "differenceclouds",
      "created_at": "2024-11-22T17:55:22Z",
      "body": "Yep, that works fine!"
    },
    {
      "user": "dcronqvist",
      "created_at": "2024-11-22T20:19:44Z",
      "body": "Great, then I'll close this PR as duplicate :)"
    }
  ],
  "satisfaction_conditions": [
    "Handles empty color strings from Tiled output gracefully without exceptions",
    "Maintains C# convention where Parse throws exceptions for invalid formats and TryParse handles failures silently",
    "Provides clear null/default value handling for unset color properties",
    "Ensures compatibility with Tiled's property serialization behavior"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-04-05 01:50:43"
  },
  "git_commit_info": {
    "sha": "50036075f56006a6b0da71e11c8942e3626f07f4",
    "date": "2024-11-14T14:26:32Z",
    "message": "\"rendersize\" -> \"tilerendersize\"\n\nfix to match the XML.",
    "author": "differenceclouds"
  },
  "repository_info": {
    "structure_summary": ".\n./.git\n./.git/branches\n./.git/description\n./.git/hooks\n./.git/hooks/applypatch-msg.sample\n./.git/hooks/commit-msg.sample\n./.git/hooks/post-update.sample\n./.git/hooks/pre-applypatch.sample\n./.git/hooks/pre-commit.sample\n./.git/hooks/pre-merge-commit.sample\n./.git/hooks/pre-push.sample\n./.git/hooks/pre-receive.sample\n./.git/hooks/push-to-checkout.sample\n./.git/hooks/update.sample\n./.git/hooks/fsmonitor-watchman.sample\n./.git/hooks/pre-rebase.sample\n./.git/hooks/prepare-commit-msg.sample\n./.git/hooks/sendemail-validate.sample\n./.git/info\n./.git/info/exclude\n./.git/config\n./.git/objects\n./.git/objects/pack\n./.git/objects/pack/pack-ecfdadf2bc1f8580e4cdfdc3a2200d0e7869e4db.pack\n./.git/objects/pack/pack-ecfdadf2bc1f8580e4cdfdc3a2200d0e7869e4db.rev\n./.git/objects/pack/pack-ecfdadf2bc1f8580e4cdfdc3a2200d0e7869e4db.idx\n./.git/objects/info\n./.git/HEAD\n./.git/refs\n./.git/refs/heads\n./.git/refs/heads/master\n./.git/refs/tags\n./.git/refs/remotes\n./.git/refs/remotes/origin\n./.git/refs/remotes/origin/HEAD\n./.git/packed-refs\n./.git/logs\n./.git/logs/refs\n./.git/logs/refs/remotes\n./.git/logs/refs/remotes/origin\n./.git/logs/refs/remotes/origin/HEAD\n./.git/logs/refs/heads\n./.git/logs/refs/heads/master\n./.git/logs/HEAD\n./.git/index\n./.editorconfig\n./.github\n./.github/FUNDING.yml\n./.github/workflows\n./.github/workflows/deploy-docs.yml\n./.github/workflows/master-pr.yml\n./.github/workflows/pull-request.yml\n./.github/workflows/release-nuget.yml\n./.github/pull_request_template\n./.github/pull_request_template/dev_template.md\n./.github/pull_request_template/master_template.md\n./.gitignore\n./LICENSE\n./docs\n./docs/docfx.json\n./docs/docs\n./docs/docs/essentials\n./docs/docs/essentials/loading-maps.md\n./docs/docs/essentials/custom-properties.md\n./docs/docs/essentials/representation-model.md\n./docs/docs/quickstart.md\n./docs/docs/toc.yml\n./docs/images\n./docs/images/entity-type-enum.png\n./docs/images/monster-spawner-class.png\n./docs/images/resolve-types.png\n./docs/template\n./docs/template/public\n./docs/template/public/main.css\n./docs/template/public/main.js\n./docs/toc.yml\n./src\n./src/DotTiled.Benchmark\n./src/DotTiled.Benchmark/DotTiled.Benchmark.csproj\n./src/DotTiled.Benchmark/Program.cs\n./src/DotTiled.Examples\n./src/DotTiled.Examples/DotTiled.Example.Console\n./src/DotTiled.Examples/DotTiled.Example.Console/DotTiled.Example.Console.csproj\n./src/DotTiled.Examples/DotTiled.Example.Console/tilemap.tmx\n./src/DotTiled.Examples/DotTiled.Example.Console/tileset.png\n./src/DotTiled.Examples/DotTiled.Example.Console/tileset.tsx\n./src/DotTiled.Examples/DotTiled.Example.Console/Program.cs\n./src/DotTiled.Examples/DotTiled.Example.Godot\n./src/DotTiled.Examples/DotTiled.Example.Godot/.gitattributes\n./src/DotTiled.Examples/DotTiled.Example.Godot/.gitignore\n./src/DotTiled.Examples/DotTiled.Example.Godot/DotTiled.Example.Godot.csproj\n./src/DotTiled.Examples/DotTiled.Example.Godot/DotTiled.Example.Godot.sln\n./src/DotTiled.Examples/DotTiled.Example.Godot/blocks\n./src/DotTiled.Examples/DotTiled.Example.Godot/blocks/1.tscn\n./src/DotTiled.Examples/DotTiled.Example.Godot/icon.svg\n./src/DotTiled.Examples/DotTiled.Example.Godot/icon.svg.import\n./src/DotTiled.Examples/DotTiled.Example.Godot/main.tscn\n./src/DotTiled.Examples/DotTiled.Example.Godot/project.godot\n./src/DotTiled.Examples/DotTiled.Example.Godot/tilemap.tmx\n./src/DotTiled.Examples/DotTiled.Example.Godot/tileset.png\n./src/DotTiled.Examples/DotTiled.Example.Godot/tileset.png.import\n./src/DotTiled.Examples/DotTiled.Example.Godot/tileset.tsx\n./src/DotTiled.Examples/DotTiled.Example.Godot/MapParser.cs\n./src/DotTiled.Tests\n./src/DotTiled.Tests/Assert\n./src/DotTiled.Tests/Assert/AssertCustomTypes.cs\n./src/DotTiled.Tests/Assert/AssertData.cs\n./src/DotTiled.Tests/Assert/AssertImage.cs\n./src/DotTiled.Tests/Assert/AssertLayer.cs\n./src/DotTiled.Tests/Assert/AssertMap.cs\n./src/DotTiled.Tests/Assert/AssertObject.cs\n./src/DotTiled.Tests/Assert/AssertProperties.cs\n./src/DotTiled.Tests/Assert/AssertTileset.cs\n./src/DotTiled.Tests/DotTiled.Tests.csproj\n./src/DotTiled.Tests/IntegrationTests\n./src/DotTiled.Tests/IntegrationTests/CustomTypes\n./src/DotTiled.Tests/IntegrationTests/CustomTypes/FromTypeUsedInLoaderTests.cs\n./src/DotTiled.Tests/TestData\n./src/DotTiled.Tests/TestData/Maps\n./src/DotTiled.Tests/TestData/Maps/default-map\n./src/DotTiled.Tests/TestData/Maps/default-map/default-map.cs\n./src/DotTiled.Tests/TestData/Maps/default-map/default-map.tmj\n./src/DotTiled.Tests/TestData/Maps/default-map/default-map.tmx\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi/map-external-tileset-multi.cs\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi/map-external-tileset-multi.tmj\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi/map-external-tileset-multi.tmx\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi/multi-tileset.tsj\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi/multi-tileset.tsx\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-multi/tileset.png\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset/map-external-tileset-wangset.cs\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset/map-external-tileset-wangset.tmj\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset/map-external-tileset-wangset.tmx\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset/tileset.png\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset/wangset-tileset.tsj\n./src/DotTiled.Tests/TestData/Maps/map-external-tileset-wangset/wangset-tileset.tsx\n./src/DotTiled.Tests/TestData/Maps/map-with-class-and-props\n./src/DotTiled.Tests/TestData/Maps/map-with-class-and-props/map-with-class-and-props.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-class-and-props/map-with-class-and-props.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-class-and-props/map-with-class-and-props.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-class\n./src/DotTiled.Tests/TestData/Maps/map-with-class/map-with-class.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-class/map-with-class.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-class/map-with-class.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-common-props\n./src/DotTiled.Tests/TestData/Maps/map-with-common-props/map-with-common-props.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-common-props/map-with-common-props.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-common-props/map-with-common-props.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-custom-type-props\n./src/DotTiled.Tests/TestData/Maps/map-with-custom-type-props/map-with-custom-type-props.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-custom-type-props/map-with-custom-type-props.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-custom-type-props/map-with-custom-type-props.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-custom-type-props/propertytypes.json\n./src/DotTiled.Tests/TestData/Maps/map-with-deep-props\n./src/DotTiled.Tests/TestData/Maps/map-with-deep-props/map-with-deep-props.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-deep-props/map-with-deep-props.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-deep-props/map-with-deep-props.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-embedded-tileset\n./src/DotTiled.Tests/TestData/Maps/map-with-embedded-tileset/map-with-embedded-tileset.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-embedded-tileset/map-with-embedded-tileset.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-embedded-tileset/map-with-embedded-tileset.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-embedded-tileset/tileset.png\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset/map-with-external-tileset.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset/map-with-external-tileset.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset/map-with-external-tileset.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset/tileset.png\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset/tileset.tsj\n./src/DotTiled.Tests/TestData/Maps/map-with-external-tileset/tileset.tsx\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags/tileset.png\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags/tileset.tsj\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags/tileset.tsx\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags/map-with-flippingflags.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags/map-with-flippingflags.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-flippingflags/map-with-flippingflags.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/map-with-many-layers.cs\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/map-with-many-layers.tmj\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/map-with-many-layers.tmx\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/poly.tj\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/poly.tx\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/tileset.png\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/tileset.tsj\n./src/DotTiled.Tests/TestData/Maps/map-with-many-layers/tileset.tsx\n./src/DotTiled.Tests/UnitTests\n./src/DotTiled.Tests/UnitTests/OptionalTests.cs\n./src/DotTiled.Tests/UnitTests/Properties\n./src/DotTiled.Tests/UnitTests/Properties/CustomTypes\n./src/DotTiled.Tests/UnitTests/Properties/CustomTypes/CustomClassDefinitionTests.cs\n./src/DotTiled.Tests/UnitTests/Properties/CustomTypes/CustomEnumDefinitionTests.cs\n./src/DotTiled.Tests/UnitTests/Properties/HasPropertiesBaseTests.cs\n./src/DotTiled.Tests/UnitTests/Serialization\n./src/DotTiled.Tests/UnitTests/Serialization/DefaultResourceCacheTests.cs\n./src/DotTiled.Tests/UnitTests/Serialization/Tmj\n./src/DotTiled.Tests/UnitTests/Serialization/Tmj/TmjMapReaderTests.cs\n./src/DotTiled.Tests/UnitTests/Serialization/Tmx\n./src/DotTiled.Tests/UnitTests/Serialization/Tmx/TmxMapReaderTests.cs\n./src/DotTiled.Tests/UnitTests/Serialization/LoaderTests.cs\n./src/DotTiled.Tests/UnitTests/Serialization/MapReaderTests.cs\n./src/DotTiled.Tests/UnitTests/Serialization/TestData.cs\n./src/DotTiled.sln\n./src/DotTiled\n./src/DotTiled/Color.cs\n./src/DotTiled/Layers\n./src/DotTiled/Layers/BaseLayer.cs\n./src/DotTiled/Layers/Data.cs\n./src/DotTiled/Layers/Group.cs\n./src/DotTiled/Layers/ImageLayer.cs\n./src/DotTiled/Layers/ObjectLayer.cs\n./src/DotTiled/Layers/Objects\n./src/DotTiled/Layers/Objects/EllipseObject.cs\n./src/DotTiled/Layers/Objects/Object.cs\n./src/DotTiled/Layers/Objects/PointObject.cs\n./src/DotTiled/Layers/Objects/PolygonObject.cs\n./src/DotTiled/Layers/Objects/PolylineObject.cs\n./src/DotTiled/Layers/Objects/RectangleObject.cs\n./src/DotTiled/Layers/Objects/TextObject.cs\n./src/DotTiled/Layers/Objects/TileObject.cs\n./src/DotTiled/Layers/TileLayer.cs\n./src/DotTiled/Map.cs\n./src/DotTiled/Optional.cs\n./src/DotTiled/Properties\n./src/DotTiled/Properties/BoolProperty.cs\n./src/DotTiled/Properties/ClassProperty.cs\n./src/DotTiled/Properties/CustomTypes\n./src/DotTiled/Properties/CustomTypes/CustomTypeDefinition.cs\n./src/DotTiled/Properties/CustomTypes/CustomClassDefinition.cs\n./src/DotTiled/Properties/CustomTypes/CustomEnumDefinition.cs\n./src/DotTiled/Properties/EnumProperty.cs\n./src/DotTiled/Properties/FileProperty.cs\n./src/DotTiled/Properties/FloatProperty.cs\n./src/DotTiled/Properties/IProperty.cs\n./src/DotTiled/Properties/IntProperty.cs\n./src/DotTiled/Properties/ObjectProperty.cs\n./src/DotTiled/Properties/PropertyType.cs\n./src/DotTiled/Properties/StringProperty.cs\n./src/DotTiled/Properties/ColorProperty.cs\n./src/DotTiled/Properties/IHasProperties.cs\n./src/DotTiled/Serialization\n./src/DotTiled/Serialization/DefaultResourceCache.cs\n./src/DotTiled/Serialization/FileSystemResourceReader.cs\n./src/DotTiled/Serialization/IMapReader.cs\n./src/DotTiled/Serialization/IResourceCache.cs\n./src/DotTiled/Serialization/IResourceReader.cs\n./src/DotTiled/Serialization/ITemplateReader.cs\n./src/DotTiled/Serialization/ITilesetReader.cs\n./src/DotTiled/Serialization/Tmj\n./src/DotTiled/Serialization/Tmj/ExtensionsJsonElement.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Data.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Group.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.ImageLayer.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Layer.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Map.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Template.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.TileLayer.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Tileset.cs\n./src/DotTiled/Serialization/Tmj/TjTemplateReader.cs\n./src/DotTiled/Serialization/Tmj/TmjMapReader.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.ObjectLayer.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.Properties.cs\n./src/DotTiled/Serialization/Tmj/TmjReaderBase.cs\n./src/DotTiled/Serialization/Tmj/TsjTilesetReader.cs\n./src/DotTiled/Serialization/Tmx\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.Chunk.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.Data.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.Map.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.TileLayer.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.Tileset.cs\n./src/DotTiled/Serialization/Tmx/ExtensionsXmlReader.cs\n./src/DotTiled/Serialization/Tmx/TmxMapReader.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.ObjectLayer.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.Properties.cs\n./src/DotTiled/Serialization/Tmx/TmxReaderBase.cs\n./src/DotTiled/Serialization/Tmx/TsxTilesetReader.cs\n./src/DotTiled/Serialization/Tmx/TxTemplateReader.cs\n./src/DotTiled/Serialization/Helpers.cs\n./src/DotTiled/Serialization/Loader.cs\n./src/DotTiled/Serialization/MapReader.cs\n./src/DotTiled/Serialization/TemplateReader.cs\n./src/DotTiled/Serialization/TilesetReader.cs\n./src/DotTiled/Template.cs\n./src/DotTiled/Tilesets\n./src/DotTiled/Tilesets/Frame.cs\n./src/DotTiled/Tilesets/Grid.cs\n./src/DotTiled/Tilesets/Image.cs\n./src/DotTiled/Tilesets/Tile.cs\n./src/DotTiled/Tilesets/TileOffset.cs\n./src/DotTiled/Tilesets/Tileset.cs\n./src/DotTiled/Tilesets/Transformations.cs\n./src/DotTiled/Tilesets/WangColor.cs\n./src/DotTiled/Tilesets/WangTile.cs\n./src/DotTiled/Tilesets/Wangset.cs\n./src/DotTiled/DotTiled.csproj\n./src/DotTiled/README.md\n./Makefile\n./README.md\n",
    "readme": "\n--- ./src/DotTiled/README.md ---\n# \ud83d\udcda DotTiled\n\nDotTiled is a simple and easy-to-use library for loading, saving, and managing [Tiled maps and tilesets](https://mapeditor.org) in your .NET projects. After [TiledCS](https://github.com/TheBoneJarmer/TiledCS) unfortunately became unmaintained (since 2022), I aimed to create a new library that could fill its shoes. DotTiled is the result of that effort.\n\nDotTiled is designed to be a lightweight and efficient library that provides a simple API for loading and managing Tiled maps and tilesets. It is built with performance in mind and aims to be as fast and memory-efficient as possible.\n\n- [Alternative libraries and comparison + benchmarks](#alternative-libraries-and-comparison)\n- [Feature coverage comparison](#feature-coverage-comparison)\n- [Quick Start](#quick-start)\n\n# Alternative libraries and comparison\n\nOther similar libraries exist, and you may want to consider them for your project as well:\n\n|**Comparison**|**DotTiled**|[TiledLib](https://github.com/Ragath/TiledLib.Net)|[TiledCSPlus](https://github.com/nolemretaWxd/TiledCSPlus)|[TiledSharp](https://github.com/marshallward/TiledSharp)|[TiledCS](https://github.com/TheBoneJarmer/TiledCS)|[TiledNet](https://github.com/napen123/Tiled.Net)|\n|---------------------------------|:-----------------------:|:--------:|:-----------:|:----------:|:-------:|:------:|\n| Actively maintained             |            \u2705          |     \u2705   |     \u274c      |      \u274c   |    \u274c  |   \u274c   |\n| Benchmark (time)*               |           1.00          |   1.83   |     2.16    |      -     |    -    |    -   |\n| Benchmark (memory)*             |           1.00          |   1.43   |     2.03    |      -     |    -    |    -   |\n| .NET Targets                    | `net8.0` | `net8.0` |`netstandard2.1`|`netstandard2.0`|`netstandard2.0`|`net45`|\n| Docs                            |Usage, API,<br>XML Docs|Usage|Usage, API,<br>XML Docs|Usage, API|Usage, XML Docs|Usage, XML Docs|\n| License                         |           MIT           |   MIT    |     MIT     | Apache-2.0 |   MIT   | BSD 3-Clause |\n\n> *Both benchmark time and memory ratios are relative to DotTiled. Lower is better. Benchmark (time) refers to the execution time of loading the same map from an in-memory string that contains XML data in the `.tmx` format. Benchmark (memory) refers to the memory allocated during that loading process.\n\n[MonoGame](https://www.monogame.net) users may also want to consider using [MonoGame.Extended](https://github.com/craftworkgames/MonoGame.Extended) for loading Tiled maps and tilesets. The feature coverage by MonoGame.Extended is less than that of DotTiled, so you may want to consider using DotTiled if you need access to more Tiled features and flexibility.\n\n# Feature coverage comparison\n\nBelow is a comparison of the feature coverage of DotTiled and other similar libraries. This comparison is based on the features provided by the Tiled map editor and the support for those features in each library. The comparison is not exhaustive, and you may want to refer to the respective library's documentation or implementation for details. Due to some libraries not having obvious documentation or feature lists, some features may be incorrectly marked as not supported. If you find any inaccuracies, please let me know.\n\n| **Comparison**|**DotTiled**|[TiledLib](https://github.com/Ragath/TiledLib.Net)|[TiledCSPlus](https://github.com/nolemretaWxd/TiledCSPlus)|[TiledSharp](https://github.com/marshallward/TiledSharp)|[TiledCS](https://github.com/TheBoneJarmer/TiledCS)|[TiledNet](https://github.com/napen123/Tiled.Net)|\n|---------------------------------|:-:|:-:|:-:|:-:|:-:|:-:|\n| XML format `.tmx`               |\u2705 |\u26a0\ufe0f|\u26a0\ufe0f|\u26a0\ufe0f|\u26a0\ufe0f|\u26a0\ufe0f|\n| JSON format `.tmj`              |\u2705 |\u26a0\ufe0f|\u274c|\u274c|\u274c|\u274c|\n| External tileset callback       |\u2705 |\u2705|\u274c|\u2705|\u274c|\u274c|\n| Object templates                |\u2705 |\u274c|\u274c|\u274c|\u274c|\u274c|\n| Custom types (properties)       |\u2705 |\u274c|\u274c|\u274c|\u274c|\u274c|\n| Hierarchical layers (groups)    |\u2705 |\u274c|\u274c|\u2705|\u274c|\u2705|\n| Infinite maps                   |\u2705 |\u274c|\u2705|\u2705|\u2705|\u274c|\n| Wangsets                        |\u2705 |\u274c|\u26a0\ufe0f|\u26a0\ufe0f|\u274c|\u26a0\ufe0f|\n\n> \u2705 Full support. \u26a0\ufe0f Partial support, see respective library for details about supported features. \u274c No support.\n\n# Quick Start\n\nCheck out the detailed [documentation](https://dcronqvist.github.io/DotTiled/docs/quickstart.html) for more information on how to use DotTiled in your project.\n\n\n\n--- ./README.md ---\n# \ud83d\udcda DotTiled\n\n<img src=\"https://www.mapeditor.org/img/tiled-logo-white.png\" align=\"right\" width=\"20%\"/>\n\nDotTiled is a simple and easy-to-use library for loading, saving, and managing [Tiled maps and tilesets](https://mapeditor.org) in your .NET projects. After [TiledCS](https://github.com/TheBoneJarmer/TiledCS) unfortunately became unmaintained (since 2022), I aimed to create a new library that could fill its shoes. DotTiled is the result of that effort.\n\nDotTiled is designed to be a lightweight and efficient library that provides a simple API for loading and managing Tiled maps and tilesets. It is built with performance in mind and aims to be as fast and memory-efficient as possible.\n\n- [Alternative libraries and comparison + benchmarks](#alternative-libraries-and-comparison)\n- [Feature coverage comparison](#feature-coverage-comparison)\n- [Quick Start](#quick-start)\n\n# Alternative libraries and comparison\n\nOther similar libraries exist, and you may want to consider them for your project as well:\n\n|**Comparison**|**DotTiled**|[TiledLib](https://github.com/Ragath/TiledLib.Net)|[TiledCSPlus](https://github.com/nolemretaWxd/TiledCSPlus)|[TiledSharp](https://github.com/marshallward/TiledSharp)|[TiledCS](https://github.com/TheBoneJarmer/TiledCS)|[TiledNet](https://github.com/napen123/Tiled.Net)|\n|---------------------------------|:-----------------------:|:--------:|:-----------:|:----------:|:-------:|:------:|\n| Actively maintained             |            \u2705          |     \u2705   |     \u274c      |      \u274c   |    \u274c  |   \u274c   |\n| Benchmark (time)*               |           1.00          |   1.83   |     2.16    |      -     |    -    |    -   |\n| Benchmark (memory)*             |           1.00          |   1.43   |     2.03    |      -     |    -    |    -   |\n| .NET Targets                    | `net8.0` | `net8.0` |`netstandard2.1`|`netstandard2.0`|`netstandard2.0`|`net45`|\n| Docs                            |Usage, API,<br>XML Docs|Usage|Usage, API,<br>XML Docs|Usage, API|Usage, XML Docs|Usage, XML Docs|\n| License                         |           MIT           |   MIT    |     MIT     | Apache-2.0 |   MIT   | BSD 3-Clause |\n\n> [!NOTE]\n> *Both benchmark time and memory ratios are relative to DotTiled. Lower is better. Benchmark (time) refers to the execution time of loading the same map from an in-memory string that contains XML data in the `.tmx` format. Benchmark (memory) refers to the memory allocated during that loading process. For further details on the benchmark results, see the collapsible section below.\n\n[MonoGame](https://www.monogame.net) users may also want to consider using [MonoGame.Extended](https://github.com/craftworkgames/MonoGame.Extended) for loading Tiled maps and tilesets. The feature coverage by MonoGame.Extended is less than that of DotTiled, so you may want to consider using DotTiled if you need access to more Tiled features and flexibility.\n\n<details>\n<summary>\nBenchmark details\n</summary>\n\nThe following benchmark results were gathered using the `DotTiled.Benchmark` project which uses [BenchmarkDotNet](https://benchmarkdotnet.org/) to compare the performance of DotTiled with other similar libraries. The benchmark results are grouped by category and show the mean execution time, memory consumption metrics, and ratio to DotTiled.\n\n```\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4651/22H2/2022Update)\n12th Gen Intel Core i7-12700K, 1 CPU, 20 logical and 12 physical cores\n.NET SDK 8.0.202\n  [Host]     : .NET 8.0.3 (8.0.324.11423), X64 RyuJIT AVX2\n  DefaultJob : .NET 8.0.3 (8.0.324.11423), X64 RyuJIT AVX2\n```\n| Method      | Categories               | Mean     | Ratio | Gen0   | Gen1   | Allocated | Alloc Ratio |\n|------------ |------------------------- |---------:|------:|-------:|-------:|----------:|------------:|\n| DotTiled    | MapFromInMemoryTmjString | 4.431 \u03bcs |  1.00 | 0.4349 |      - |   5.58 KB |        1.00 |\n| TiledLib    | MapFromInMemoryTmjString | 6.369 \u03bcs |  1.44 | 0.7019 | 0.0153 |   9.01 KB |        1.61 |\n|             |                          |          |       |        |        |           |             |\n| DotTiled    | MapFromInMemoryTmxString | 3.125 \u03bcs |  1.00 | 1.2817 | 0.0610 |  16.36 KB |        1.00 |\n| TiledLib    | MapFromInMemoryTmxString | 5.709 \u03bcs |  1.83 | 1.8005 | 0.0916 |  23.32 KB |        1.43 |\n| TiledCSPlus | MapFromInMemoryTmxString | 6.757 \u03bcs |  2.16 | 2.5940 | 0.1831 |  33.16 KB |        2.03 |\n\nIt is important to note that the above benchmark results come from loading a very small map with a single tile layer as I had to find a common denominator between the libraries so that they all could load the same map. The results aim to be indicative of the performance of the libraries, but should be taken with a grain of salt. Only the actively maintained libraries are included in the benchmark results. TiledCSPlus does not support the `.tmj` format, so it was not included for that benchmark category.\n\n</details>\n\n# Feature coverage comparison\n\nBelow is a comparison of the feature coverage of DotTiled and other similar libraries. This comparison is based on the features provided by the Tiled map editor and the support for those features in each library. The comparison is not exhaustive, and you may want to refer to the respective library's documentation or implementation for details. Due to some libraries not having obvious documentation or feature lists, some features may be incorrectly marked as not supported. If you find any inaccuracies, please let me know.\n\n| **Comparison**|**DotTiled**|[TiledLib](https://github.com/Ragath/TiledLib.Net)|[TiledCSPlus](https://github.com/nolemretaWxd/TiledCSPlus)|[TiledSharp](https://github.com/marshallward/TiledSharp)|[TiledCS](https://github.com/TheBoneJarmer/TiledCS)|[TiledNet](https://github.com/napen123/Tiled.Net)|\n|---------------------------------|:-:|:-:|:-:|:-:|:-:|:-:|\n| XML format `.tmx`               |\u2705 |\u26a0\ufe0f|\u26a0\ufe0f|\u26a0\ufe0f|\u26a0\ufe0f|\u26a0\ufe0f|\n| JSON format `.tmj`              |\u2705 |\u26a0\ufe0f|\u274c|\u274c|\u274c|\u274c|\n| External tileset callback       |\u2705 |\u2705|\u274c|\u2705|\u274c|\u274c|\n| Object templates                |\u2705 |\u274c|\u274c|\u274c|\u274c|\u274c|\n| Custom types (properties)       |\u2705 |\u274c|\u274c|\u274c|\u274c|\u274c|\n| Hierarchical layers (groups)    |\u2705 |\u274c|\u274c|\u2705|\u274c|\u2705|\n| Infinite maps                   |\u2705 |\u274c|\u2705|\u2705|\u2705|\u274c|\n| Wangsets                        |\u2705 |\u274c|\u26a0\ufe0f|\u26a0\ufe0f|\u274c|\u26a0\ufe0f|\n\n> [!NOTE]\n> \u2705 Full support. \u26a0\ufe0f Partial support, see respective library for details about supported features. \u274c No support.\n\n# Quick Start\n\nDotTiled is available as a NuGet package. You can install it by using the NuGet Package Manager UI in Visual Studio, or equivalent, or using the following command for the .NET CLI:\n\n```pwsh\ndotnet add package DotTiled\n```\n\nThen head to the detailed [documentation](https://dcronqvist.github.io/DotTiled/docs/quickstart.html) for more information on how to use DotTiled in your project.\n\n\n",
    "readme_filenames": [
      "./src/DotTiled/README.md",
      "./README.md",
      "./.github/pull_request_template/dev_template.md"
    ],
    "github_workflows": {
      ".github/workflows/deploy-docs.yml": "on:\n  push:\n    branches:\n      - master\n\n# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages\npermissions:\n  actions: read\n  pages: write\n  id-token: write\n\n# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.\n# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n\njobs:\n  deploy-docs:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Setup .NET\n        uses: actions/setup-dotnet@v4\n        with:\n          dotnet-version: 8.0.x\n      - name: Setup DocFX\n        run: dotnet tool update -g docfx\n      - name: Build docs\n        run: make docs-build\n      - name: Upload docs\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: docs/_site\n      - name: Deploy docs\n        id: deployment\n        uses: actions/deploy-pages@v4\n",
      ".github/workflows/master-pr.yml": "on:\n  pull_request:\n    branches:\n      - master\n\njobs:\n  check-pr-version:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout PR branch\n        uses: actions/checkout@v3\n        \n      - name: Get version from PR branch\n        id: pr_version\n        run: |\n          PR_VERSION=$(grep '<Version>' **/*.csproj | sed -E 's/.*<Version>(.*)<\\/Version>.*/\\1/')\n          echo \"PR_VERSION=$PR_VERSION\" >> $GITHUB_ENV\n\n      - name: Checkout master branch\n        run: |\n          git fetch origin master\n          git checkout origin/master\n\n      - name: Get version from master branch\n        id: master_version\n        run: |\n          MASTER_VERSION=$(grep '<Version>' **/*.csproj | sed -E 's/.*<Version>(.*)<\\/Version>.*/\\1/')\n          echo \"MASTER_VERSION=$MASTER_VERSION\" >> $GITHUB_ENV\n\n      - name: Compare versions\n        run: |\n          if [ \"$(printf '%s\\n' \"$PR_VERSION\" \"$MASTER_VERSION\" | sort -V | head -n1)\" = \"$PR_VERSION\" ] && [ \"$PR_VERSION\" != \"$MASTER_VERSION\" ]; then\n            echo \"Version in PR is not higher than master.\"\n            exit 1\n          else\n            echo \"Version in PR is higher than master.\"\n          fi\n",
      ".github/workflows/pull-request.yml": "on: \n  pull_request:\n    branches:\n      - master\n      - dev\n      \njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n    - name: Set up .NET\n      uses: actions/setup-dotnet@v4\n      with:\n        dotnet-version: 8.0.x\n    - name: Restore dependencies\n      run: dotnet restore src/DotTiled.sln\n    - name: Build\n      run: dotnet build --no-restore src/DotTiled.sln\n    - name: Test\n      run: dotnet test --no-build --verbosity normal src/DotTiled.sln\n    - name: Lint style\n      run: dotnet format style --verify-no-changes --verbosity diagnostic src/DotTiled.sln\n    - name: Lint analyzers\n      run: dotnet format analyzers --verify-no-changes --verbosity diagnostic src/DotTiled.sln\n"
    }
  },
  "llm_calls_before_build": 0,
  "github_workflows_found": [
    ".github/workflows/deploy-docs.yml",
    ".github/workflows/master-pr.yml",
    ".github/workflows/pull-request.yml"
  ],
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\n\n# Install necessary system dependencies (git for cloning repository)\nRUN apt-get update && apt-get install -y git\n\n# Clone repository and checkout specific commit with fix verification\nRUN git clone https://github.com/dcronqvist/DotTiled.git /app\nWORKDIR /app\nRUN git checkout 50036075f56006a6b0da71e11c8942e3626f07f4\n\n# Build the DotTiled project using .NET 8 SDK\nWORKDIR /app/src/DotTiled\nRUN dotnet build",
  "dockerfile_build_success": true,
  "successful_candidate_index": 2,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "llm_calls_total": 5
}