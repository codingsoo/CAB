[
  {
    "number": 24,
    "title": "out/ref",
    "created_at": "2025-01-05T23:04:32Z",
    "closed_at": "2025-02-07T18:14:58Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/roblox-csharp/roblox-cs/issues/24",
    "body": "```cs\r\nmethod(out string blah);\r\n\r\nvoid method(out string blah)\r\n{\r\n  blah = \"blah\";\r\n}\r\n```\r\n```luau\r\nlocal function method(blah: (value: string) -> nil)\r\n  blah(\"blah\")\r\nend\r\n\r\nlocal blah: string\r\nmethod(function(value: string): nil\r\n  blah = value\r\n  return nil\r\nend)\r\n```",
    "comments_url": "https://api.github.com/repos/roblox-csharp/roblox-cs/issues/24/comments",
    "author": "R-unic",
    "comments": [
      {
        "user": "Velover",
        "created_at": "2025-01-06T13:31:23Z",
        "body": "proposal\r\n\r\n```cs\r\n\r\nvoid Method(out string blah)\r\n{\r\n    blah = \"test\"\r\n}\r\n\r\n\r\nvoid Main()\r\n{\r\n  Method(out var blah);\r\n}\r\n```\r\n\r\n\r\n```lua\r\nfunction Method(_out_blah: {string}): ()\r\n  _out_blah[1] = \"test\"\r\nend\r\n\r\nfunction Main(): ()\r\n  local blah: string\r\n  local _out_blah = {blah}\r\n  Method(_out_blah)\r\n  blah =  _out_blah[1]\r\nend\r\n```\r\n\n\n---\n\ni think it's going to be easier computationally than creating function each time"
      },
      {
        "user": "R-unic",
        "created_at": "2025-01-06T17:20:28Z",
        "body": "i disagree. and to my knowledge table allocations are more expensive than tiny function calls. the original proposal for out/ref used tables, but i decided to switch to functions since they look better and are probably less expensive.\r\n\r\nthank you for your comment, though!"
      },
      {
        "user": "Velover",
        "created_at": "2025-01-06T17:23:31Z",
        "body": "i think the table allocation is less expensive because of the size of the table\r\n\r\ncan we benchmark it and tell what's better?\r\n\r\ne.g. 100_000 calls with --!native and without"
      },
      {
        "user": "R-unic",
        "created_at": "2025-01-06T19:21:33Z",
        "body": "yeah, we can benchmark it. we'll do whichever's faster."
      },
      {
        "user": "Velover",
        "created_at": "2025-01-13T18:09:44Z",
        "body": "Yeah, you're right doing with the function way is up-to 25% faster"
      },
      {
        "user": "R-unic",
        "created_at": "2025-01-13T22:33:20Z",
        "body": "> Yeah, you're right doing with the function way is up-to 25% faster\r\n\r\nappreciate the concern and time you took to benchmark it!"
      }
    ],
    "satisfaction_conditions": [
      "Demonstrates superior performance between function-based and table-based approaches for out/ref parameter handling",
      "Maintains code readability while handling parameter passing",
      "Provides measurable evidence for computational efficiency claims"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-05 01:46:52"
    }
  }
]