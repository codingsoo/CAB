{
  "number": 68,
  "title": "Attempted to ref invalid pointer",
  "created_at": "2024-09-24T17:01:51Z",
  "closed_at": "2024-09-25T08:53:27Z",
  "labels": [
    "bug"
  ],
  "url": "https://github.com/lopcode/vips-ffm/issues/68",
  "body": "```\r\nCaused by: app.photofox.vipsffm.VipsError: attempted to ref invalid pointer\r\n        at app.photofox.vipsffm.VipsInvoker.refGObjectToArenaScope(VipsInvoker.java:399) ~[vips-ffm-core-0.5.3.jar:?]\r\n        at app.photofox.vipsffm.VipsInvoker.readOutputOption(VipsInvoker.java:113) ~[vips-ffm-core-0.5.3.jar:?]\r\n        at app.photofox.vipsffm.VipsInvoker.lambda$readOutputOptions$2(VipsInvoker.java:47) ~[vips-ffm-core-0.5.3.jar:?]\r\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) ~[?:?]\r\n        at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:194) ~[?:?]\r\n        at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709) ~[?:?]\r\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:556) ~[?:?]\r\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:546) ~[?:?]\r\n        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) ~[?:?]\r\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) ~[?:?]\r\n        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265) ~[?:?]\r\n        at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:611) ~[?:?]\r\n        at app.photofox.vipsffm.VipsInvoker.readOutputOptions(VipsInvoker.java:47) ~[vips-ffm-core-0.5.3.jar:?]\r\n        at app.photofox.vipsffm.VipsInvoker.invokeOperation(VipsInvoker.java:37) ~[vips-ffm-core-0.5.3.jar:?]\r\n        at app.photofox.vipsffm.VImage.jpegsaveBuffer(VImage.java:2984) ~[vips-ffm-core-0.5.3.jar:?]\r\n```\r\n\r\non linux",
  "comments_url": "https://api.github.com/repos/lopcode/vips-ffm/issues/68/comments",
  "author": "JohannesBeranek",
  "comments": [
    {
      "user": "JohannesBeranek",
      "created_at": "2024-09-24T17:08:46Z",
      "body": "While looking at the operations in that chain, I found the following in VImage.iccTransform\r\n```\r\n        VipsOption.String outputProfileOption = VipsOption.String(\"output-profile\", outputProfile);\r\n```\r\nI think this should be `output_profile` with an underline. Not sure if it's the underlying issue though.\n\n---\n\nSearching for the regex\r\n`\"[^\"]*-[^\"]*\"` in IntelliJ IDEA inside VImage yields 25 results of probably wrong params."
    },
    {
      "user": "lopcode",
      "created_at": "2024-09-24T21:20:31Z",
      "body": "Thanks for reporting - looking at the stacktrace I'm pretty sure this is because `VipsBlob` isn't actually a `VipsObject` subtype so it's not correct to reference count - I'll investigate and fix.\n\n---\n\nFixed in `0.5.6` \ud83d\ude42 "
    },
    {
      "user": "JohannesBeranek",
      "created_at": "2024-09-25T08:53:27Z",
      "body": "Works. We've now deployed vips-ffm in production (linux) and already are seeing reduced times for image generation (we're generating a lot of high-res images when building customizable PDFs). Can't give you any real numbers (except for the test numbers I already posted), but it definitely feels faster.\r\nThanks a lot!"
    },
    {
      "user": "lopcode",
      "created_at": "2024-09-25T09:03:28Z",
      "body": "That's awesome - thanks so much for filing issues and sticking with the library as I get it towards a 1.0 release \ud83c\udf89"
    }
  ],
  "satisfaction_conditions": [
    "Resolves the 'attempted to ref invalid pointer' error during JPEG save operations",
    "Ensures proper reference counting for VipsBlob objects",
    "Maintains Linux environment compatibility",
    "Preserves or improves image processing performance"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-04-05 01:46:29"
  },
  "git_commit_info": {
    "sha": "f6bf0fd38aa7c92bca698e7beaadc92d9327743b",
    "date": "2024-09-21T16:12:08Z",
    "message": "Fix hyphenated vips options incorrectly being used with Java-style names (#61)",
    "author": "carrot"
  },
  "repository_info": {
    "structure_summary": ".\n./.git\n./.git/branches\n./.git/description\n./.git/hooks\n./.git/hooks/applypatch-msg.sample\n./.git/hooks/commit-msg.sample\n./.git/hooks/post-update.sample\n./.git/hooks/pre-applypatch.sample\n./.git/hooks/pre-commit.sample\n./.git/hooks/pre-merge-commit.sample\n./.git/hooks/pre-push.sample\n./.git/hooks/pre-receive.sample\n./.git/hooks/push-to-checkout.sample\n./.git/hooks/update.sample\n./.git/hooks/fsmonitor-watchman.sample\n./.git/hooks/pre-rebase.sample\n./.git/hooks/prepare-commit-msg.sample\n./.git/hooks/sendemail-validate.sample\n./.git/info\n./.git/info/exclude\n./.git/config\n./.git/objects\n./.git/objects/pack\n./.git/objects/pack/pack-08fdbefd75497be75263747d7945924c78e54338.pack\n./.git/objects/pack/pack-08fdbefd75497be75263747d7945924c78e54338.rev\n./.git/objects/pack/pack-08fdbefd75497be75263747d7945924c78e54338.idx\n./.git/objects/info\n./.git/HEAD\n./.git/refs\n./.git/refs/heads\n./.git/refs/heads/main\n./.git/refs/tags\n./.git/refs/remotes\n./.git/refs/remotes/origin\n./.git/refs/remotes/origin/HEAD\n./.git/packed-refs\n./.git/logs\n./.git/logs/refs\n./.git/logs/refs/remotes\n./.git/logs/refs/remotes/origin\n./.git/logs/refs/remotes/origin/HEAD\n./.git/logs/refs/heads\n./.git/logs/refs/heads/main\n./.git/logs/HEAD\n./.git/index\n./.editorconfig\n./.gitattributes\n./.github\n./.github/workflows\n./.github/workflows/checks.yml\n./.github/workflows/docs.yml\n./.github/workflows/release.yml\n./.github/FUNDING.yml\n./.github/dependabot.yml\n./.run\n./.run/Discover Vips operations.run.xml\n./.run/Generate V classes.run.xml\n./.run/Generate VipsHelper class.run.xml\n./.run/Run samples.run.xml\n./LICENSE\n./core\n./core/src\n./core/src/integrationTest\n./core/src/integrationTest/java\n./core/src/integrationTest/java/app\n./core/src/integrationTest/java/app/photofox\n./core/src/integrationTest/java/app/photofox/vipsffm\n./core/src/integrationTest/java/app/photofox/vipsffm/SenseCheckTest.java\n./core/src/main\n./core/src/main/java\n./core/src/main/java/app\n./core/src/main/java/app/photofox\n./core/src/main/java/app/photofox/vipsffm\n./core/src/main/java/app/photofox/vipsffm/VEnum.java\n./core/src/main/java/app/photofox/vipsffm/VNamedEnum.java\n./core/src/main/java/app/photofox/vipsffm/Vips.java\n./core/src/main/java/app/photofox/vipsffm/VipsError.java\n./core/src/main/java/app/photofox/vipsffm/VipsOption.java\n./core/src/main/java/app/photofox/vipsffm/VipsRunnable.java\n./core/src/main/java/app/photofox/vipsffm/enums\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationBoolean.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationComplex.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationComplex2.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationComplexget.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationMath.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationMath2.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationMorphology.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationRelational.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsOperationRound.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsPCS.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsPrecision.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsRegionShrink.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsSize.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsTextWrap.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsAccess.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsAlign.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsAngle.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsAngle45.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsBandFormat.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsBlendMode.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsCoding.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsCombine.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsCombineMode.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsCompassDirection.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsDirection.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsExtend.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsFailOn.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignDzContainer.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignDzDepth.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignDzLayout.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignHeifCompression.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignHeifEncoder.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignPpmFormat.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignSubsample.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignTiffCompression.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignTiffPredictor.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignTiffResunit.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsForeignWebpPreset.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsIntent.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsInteresting.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsInterpretation.java\n./core/src/main/java/app/photofox/vipsffm/enums/VipsKernel.java\n./core/src/main/java/app/photofox/vipsffm/jextract\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecValueArray.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GEnumClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GEnumValue.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GInputStream.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GInputStreamClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GObject.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GObjectClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpec.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GTypeClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GTypeInstance.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GValue.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GValueArray.java\n./core/src/main/java/app/photofox/vipsffm/jextract/VipsTypeMap2Fn.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GEnumClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GEnumValue.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GInputStream.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GInputStreamClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GObject.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GObjectClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpec.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GTypeClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GTypeInstance.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GValue.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GClassFinalizeFunc.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GClassInitFunc.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GObjectConstructParam.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GObjectFinalizeFunc.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GObjectGetPropertyFunc.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GObjectSetPropertyFunc.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecBoolean.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecBoxed.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecChar.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecDouble.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecEnum.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecFlags.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecFloat.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecGType.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecInt.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecInt64.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecLong.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecObject.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecOverride.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecParam.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecPointer.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecString.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecTypeInfo.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecUChar.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecUInt.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecUInt64.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecULong.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecUnichar.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecValueArray.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GParamSpecVariant.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GTypeClassCacheFunc.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GValueArray.java\n./core/src/main/java/app/photofox/vipsffm/jextract/GValueTransform.java\n./core/src/main/java/app/photofox/vipsffm/jextract/VipsRaw.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GObjectConstructParam.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecBoolean.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecBoxed.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecChar.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecClass.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecDouble.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecEnum.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecFlags.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecFloat.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecGType.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecInt.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecInt64.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecLong.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecObject.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecOverride.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecParam.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecPointer.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecString.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecTypeInfo.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecUChar.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecUInt.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecUInt64.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecULong.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecUnichar.java\n./core/src/main/java/app/photofox/vipsffm/jextract/_GParamSpecVariant.java\n./core/src/main/java/app/photofox/vipsffm/VBlob.java\n./core/src/main/java/app/photofox/vipsffm/VImage.java\n./core/src/main/java/app/photofox/vipsffm/VInterpolate.java\n./core/src/main/java/app/photofox/vipsffm/VSource.java\n./core/src/main/java/app/photofox/vipsffm/VTarget.java\n./core/src/main/java/app/photofox/vipsffm/VipsHelper.java\n./core/src/main/java/app/photofox/vipsffm/VipsInvoker.java\n./core/src/main/java/app/photofox/vipsffm/VipsLibLookup.java\n./core/src/main/java/app/photofox/vipsffm/VipsValidation.java\n./core/src/test\n./core/src/test/java\n./core/src/test/java/app\n./core/src/test/java/app/photofox\n./core/src/test/java/app/photofox/vipsffm\n./core/src/test/java/app/photofox/vipsffm/SenseCheckTest.java\n./core/build.gradle.kts\n./generator\n./generator/src\n./generator/src/main\n./generator/src/main/kotlin\n./generator/src/main/kotlin/vipsffm\n./generator/src/main/kotlin/vipsffm/Main.kt\n./generator/src/main/kotlin/vipsffm/ReplaceVipsLoader.kt\n./generator/src/main/kotlin/vipsffm/DiscoverVipsOperations.kt\n./generator/src/main/kotlin/vipsffm/GenerateVClasses.kt\n./generator/src/main/kotlin/vipsffm/GenerateVipsHelperClass.kt\n./generator/build.gradle.kts\n./gradle.properties\n./gradle\n./gradle/wrapper\n./gradle/wrapper/gradle-wrapper.jar\n./gradle/wrapper/gradle-wrapper.properties\n./gradlew\n./gradlew.bat\n./sample\n./sample/src\n./sample/src/main\n./sample/src/main/kotlin\n./sample/src/main/kotlin/vipsffm\n./sample/src/main/kotlin/vipsffm/RunnableSample.kt\n./sample/src/main/kotlin/vipsffm/HelperGetVersionSample.kt\n./sample/src/main/kotlin/vipsffm/RawGetVersionSample.kt\n./sample/src/main/kotlin/vipsffm/SampleHelper.kt\n./sample/src/main/kotlin/vipsffm/SampleRunner.kt\n./sample/src/main/kotlin/vipsffm/VImageChainSample.kt\n./sample/src/main/kotlin/vipsffm/VImageCopyWriteSample.kt\n./sample/src/main/kotlin/vipsffm/VImageCreateThumbnailSample.kt\n./sample/src/main/kotlin/vipsffm/VOptionHyphenSample.kt\n./sample/src/main/kotlin/vipsffm/VSourceTargetSample.kt\n./sample/src/main/resources\n./sample/src/main/resources/.gitkeep\n./sample/src/main/resources/sample_images\n./sample/src/main/resources/sample_images/fox.jpg\n./sample/src/main/resources/sample_images/fox_license.txt\n./sample/src/main/resources/sample_images/rabbit.jpg\n./sample/src/main/resources/sample_images/rabbit_license.txt\n./sample/build.gradle.kts\n./serve_docs.sh\n./.gitignore\n./README.md\n./build.gradle.kts\n./build_docs.sh\n./docs\n./docs/index.md\n./generate_ffm_bindings.sh\n./mkdocs.yml\n./publish_release_to_maven_central.sh\n./run_samples.sh\n./settings.gradle.kts\n./site\n./site/404.html\n./site/css\n./site/css/base.css\n./site/css/bootstrap.min.css\n./site/css/bootstrap.min.css.map\n./site/css/brands.min.css\n./site/css/fontawesome.min.css\n./site/css/solid.min.css\n./site/css/v4-font-face.min.css\n./site/img\n./site/img/favicon.ico\n./site/img/grid.png\n./site/index.html\n./site/js\n./site/js/base.js\n./site/js/bootstrap.bundle.min.js\n./site/js/bootstrap.bundle.min.js.map\n./site/js/darkmode.js\n./site/search\n./site/search/lunr.js\n./site/search/main.js\n./site/search/search_index.json\n./site/search/worker.js\n./site/sitemap.xml\n./site/sitemap.xml.gz\n./site/webfonts\n./site/webfonts/fa-brands-400.ttf\n./site/webfonts/fa-brands-400.woff2\n./site/webfonts/fa-regular-400.ttf\n./site/webfonts/fa-regular-400.woff2\n./site/webfonts/fa-solid-900.ttf\n./site/webfonts/fa-solid-900.woff2\n./site/webfonts/fa-v4compatibility.ttf\n./site/webfonts/fa-v4compatibility.woff2\n",
    "readme": "\n--- ./README.md ---\n# vips-ffm\n\n[libvips](https://github.com/libvips/libvips) bindings for JVM projects, using the \"Foreign Function & Memory API\"\n([JEP 454](https://openjdk.org/jeps/454)), and the \"Class-File API\" ([JEP 457](https://openjdk.org/jeps/457)) released in JDK 22. The combination\nof libvips, FFM, and auto-generated helpers means these bindings are complete (supporting all libvips operations), safe,\nand fast.\n\nSupports a vast range of image formats, including HEIC, JXL, WebP, PNG, JPEG, and more. Pronounced \"vips (like zips)\neff-eff-emm\".\n\nUsed the library, or just like what you've read so far? Please give the repo a star \ud83c\udf1f\ufe0f!\n\n## Usage\n\n```kotlin\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation(\"app.photofox.vips-ffm:vips-ffm-core:0.5.1\")\n}\n```\n\nAs the project uses the FFM API, it must target JDK 22+. The bindings are currently generated from libvips `8.15.3`.\n\nAll libvips operations are exposed via helper classes, like `VImage`. You must provide an [Arena][1] to operations like\n`VImage.newFromFile`, and this constrains the lifetime of objects generated during usage. Be careful to only keep the \narena, and image, in scope for as long as you need to! If the arena doesn't close, your memory usage will grow forever.\nConstructing the `VImage` object is cheap, as it's just a wrapper, so make them as you need.\n\nThis library **does not** include `libvips` in the download, you must add it to the system you're building on, then make\nsure it's available in `DYLD_LIBRARY_PATH` (on macOS) or `LD_LIBRARY_PATH` (on Linux). \n\n\ud83d\udea8 Bindings generated by `jextract` are available in `VipsRaw`, and wrapped with validation in `VipsHelper`. It's\ndifficult to use `VipsRaw` functions without accidentally causing memory leaks, or even segfaults! If what you want to\ndo is available in `VImage` and other `V`-prefixed classes, use those instead. If you notice something missing, open a\nGitHub Issue.\n\n### Thumbnail sample\n\nTo get a feeling for the bindings, here's an indicative sample written in Kotlin (using the Java bindings) that:\n* Loads an original JPEG image from disk\n* Writes a copy of it to disk\n* Creates a 400px thumbnail from the original, and writes that to disk\n\n```kotlin\nimport app.photofox.vipsffm.Vips\nimport app.photofox.vipsffm.VImage\nimport app.photofox.vipsffm.VipsOption\nimport app.photofox.vipsffm.enums.VipsAccess\n\n// ...\n\n// Call once to initialise libvips when your program starts\nVips.init()\n\n// Use `Vips.run` to wrap your usage of the API, and get an arena with an appropriate lifetime to use\nVips.run { arena ->\n    val sourceImage = VImage.newFromFile(\n      arena,\n      \"sample/src/main/resources/sample_images/rabbit.jpg\",\n      VipsOption.Enum(\"access\", VipsAccess.ACCESS_SEQUENTIAL)\n    )\n    val sourceWidth = sourceImage.width\n    val sourceHeight = sourceImage.height\n    logger.info(\"source image size: $sourceWidth x $sourceHeight\")\n\n    val outputPath = workingDirectory.resolve(\"rabbit_copy.jpg\")\n    sourceImage.writeToFile(outputPath.absolutePathString())\n\n    val thumbnail = sourceImage.thumbnail(\n      \"sample/src/main/resources/sample_images/rabbit.jpg\",\n      400\n    )\n    val thumbnailWidth = thumbnail.width\n    val thumbnailHeight = thumbnail.height\n    logger.info(\"thumbnail image size: $thumbnailWidth x $thumbnailHeight\")\n}\n\n// Optionally call at the end of your program, for memory leak detection\nVips.shutdown()\n```\n\nThe project has several samples, [described below](#samples).\n\n## Project goals\n\nIdeas and suggestions are welcome, but please make sure they fit in to these goals, or you have a good argument about\nwhy a goal should change!\n\n* Avoid manual work by automating as much as possible. This means upstream changes can be rapidly integrated.\n* Use the libvips GObject API for operations, as described in the [libvips documentation](https://www.libvips.org/API/current/binding.html)\n* Provide access to the raw bindings (`VipsHelper`), so users aren't blocked by helper bugs or API annoyances.\n* Incubate in [Photo Fox](https://github.com/lopcode/photo-fox) with some \"real world\" usage.\n\n## Samples\n\nSamples are included that show various usages of the `libvips` bindings. They include validations, and run on GitHub\nActions as \"end-to-end tests\" during development.\n\nTo get set up to run samples (on macOS):\n* `brew install vips`\n* `sdk use java 22-open`\n* `./setup_lib_symlinks.sh`\n* (Optional, to regenerate bindings) `./generate_ffm_bindings.sh`\n* Then either:\n  * Run `./run_samples.sh` in your terminal\n  * Run `SampleRunner` in IntelliJ to run samples and validations\n\n```\n[main] INFO vipsffm.SampleRunner - clearing sample run directory at path \"sample_run\"\n[main] INFO vipsffm.SampleRunner - running sample \"RawGetVersionSample\"...\n[main] INFO vipsffm.RawGetVersionSample - libvips version: \"8.15.3\"\n[main] INFO vipsffm.SampleRunner - validation succeeded \u2705\n[main] INFO vipsffm.SampleRunner - running sample \"HelperGetVersionSample\"...\n[main] INFO vipsffm.HelperGetVersionSample - libvips version: \"8.15.3\"\n[main] INFO vipsffm.SampleRunner - validation succeeded \u2705\n[main] INFO vipsffm.SampleRunner - running sample \"VImageCreateThumbnailSample\"...\n[main] INFO vipsffm.RawGetVersionSample - source image size: 2490 x 3084\n[main] INFO vipsffm.RawGetVersionSample - thumbnail image size: 323 x 400\n[main] INFO vipsffm.SampleRunner - validation succeeded \u2705\n[main] INFO vipsffm.SampleRunner - running sample \"VImageChainSample\"...\n[main] INFO vipsffm.SampleRunner - validation succeeded \u2705\n[main] INFO vipsffm.SampleRunner - running sample \"VSourceTargetSample\"...\n[main] INFO vipsffm.SampleRunner - validation succeeded \u2705\n[main] INFO vipsffm.SampleRunner - running sample \"VImageWriteSample\"...\n[main] INFO vipsffm.SampleRunner - validation succeeded \u2705\n[main] INFO vipsffm.SampleRunner - shutting down vips to check for memory leaks...\nmemory: high-water mark 82.66 MB\n[main] INFO vipsffm.SampleRunner - all samples ran successfully \ud83c\udf89\n```\n\n## Releasing\n\n* GitHub Releases automatically result in a deployment to GitHub Packages\n* Maven Central releases happen manually \n  * This can only be done by @lopcode\n  * And only after a GitHub Release is made\n  * Run `./publish_release_to_maven_central.sh <version matching github release version>` \n\n[1]: https://docs.oracle.com/en/java/javase/22/core/memory-segments-and-arenas.html\n\n\n--- ./docs/index.md ---\n# Welcome to MkDocs\n\nFor full documentation visit [mkdocs.org](https://www.mkdocs.org).\n\n## Commands\n\n* `mkdocs new [dir-name]` - Create a new project.\n* `mkdocs serve` - Start the live-reloading docs server.\n* `mkdocs build` - Build the documentation site.\n* `mkdocs -h` - Print help message and exit.\n\n## Project layout\n\n    mkdocs.yml    # The configuration file.\n    docs/\n        index.md  # The documentation homepage.\n        ...       # Other markdown pages, images and other files.\n\n\n",
    "readme_filenames": [
      "./README.md",
      "./docs/index.md"
    ],
    "github_workflows": {
      ".github/workflows/checks.yml": "name: Build and check\n\non:\n  push:\n    branches: [\"main\"]\n  pull_request:\n    branches: [\"main\"]\n  workflow_dispatch:\n\njobs:\n  check:\n    runs-on: ubuntu-24.04\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Setup Java\n        uses: actions/setup-java@v4\n        with:\n          distribution: \"temurin\"\n          java-version: 22\n\n      - name: Setup Gradle\n        uses: gradle/actions/setup-gradle@v3\n        with:\n          gradle-version: 8.10.1\n\n      - name: Run checks\n        run: ./gradlew build check shadowJar\n\n      - name: Run samples\n        run: |\n          vips --version || (sudo apt update && sudo apt install libvips-dev)\n          ./run_samples.sh\n\n  windows-sense-check:\n    runs-on: windows-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Setup Java\n        uses: actions/setup-java@v4\n        with:\n          distribution: \"temurin\"\n          java-version: 22\n\n      - name: Setup Gradle\n        uses: gradle/actions/setup-gradle@v3\n        with:\n          gradle-version: 8.10.1\n\n      - name: Run samples\n        shell: pwsh\n        run: |\n          Invoke-WebRequest \"https://github.com/libvips/build-win64-mxe/releases/download/v8.15.3/vips-dev-w64-web-8.15.3-static-ffi.zip\" -OutFile \"vips_w64.zip\"\n          (Get-FileHash .\\vips_w64.zip).Hash -eq \"60500d990c6063a1e95f1ff29a540c5943537ccbed4dd55711947b68229774ee\"\n          Expand-Archive vips_w64.zip\n          $env:Path = \"$pwd\\vips_w64\\vips-dev-8.15;$pwd\\vips_w64\\vips-dev-8.15\\bin;\" + $env:Path \n          Write-Output $env:Path\n          Get-ChildItem .\\vips_w64\\vips-dev-8.15\n          .\\gradlew.bat sample:clean sample:shadowJar\n          java -jar sample/build/libs/sample-all.jar",
      ".github/workflows/docs.yml": "# Simple workflow for deploying static content to GitHub Pages\nname: Deploy static content to Pages\n\non:\n  # Runs on pushes targeting the default branch\n  push:\n    branches: [\"main\"]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\n# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.\n# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n\njobs:\n  # Single deploy job since we're just deploying\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Setup Pages\n        uses: actions/configure-pages@v5\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: 'site'\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n",
      ".github/workflows/release.yml": "name: Publish to GitHub Packages\n\non:\n  release:\n    types: [created]\n\njobs:\n  publish:\n    runs-on: ubuntu-24.04\n    permissions:\n      contents: read\n      packages: write\n    env:\n      GITHUB_VERSION: ${{ github.ref_name }}\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Setup Java\n        uses: actions/setup-java@v4\n        with:\n          distribution: \"temurin\"\n          java-version: 22\n\n      - name: Setup Gradle\n        uses: gradle/actions/setup-gradle@v3\n        with:\n          gradle-version: 8.10.1\n\n      - name: Run checks\n        run: ./gradlew build check shadowJar\n\n      - name: Run samples\n        run: |\n          vips --version || (sudo apt update && sudo apt install libvips-dev)\n          ./run_samples.sh\n\n      - name: Publish to GitHub Packages\n        run: ./gradlew core:publish\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
    }
  },
  "llm_calls_before_build": 0,
  "github_workflows_found": [
    ".github/workflows/checks.yml",
    ".github/workflows/docs.yml",
    ".github/workflows/release.yml"
  ],
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM eclipse-temurin:22-jdk-jammy\n\n# Install system dependencies including libvips-dev required by the project\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    git \\\n    libvips-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Clone repository and checkout specific commit with bug fix verification\nRUN git clone https://github.com/lopcode/vips-ffm.git /app\nWORKDIR /app\nRUN git checkout f6bf0fd38aa7c92bca698e7beaadc92d9327743b\n\n# Build project using Gradle Wrapper (uses project's specified Gradle version)\nRUN ./gradlew build",
  "dockerfile_build_success": true,
  "successful_candidate_index": 2,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "llm_calls_total": 5
}