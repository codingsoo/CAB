[
  {
    "number": 1775,
    "title": "New version scheme",
    "created_at": "2024-07-16T08:19:51Z",
    "closed_at": "2024-07-16T14:58:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1775",
    "body": "Hi there, I noticed that the version changed from 4.7.1 to 4.7.1.1 - is this intentional? May I ask what's the reason to introduce a new digit?\r\n\r\nBest regards,\r\nGeorg",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1775/comments",
    "author": "cz-dev-ge",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-07-16T14:58:30Z",
        "body": "It's a nuget package fix for MailKit 4.7.1 and I didn't want to make a new release of MimeKit (e.g. bumping both versions to 4.7.2), so I just released a fixed nuget package of MailKit and added a digit."
      },
      {
        "user": "cz-dev-ge",
        "created_at": "2024-07-17T11:02:09Z",
        "body": "Ugly but fair enough ;)"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-07-18T01:09:50Z",
        "body": "I tend to stick with 3 digits, if/when you see a fourth digit, it's a packaging fix."
      }
    ]
  },
  {
    "number": 1742,
    "title": "in the sample project of imapidle, is it possible to add a sample method for how to cancel the \"IDLE\" mode. thanks!",
    "created_at": "2024-04-05T16:39:45Z",
    "closed_at": "2024-04-05T21:26:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1742",
    "body": "Thanks for your great works in advance!\r\n\r\nI am doing a PoC on a mail client. and seeing how to support \"IDLE\" mode to show the coming emails notification ,flags change,...\r\n\r\nI tested \"ImapIdle\", it is running perfect as the expected. but don't know how to exit the \"IDLE\" mode to serve a user request. Is there any the best practice for the following scenario:\r\n The mail client is running in \"IDLE\" mode, then user want to Fetch and read an email. how to exit the \"IDLE\" mode and execute the \"Fetch\" immediately?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1742/comments",
    "author": "kenizhou",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-04-05T21:26:05Z",
        "body": "You just need to cancel the doneToken. It can literally be done anywhere in your code."
      },
      {
        "user": "kenizhou",
        "created_at": "2024-04-05T23:44:23Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 1667,
    "title": "Is it supposed to work?",
    "created_at": "2023-11-17T16:19:04Z",
    "closed_at": "2023-11-17T16:41:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1667",
    "body": "Trying to connect to an imap server and get the list of messages.\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            ImapClient client = new ImapClient(new ProtocolLogger(\"imap.log\"));\r\n            client.Connect(\"imap.one.com\", 993, true);\r\n            client.Authenticate(new NetworkCredential(\"...@....me.uk\", \"...\"));\r\n            foreach (FolderNamespace? n in client.PersonalNamespaces)\r\n            {\r\n                Console.WriteLine($\"Namespace {n.Path}\");\r\n            }\r\n            foreach (IMailFolder f in client.GetFolders(client.PersonalNamespaces[0]))\r\n            {\r\n                Console.WriteLine($\"Folder {f.Name}\");\r\n            }\r\n\r\n            IMailFolder ff = client.GetFolder(client.PersonalNamespaces[0]);\r\n            FolderAccess fa = ff.Open(FolderAccess.ReadWrite);\r\n            IFetchRequest rq = new FetchRequest(MessageSummaryItems.All);\r\n            IList<IMessageSummary> msgs = ff.Fetch(0, ff.Count, rq);\r\n            foreach(IMessageSummary m in msgs)\r\n            {\r\n                Console.WriteLine(m.NormalizedSubject);\r\n            }\r\n        }\r\n```\r\n\r\nBut the `.Fetch` fails with\r\n> `MailKit.Net.Imap.ImapCommandException: 'The IMAP server replied to the 'FETCH' command with a 'BAD' response: Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).'`\r\n\r\nHere is the log file:\r\n```\r\nConnected to imaps://imap.one.com:993/\r\nS: * OK [CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE LITERAL+ AUTH=PLAIN AUTH=LOGIN] Dovecot ready.\r\nC: A00000000 AUTHENTICATE PLAIN ********\r\nS: A00000000 OK [CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS BINARY MOVE SNIPPET=FUZZY PREVIEW=FUZZY STATUS=SIZE SAVEDATE LITERAL+ NOTIFY QUOTA] Logged in\r\nC: A00000001 NAMESPACE\r\nS: * NAMESPACE ((\"INBOX.\" \".\")) NIL NIL\r\nS: A00000001 OK Namespace completed (0.001 + 0.000 secs).\r\nC: A00000002 LIST \"\" \"INBOX\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\HasChildren) \".\" \"INBOX\"\r\nS: A00000002 OK List completed (0.001 + 0.000 secs).\r\nC: A00000003 LIST \"\" \"INBOX.*\" RETURN (SUBSCRIBED CHILDREN)\r\nS: A00000003 OK List completed (0.001 + 0.000 secs).\r\nC: A00000004 SELECT INBOX (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft \\*)] Flags permitted.\r\nS: * 1 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDVALIDITY 1699716082] UIDs valid\r\nS: * OK [UIDNEXT 5] Predicted next UID\r\nS: * OK [HIGHESTMODSEQ 10] Highest\r\nS: A00000004 OK [READ-WRITE] Select completed (0.001 + 0.000 secs).\r\nC: A00000005 FETCH 1:2 ALL\r\nS: A00000005 BAD Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).\r\n```\r\n\r\nWhat is wrong?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1667/comments",
    "author": "rwb196884",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-11-17T16:41:35Z",
        "body": "Does accessing an array using `array[array.Count]` work?\r\n\r\nHere's your problem:\r\n\r\n```csharp\r\nff.Fetch(0, ff.Count, rq);\r\n```\r\n\r\nChange that to:\r\n\r\n```csharp\r\nff.Fetch(0, ff.Count - 1, rq);\r\n```"
      },
      {
        "user": "rwb196884",
        "created_at": "2023-11-18T10:27:12Z",
        "body": "Thank you.\r\nI was working from the example C# code and I thought it was a batch size.\r\n\r\nThis might be useful?\r\n\r\n```\r\n    internal class MailkitLogger : IProtocolLogger\r\n    {\r\n        private ILogger<MailkitLogger> _Logger;\r\n        public MailkitLogger(ILogger<MailkitLogger> logger)\r\n        {\r\n            _Logger = logger;\r\n        }\r\n\r\n        public IAuthenticationSecretDetector AuthenticationSecretDetector { get; set; }\r\n\r\n        public void Dispose() { }\r\n\r\n        public void LogClient(byte[] buffer, int offset, int count)\r\n        {\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                using (ProtocolLogger l = new ProtocolLogger(ms, true) { AuthenticationSecretDetector = AuthenticationSecretDetector })\r\n                {\r\n                    l.LogClient(buffer, offset, count);\r\n                }\r\n                ms.Flush();\r\n                ms.Position = 0;\r\n                using (StreamReader r = new StreamReader(ms))\r\n                {\r\n                    string msg = r.ReadToEnd();\r\n                    _Logger.LogInformation(msg);\r\n                }\r\n            }\r\n        }\r\n\r\n        public void LogConnect(Uri uri)\r\n        {\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                using (ProtocolLogger l = new ProtocolLogger(ms, true) { AuthenticationSecretDetector = AuthenticationSecretDetector })\r\n                {\r\n                    l.LogConnect(uri);\r\n                }\r\n                ms.Flush();\r\n                ms.Position = 0;\r\n                using (StreamReader r = new StreamReader(ms))\r\n                {\r\n                    string msg = r.ReadToEnd();\r\n                    _Logger.LogInformation(msg);\r\n                }\r\n            }\r\n        }\r\n\r\n        public void LogServer(byte[] buffer, int offset, int count)\r\n        {\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                using (ProtocolLogger l = new ProtocolLogger(ms, true) { AuthenticationSecretDetector = AuthenticationSecretDetector })\r\n                {\r\n                    l.LogServer(buffer, offset, count);\r\n                }\r\n                ms.Flush();\r\n                ms.Position = 0;\r\n                using (StreamReader r = new StreamReader(ms))\r\n                {\r\n                    string msg = r.ReadToEnd();\r\n                    _Logger.LogInformation(msg);\r\n                }\r\n            }\r\n        }\r\n    }\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-11-18T12:52:45Z",
        "body": "Not sure what I could use your code snippet for."
      }
    ]
  },
  {
    "number": 1651,
    "title": "How to transfer an \"inline\" image via SmtpClient.Send",
    "created_at": "2023-10-02T11:07:02Z",
    "closed_at": "2023-10-02T14:01:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1651",
    "body": "I'm trying to send a message with an **inline** image. To do this, I'm using the `BodyBuilder` with the following code:\r\n\r\n    var stream = new FileStream(linkedResource.LocalFilename, FileMode.Open);\r\n    var mimePart = new MimePart()\r\n    {\r\n        Content = new MimeContent(stream),\r\n        ContentId = linkedResource.ContentId,\r\n        ContentTransferEncoding = ContentEncoding.Base64,\r\n        FileName = linkedResource.Filename,\r\n    };\r\n    mimePart.ContentDisposition.IsAttachment = false;\r\n    mimePart.ContentType.MediaType = HtmlParserHelper.GetImageContentTypeByFile(linkedResource.LocalFilename);\r\n    builder.LinkedResources.Add(mimePart;\r\n\r\nUnfortunately, the image will be transffered as an **attachment**. The received mail shows the following headers for this image:\r\n\r\n\tContent-Type: image/png/octet-stream;\r\n\t\tname=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\tContent-Id: <d5316e0e5fc04362a7086deae753804f@xyz>\r\n\tContent-Transfer-Encoding: base64\r\n\tContent-Disposition: attachment;\r\n\t\tfilename=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\r\nThe `Content-Disposition` is still an attachment, even I set `IsAttachment` to `false`.\r\n\r\nWhat is the correct way to tell the `MimePart` to be sent as `inline`?\r\n\r\nThanks a lot for your answer.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1651/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-10-02T14:01:16Z",
        "body": "If you are going to use a BodyBuilder, just do this:\r\n\r\n```csharp\r\nvar mimePart = builder.LinkedResources.Add(linkedResource.LocalFilename);\r\nmimePart.ContentDisposition.Disposition = ContentDisposition.Inline;\r\n```\r\n\r\nAlso, the following line of code is creating an invalid Content-Type header:\r\n\r\n```csharp\r\nmimePart.ContentType.MediaType = HtmlParserHelper.GetImageContentTypeByFile(linkedResource.LocalFilename);\r\n```\r\n\r\n... so don't do that. Pay special attention to the ContentType class. It has a Media Type and a *MediaSubtype*. The string returned by your HtmlParserHelper contains both values separated by a `/` which means you end up with an invalid mime-type like `image/png/octet-stream`."
      },
      {
        "user": "ghost",
        "created_at": "2023-10-02T16:32:51Z",
        "body": "Ok, your solution is very easy, thanks a lot for it.\r\n\r\nBut I still get these headers:\r\n\r\n\tContent-Type: image/png/octet-stream;\r\n\t\tname=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\tContent-Id: <d5316e0e5fc04362a7086deae753804f@xyz>\r\n\tContent-Transfer-Encoding: base64\r\n\tContent-Disposition: attachment;\r\n\t\tfilename=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\r\n... so it's still an *attachment* and not *inline*.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-10-02T16:34:52Z",
        "body": "Those headers are definitely NOT from the code snippet that I pasted, they are produced by your old code."
      },
      {
        "user": "ghost",
        "created_at": "2023-10-02T17:00:38Z",
        "body": "Yes, my mistake. Sorry."
      }
    ]
  },
  {
    "number": 1547,
    "title": "Message index #question",
    "created_at": "2023-04-12T16:28:38Z",
    "closed_at": "2023-04-12T17:00:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1547",
    "body": "Hi,\r\n\r\nI apologize if this is a stupid question but I can not find the information I need from the official documentation. I know that if I delete a message it is actually deleted when the client disconnects. I need to know if calling the delete method on a message , this action change the other messages indexes, so incrementing the index and calling get message will return the next message from the box?\r\n\r\nRegards",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1547/comments",
    "author": "HostVanyaD",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-04-12T17:00:59Z",
        "body": "Yes, for POP3, calling the Delete method on index 1, 2, then 3 will result in indexes 1, 2, and 3 to be deleted and not 1, 3, and 5.\r\n"
      },
      {
        "user": "HostVanyaD",
        "created_at": "2023-04-13T05:50:25Z",
        "body": "Thanks, for the quick answer!\r\nSo I open the pop3Client start reading messages by index, I delete index 1 message for example, and right after if I want to get the next message I need to call getMessage with index 2, right? I just want to be sure that I will not loose any data or skip an important message."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-04-13T13:36:21Z",
        "body": "Correct"
      }
    ]
  },
  {
    "number": 1537,
    "title": "Cannot use AddFlags on ImapClient.Inbox to delete message",
    "created_at": "2023-03-28T16:39:03Z",
    "closed_at": "2023-03-28T18:20:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1537",
    "body": "Hi.\r\n\r\ni just want do read an delete messages with an ImapClient so\r\n\r\nMailKit.Net.Imap.ImapClient clientIMAP = new MailKit.Net.Imap.ImapClient();\r\nAuthenticateAsync(clientIMAP).GetAwaiter().GetResult();  //OAT2 on office\r\nclientIMAP.Inbox.Open(MailKit.FolderAccess.ReadWrite);\r\nvar uids = clientIMAP.Inbox.Search(SearchQuery.All);  // ok access message no pb\r\n...\r\n...\r\n...\r\n\r\n//want to delete\r\nclientIMAP .Inbox.AddFlags   // but AddFlags   not exist on Inbox\r\n\r\nwhat i miss ?\r\n\r\nThanks a lot\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1537/comments",
    "author": "glebourg76",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-03-28T18:20:27Z",
        "body": "AddFlags is an extension method in 3.x for compatibility and for simpler use.\n\n---\n\nAdd a using MailKit; statement at the top of your source code"
      },
      {
        "user": "glebourg76",
        "created_at": "2023-03-28T18:27:53Z",
        "body": "Ha .. great!!!\r\nthx Jeff"
      }
    ]
  },
  {
    "number": 1516,
    "title": "Move and set flag Add Flags",
    "created_at": "2023-02-17T10:45:13Z",
    "closed_at": "2023-02-17T13:58:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1516",
    "body": "Is there any way to download message attachments and set Seen flag in one loop ? My current code looks like this :\r\n```\r\nfor (int i = 0; inbox.Count > i; i++)\r\n{\r\nvar message = inbox.GetMessage(0);\r\nforeach (var attachment in message.Attachments)\r\n                            {\r\n                                if (!(attachment is MessagePart))\r\n                                {\r\n                                    var part = (MimePart)attachment;\r\n                                    var fileName = part.FileName;\r\n/*\r\n.\r\n.\r\n.\r\nrest of my code to download attachments \r\n*/\r\n}\r\n```\r\nAfter that second loop :\r\n```\r\nforeach (var message in FMiesiac.Fetch(0, -1, MessageSummaryItems.UniqueId))\r\n{\r\n       FMiesiac.AddFlags(message.UniqueId, MessageFlags.Seen, true);\r\n}\r\n```\r\nThis code process 800 - 1200 e-mails so this second loop takes some additional time. Is there any way to download and set this flag in single loop ? \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1516/comments",
    "author": "pzelektron",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-02-17T13:58:13Z",
        "body": "Yea, just call AddFlags() in the same loop as GetMessage()."
      },
      {
        "user": "pzelektron",
        "created_at": "2023-02-17T14:34:31Z",
        "body": "Looks simple but in this first loop message doesn't have property UniqueId required by AddFlags()"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-02-17T14:48:06Z",
        "body": "You can AddFlags() to a message index as well, you don't necessarily need a UniqueId."
      },
      {
        "user": "pzelektron",
        "created_at": "2023-02-17T15:01:40Z",
        "body": "Thanks for helping now its working. For anyone interested in the topic this is the solution :\r\n```\r\nvar message = inbox.GetMessage(0);\r\ninbox.AddFlags(0, MessageFlags.Seen, true);\r\n```\r\n\r\n"
      }
    ]
  },
  {
    "number": 1449,
    "title": "Message flag 'seen' does not persist on Exchange server",
    "created_at": "2022-10-17T21:03:45Z",
    "closed_at": "2022-10-17T21:29:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1449",
    "body": "Hi, I was tasked with downloading messages from an old Exchange server 2010 (yes you read correctly).\r\nI am able to set the flag to seen and the server seems to acknowledge the request. However next time around this same message (based on uid) has no flags set.\r\n\r\nCode which opens the folder in question and sets the flag:\r\n```\r\nvar folder = await Client.GetFolderAsync(folderPath, CancellationToken);\r\nawait folder.OpenAsync(FolderAccess.ReadWrite, CancellationToken);\r\ntry\r\n{\r\n\tawait folder.RemoveFlagsAsync(uniqueId, MessageFlags.Seen, true);\r\n}\r\nfinally\r\n{\r\n\tawait folder.CloseAsync();\r\n}\r\n```\r\n\r\nProtocol log acknowledging the update:\r\n```\r\nC: A00000009 SELECT INBOX\r\nS: * 4 EXISTS\r\nS: * 0 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags\r\nS: * OK [UNSEEN 1] Is the first unseen message\r\nS: * OK [UIDVALIDITY 7937] UIDVALIDITY value\r\nS: * OK [UIDNEXT 67167] The next unique identifier value\r\nS: A00000009 OK [READ-WRITE] SELECT completed.\r\nC: A00000010 UID STORE 67162 -FLAGS.SILENT (\\Seen)\r\nS: A00000010 OK STORE completed.\r\nC: A00000011 LOGOUT\r\nS: * BYE Microsoft Exchange Server 2010 IMAP4 server signing off.\r\nS: A00000011 OK LOGOUT completed.\r\n```\r\n\r\nIs there something I am doing wrong?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1449/comments",
    "author": "Olby2000",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-10-17T21:14:36Z",
        "body": "You're removing the Seen flag, but it sounds like you want to *add* it.\r\n\r\nIf you remove the \\Seen flag, there won't be any flags set on it in the next session (which is what you are seeing, right?)"
      },
      {
        "user": "Olby2000",
        "created_at": "2022-10-17T21:22:19Z",
        "body": "Well, that's embarrassing. That's exactly what I was trying to do lol. I guess I got hung up on the semantics because I thought you need to remove \"something\" rather than add to make it read. Appreciate your help. Sorry to bother the mail guru!"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-10-17T21:29:11Z",
        "body": "No problem :-)"
      }
    ]
  },
  {
    "number": 1435,
    "title": "MimeMessage.Envelope would be helpful",
    "created_at": "2022-09-15T16:01:44Z",
    "closed_at": "2022-09-15T18:00:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1435",
    "body": "I'm using `MimeMessage.Load` to create a mime message from a file.\r\n\r\nMaybe you can implement the `MimeMessage.Envelope` like you have implemented `MessageSummary.Envelope`?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1435/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T18:00:13Z",
        "body": "MimeMessage already has all of the pre-parsed header values as properties so I'm not sure what the point would be?"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T18:05:19Z",
        "body": "Yes, I can access to `MimeMessage.Headers[HeaderId.MessageId]`. But this gives me the message id enclosed in &lt; and &gt;. So I have to remove it by myself.\r\n\r\nAdditionally, I have to call `DateUtils.TryParse` for `HeaderId.Date`.\r\n\r\nFor the header lists like `HeaderId.To` and `HeaderId.Bcc` I have more work too.\r\n\r\nI can live with the current solution. But the `Envelope` is the better way. ;-)"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T19:13:48Z",
        "body": "I recommend taking a look at `MimeMessage.MessageId`, `MimeMessage.Date`, `MimeMessage.To`, etc :-)\r\n\r\nBasically, Envelope's API mimics the subset of the `MimeMessage` API dealing with the commonly accessed headers."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-16T02:17:54Z",
        "body": "GREAT! Thank you.\n"
      }
    ]
  },
  {
    "number": 1417,
    "title": "Failed to convert the object type \"MimeKit.MimePart\" to the type \"MimeKit.TextPart\"",
    "created_at": "2022-08-22T05:14:47Z",
    "closed_at": "2022-08-22T13:37:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1417",
    "body": "Failed to cast the object type \"MimeKit.MimePart\" to the type \"MimeKit.TextPart\".\r\n\r\n```\r\n        client.GetFolder(\"FOLDER\").Open(FolderAccess.ReadOnly);\r\n\r\n        var uids = client.GetFolder(\"FOLDER\").Search(SearchQuery.DeliveredAfter(parseDateTime));\r\n\r\n        var messages = client.GetFolder(\"FOLDER\").Fetch(uids, MessageSummaryItems.Envelope | MessageSummaryItems.BodyStructure);\r\n\r\n        if (messages != null && messages.Count > 0)\r\n        {\r\n            foreach (var msg in messages)\r\n            {\r\n                var body = (TextPart)client.GetFolder(\"FOLDER\").GetBodyPart(msg.UniqueId, msg.BodyParts.First());\r\n```\r\n\r\nOn the last line of the code an error is called (topic name). The catch is that the code works! But for some reason an error popped up when parsing mail for a certain day. How can it be related? Maybe you know another way to get the message body out of the folder?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1417/comments",
    "author": "konstantinLyang",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-08-22T13:37:08Z",
        "body": "Well, the first BodyPart is not always the text body and you are casting whatever it finds to a TextPart which is why you are getting a cast exception.\r\n\r\nThere are 2 convenience properties: TextBody and HtmlBody that, when non-null, use heuristics to get the text/plain and text/html body parts."
      }
    ]
  },
  {
    "number": 1410,
    "title": "Performance issue",
    "created_at": "2022-07-26T15:55:11Z",
    "closed_at": "2022-07-26T17:22:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1410",
    "body": "When working with older Gmail accounts, and with it, using search after query, it seems like it's working in following way:\r\nInitially it's gathering message id's of entire folder, then filtering out message id's in regard to it's date.\r\n\r\nCorrect me if I am wrong, but downloading for example 100 emails for today for a new account takes way less time then picking out 100 emails from today with inbox having 3000 emails + over all time.\r\n\r\nIf I am not clear feel free to ask me for some more details.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1410/comments",
    "author": "M1z23R",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-07-26T16:01:56Z",
        "body": "That will all depend on the SEARCH implementation of the server.\r\n\r\nOr am I misunderstanding your question?"
      },
      {
        "user": "M1z23R",
        "created_at": "2022-07-26T16:51:06Z",
        "body": "Well, looking at the code now (Sorry I didn't do it before posting), it's working as it should - asking the server to return messages  SINCE xxx, I believed it was due to something else. But now I am even more confused as to why does it seem to work slower on older (bigger folders) accounts.\n\n---\n\nHow would I search for messages newer then certain unique ID message ?\r\nSince Uids query requires a list of Uids.\r\n\r\nAll and all, I would like to setup search query to return the same as following: \"SEARCH UID 1000:*\""
      },
      {
        "user": "jstedfast",
        "created_at": "2022-07-26T17:01:34Z",
        "body": "you can use a UniqueIdRange to represent a list of UIDs:\r\n\r\n```csharp\r\nvar range = new UniqueIdRange (new UniqueId (1000), UniqueId.MaxValue);\r\n```"
      },
      {
        "user": "M1z23R",
        "created_at": "2022-07-26T17:22:39Z",
        "body": "Works like a charm, thank you very much."
      }
    ]
  },
  {
    "number": 1405,
    "title": "Does the Move operation returns correctly the new uids?",
    "created_at": "2022-07-11T14:23:17Z",
    "closed_at": "2022-07-11T16:04:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1405",
    "body": "**Describe the bug**\r\nIn case of Aol and Yahoo carriers, the `MoveTo` operation result is not correct. I'm not sure if the issue comes from them or from the Mailkit.\r\nI move **two** messages from the inbox to a custom folder, let's say the uids in inbox are 186 and 187. The move returns the destination uids, which are (lets' say): 22 and 23. So, the 186 became 22 in the destination folder and the 187 became 23. But actually this is not corect, the order should be inverted.\r\nWhen I debug the move operation, this is what I see: (check protocol logs as well below)\r\n```\r\nuniqueIdMap\r\n\tDestination\t{22:23}\r\n\tKeys\t{186:187}\r\n\tSource\t{186:187}\r\n\tValues\t{22:23}\r\n\t\tCount\t2\r\n\t\tSortOrder\tAscending\r\nResults View\r\n\t[0]\t{[{186}, {22}]}\r\n\t[1]\t{[{187}, {23}]}\r\n```\r\n\r\nI checked the same scenario with Gmail, and I found the following:\r\n```\r\nuniqueIdMap\r\n\tDestination\t{9,8}\r\n\tKeys\t{1747,1750}\r\n\tSource\t{1747,1750}\r\n\tValues\t{9,8}\r\n\t\tCount\t2\r\n\t\tSortOrder\tDescending\r\nResults View\r\n\t[0]\t{[{1747}, {9}]}\r\n\t[1]\t{[{1750}, {8}]}\r\n```\r\nSo basically the difference is that the sort order is Descending, and this way it sets correctly the new uids.\r\n\r\n**Platform:**\r\n - OS: Windows\r\n - .NET Runtime: Core 3.1\r\n - MailKit Version: 2.11.1\r\n\r\n**Protocol Logs**\r\n```\r\nC: X00000057 UID MOVE 187:186 xcc\r\nS: * OK [COPYUID 1657263256 186:187 22:23]\r\nS: * 159 EXPUNGE\r\nS: * 159 EXPUNGE\r\nS: X00000057 OK UID MOVE completed\r\n```\r\n\r\nBased on your experience, can I do simply to invert the values order in this case? Or what else could you suggest?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1405/comments",
    "author": "atiyka",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-07-11T16:04:33Z",
        "body": "With the protocol logs you pasted, what makes you think they need to be inverted?\n\n---\n\nalso, I would *always* use ascending ordered lists of indexes/uids when communicating with IMAP.\r\n\r\nMost servers handle descending uids/indexes correctly, but some do not.\n\n---\n\nBased on the protocol log, the mapping is correct."
      },
      {
        "user": "atiyka",
        "created_at": "2022-07-12T07:35:19Z",
        "body": "> With the protocol logs you pasted, what makes you think they need to be inverted?\r\n\r\nI think, because after the move operation, I fetch the messages from that folder, and in the `IMessageSummary` object the uids appears inverted, so for the message which was 186 and became 22 in the new folder based on the result of the move, currently it says that it has uid 23, and the other message has 22. So based on this I concluded that the move returned the result in a wrong order.\r\n\r\nAnyway, thanks for your answer.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-07-12T13:45:15Z",
        "body": "```\r\nS: * OK [COPYUID 1657263256 186:187 22:23]\r\n```\r\n\r\nThe above response is what gives MailKit's ImapClient implementation the UID mapping and as you can see, 186 maps to 22 and 187 maps to 23 according to the IMAP server."
      },
      {
        "user": "atiyka",
        "created_at": "2022-07-13T06:04:58Z",
        "body": "Okay, so I think the problem is on their end... Thank you"
      }
    ]
  },
  {
    "number": 1399,
    "title": "Can I use the repo to delete all emails in inbox folder?",
    "created_at": "2022-06-27T20:13:50Z",
    "closed_at": "2022-06-27T20:31:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1399",
    "body": "Hello:\r\nI can use the repo to retrieve all emails from inbox by IMAP, which seems to be easy.\r\nBut I can't find any simple way to delete all the email in the inbox folder.  For most of the email servers, the inbox is the only folder.\r\nI have quite a number of emails on different email servers.  So I want to write a simple program I can run every week or every month, it just simply deletes all the emails from inbox folder without reading contents or titles of any emails.\r\nCan you show me some simple code to do this without complicated query statement.\r\nThanks,",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1399/comments",
    "author": "zydjohnHotmail",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-06-27T20:31:29Z",
        "body": "```csharp\r\nvar uids = new UniqueIdRange (UniqueId.MinValue, UniqueId.MaxValue);\r\ninbox.AddFlags (uids, MessageFlags.Deleted, true);\r\ninbox.Expunge ();\r\n```"
      },
      {
        "user": "zydjohnHotmail",
        "created_at": "2022-06-27T20:42:12Z",
        "body": "Hello:\r\nThanks for your quick reply.  I have tried your code, but I got the following error:\r\nThe folder is not currently open in read-write mode.\r\nIt seems I have to open the inbox folder with read-write mode.\r\nBut how I can do this?\r\nPlease advise,\r\nThanks,"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-06-27T20:43:41Z",
        "body": "```csharp\r\ninbox.Open(FolderAccess.ReadWrite);\r\nvar uids = new UniqueIdRange (UniqueId.MinValue, UniqueId.MaxValue);\r\ninbox.AddFlags (uids, MessageFlags.Deleted, true);\r\ninbox.Expunge ();\r\n```"
      },
      {
        "user": "zydjohnHotmail",
        "created_at": "2022-06-27T20:49:16Z",
        "body": "OK.\r\nThanks, the code works!\r\nThank you very much for your great job!"
      }
    ]
  },
  {
    "number": 1372,
    "title": "How to use SMTP vis proxy? Any demo?",
    "created_at": "2022-05-06T23:25:43Z",
    "closed_at": "2022-05-07T00:18:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1372",
    "body": "I want to send mail via socks5 ,the proxy server require username and  password authentication. \r\nbut something goes wrong  .Is there any demo?\r\n\r\n```csharp\r\nusing (var client = new MailKit.Net.Smtp.SmtpClient())\r\n{\r\n    var string proxyip=\"220.10.10.1\";\t\r\n    var int proxyport=4145;\r\n    var string proxyusername=\"\";  // how to \r\n    var string proxypassword=\"\";\r\n    var socksClient = new Socks5Client(proxyip,proxyport);\r\n    client.ProxyClient = socksClient;\r\n\r\n    client.Connect(\"smtp.mysmtp.com\", 25, false);\r\n    client.Authenticate(\"username@mysmtp.com\", \"password\");\r\n\r\n    client.Send(message);\r\n    client.Disconnect(true);\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1372/comments",
    "author": "aleylinx",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-05-07T00:18:47Z",
        "body": "Well, you need to set the proxy username/passwd on the proxy...\r\n\r\n```csharp\r\nusing (var client = new MailKit.Net.Smtp.SmtpClient())\r\n{\r\n    var string proxyip=\"220.10.10.1\";\t\r\n    var int proxyport=4145;\r\n    var string proxyusername=\"\";  // how to \r\n    var string proxypassword=\"\";\r\n    var socksClient = new Socks5Client(proxyip,proxyport, new NetworkCredential(proxyusername, proxypassword));\r\n    client.ProxyClient = socksClient;\r\n\r\n    client.Connect(\"smtp.mysmtp.com\", 25, false);\r\n    client.Authenticate(\"username@mysmtp.com\", \"password\");\r\n\r\n    client.Send(message);\r\n    client.Disconnect(true);\r\n}\r\n```"
      },
      {
        "user": "aleylinx",
        "created_at": "2022-05-07T01:09:25Z",
        "body": "Thank you sir!  it work\uff01"
      }
    ]
  },
  {
    "number": 1356,
    "title": "What's the recommended/performant way to use the getStreams method?",
    "created_at": "2022-04-06T19:38:37Z",
    "closed_at": "2022-04-07T12:54:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1356",
    "body": "Hi, I found `getStreams` when looking through past issues regarding bulk processing. I'd like to consume around ~30k emails from a folder and am looking for the most performant way to do so!\r\n\r\nCurrently I'm using this pattern:\r\n``` csharp\r\n// using an exact path for the type below as it was the only way to get it to resolve getStreams\r\nMailKit.Net.Imap.IImapFolder all = (IImapFolder)client.GetFolder(SpecialFolder.All);\r\nUniqueIdRange range = new UniqueIdRange(uidMin, uidNext); // predefined range for last 30k\r\nvar refs = all.Search(range, SearchQuery.All);\r\n\r\nIList<Task<MimeMessage>> tasks = new List<Task<MimeMessage>>();\r\nvoid getMessageFromStream(ImapFolder _, int __, UniqueId ___, Stream stream) {\r\n    tasks.Add(MimeMessage.LoadAsync(stream));\r\n}\r\nall.GetStreams(refs, getMessageFromStream);\r\nMimeMessage[] messages = await Task.WhenAll(tasks);\r\n```\r\n\r\nI'm looking to possibly parallelize this; as the callback doesn't require a full IMAP connection since it just parses the message, I figured it shouldn't be an issue to have that be done in large batches of threads. However, I read that the stream is closed when the callback returns, so I'm not sure what the best way to go about this is. Would love some insight here as to how to accomplish this or whether there's a better way to go about this!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1356/comments",
    "author": "cuuupid",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-04-07T12:54:25Z",
        "body": "> However, I read that the stream is closed when the callback returns\r\n\r\nCorrect. The Stream argument is Dispose()'d once the callback returns, so it's important to process it in the callback itself and not defer processing.\r\n\r\nYou probably don't want to have 30,000 messages loaded in RAM anyway because that could be a ton of memory.\n\n---\n\nFWIW, the API was designed with the expectation that developers would save the stream to disk and process them later."
      },
      {
        "user": "cuuupid",
        "created_at": "2022-04-08T03:07:10Z",
        "body": "Thanks! We need to serve it up to another process pretty much immediately, so in this case I'll go with the synchronous route."
      }
    ]
  },
  {
    "number": 1346,
    "title": "Can we have equals operators for content type?",
    "created_at": "2022-03-14T18:08:09Z",
    "closed_at": "2022-03-15T14:59:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1346",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen filtering body parts by content type, since there are not enough helper methods, it would be relatively easy to use Linq `Where()` something like `email.BodyParts.Where(bp => bp.ContentType == ContentType.Parse(\"message/delivery-status\"))` but this does not work. This is because it is performing an object comparison which is not what I would expect for a data type like this.\r\n\r\nI can work around it but I have to use `bp.ContentType.ToString() == \"ContentType: message/delivery-status\"` which is quite nasty.\r\n\r\n**Describe the solution you'd like**\r\nIf we had equals operators added to `ContentType` which compared the base type and the sub-type (not sure whether they should be case-sensitive or not) then it would have expected behaviour.\r\n\r\n**Describe alternatives you've considered**\r\nAn alternative is the workaround above.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1346/comments",
    "author": "lukos",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-03-14T18:38:51Z",
        "body": "A better solution is probably to do this:\r\n\r\n```csharp\r\nemail.BodyParts.Where(bp => bp.ContentType.IsMimeType(\"message\", \"delivery-status\"))\r\n```\n\n---\n\nThat also allows doing stuff like this:\r\n\r\n```csharp\r\nvar textParts = email.BodyParts.Where(bp => bp.ContentType.IsMimeType(\"text\", \"*\"))\r\n```\r\n\r\nor\r\n\r\n```csharp\r\nvar images = email.BodyParts.Where(bp => bp.ContentType.IsMimeType(\"image\", \"*\"))\r\n```\r\n"
      },
      {
        "user": "lukos",
        "created_at": "2022-03-15T09:18:58Z",
        "body": "That's fine. You can close if you don't think it's worth adding the equals operators."
      }
    ]
  },
  {
    "number": 1328,
    "title": "Custom DefaultLocalDomain for SmtpClient",
    "created_at": "2022-02-08T17:10:34Z",
    "closed_at": "2022-02-08T17:13:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1328",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI use MailKit in a docker container to send email through SMTP.\r\nI was debugging some issue with an SMTP provider, and I notice that the hostname of the container is present in the raw email \r\n```text\r\nReceived: from container-hostname (unknown [42.42.42.42])\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI would like to know if there is a way to customize the `DefaultLocalDomain` with a personal value without changing the container hostname ?\r\n\r\nIn advance, thank you.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1328/comments",
    "author": "waldo2188",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-02-08T17:13:45Z",
        "body": "You can set SmtpClient.LocalDomain to whatever string you want and that is the (full) string that will be used in the EHLO command (which, presumably, is the string used by the SMTP server to generate the Received header)."
      },
      {
        "user": "waldo2188",
        "created_at": "2022-02-09T09:10:45Z",
        "body": "I didn't see this possibility, you made my day!"
      }
    ]
  },
  {
    "number": 1325,
    "title": "Example how to get UID",
    "created_at": "2022-01-31T20:29:29Z",
    "closed_at": "2022-01-31T20:32:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1325",
    "body": "HI, how can i get uid from this code pls ? Im trying to make delete possible but this implementation of imap is kind of strange to me and very confusing.. This below example is nice, shows how to get all info from emails i need, but all other examples are not enough to understand whole functionality. \r\n\r\n```sharp\r\nusing System;\r\n\r\nusing MimeKit;\r\nusing MailKit;\r\nusing MailKit.Search;\r\nusing MailKit.Net.Imap;\r\n\r\nnamespace TestClient {\r\n    class Program\r\n    {\r\n        public static void Main (string[] args)\r\n        {\r\n            using (var client = new ImapClient ()) {\r\n                client.Connect (\"imap.friends.com\", 993, true);\r\n\r\n                client.Authenticate (\"joey\", \"password\");\r\n\r\n                // The Inbox folder is always available on all IMAP servers...\r\n                var inbox = client.Inbox;\r\n                inbox.Open (FolderAccess.ReadOnly);\r\n\r\n                Console.WriteLine (\"Total messages: {0}\", inbox.Count);\r\n                Console.WriteLine (\"Recent messages: {0}\", inbox.Recent);\r\n\r\n                for (int i = 0; i < inbox.Count; i++) {\r\n                    var message = inbox.GetMessage (i);\r\n                    Console.WriteLine (\"Subject: {0}\", message.Subject);\r\n                }\r\n\r\n                client.Disconnect (true);\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1325/comments",
    "author": "michalss",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-01-31T20:32:18Z",
        "body": "```csharp\r\nusing System;\r\n\r\nusing MimeKit;\r\nusing MailKit;\r\nusing MailKit.Search;\r\nusing MailKit.Net.Imap;\r\n\r\nnamespace TestClient {\r\n    class Program\r\n    {\r\n        public static void Main (string[] args)\r\n        {\r\n            using (var client = new ImapClient ()) {\r\n                client.Connect (\"imap.friends.com\", 993, true);\r\n\r\n                client.Authenticate (\"joey\", \"password\");\r\n\r\n                // The Inbox folder is always available on all IMAP servers...\r\n                var inbox = client.Inbox;\r\n                inbox.Open (FolderAccess.ReadOnly);\r\n\r\n                Console.WriteLine (\"Total messages: {0}\", inbox.Count);\r\n                Console.WriteLine (\"Recent messages: {0}\", inbox.Recent);\r\n\r\n                var uids = inbox.Search (SearchQuery.All);\r\n                for (int i = 0; i < uids.Count; i++) {\r\n                    var message = inbox.GetMessage (uids[i]);\r\n                    Console.WriteLine (\"Subject: {0}\", message.Subject);\r\n                }\r\n\r\n                client.Disconnect (true);\r\n            }\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "michalss",
        "created_at": "2022-01-31T20:33:49Z",
        "body": "thx you should update your examples in readme as well pls, this is essential information for new incomer's .. :)"
      },
      {
        "user": "davidbuckleyni",
        "created_at": "2022-02-01T03:00:10Z",
        "body": "Actually its not the maui teams fault apple docs dis allow u to get the uid of a users device now and actually state on developer web site should not be used. "
      }
    ]
  },
  {
    "number": 1173,
    "title": "SMTP: Get UniqueID on sent mail?",
    "created_at": "2021-03-11T13:53:14Z",
    "closed_at": "2021-03-11T20:20:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1173",
    "body": "What's the correct way to get the UniqueID of an email which I just have sent?\r\n\r\nWhen sending a mail it would make it to the SENT folder. Hence, I assume it would have a UniqueID?!?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1173/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-11T20:20:05Z",
        "body": "SmtpClient doesn't append it to the Sent folder (it's completely separate and independent from IMAP: and knows nothing about folders).\r\n\r\nWhat you need to do is to use the ImapClient to append the message to the Sent folder. The `IMailFolder.Append (...)` methods will return a UID (if the server supports it).\r\n"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-12T17:20:27Z",
        "body": "Thanks @jstedfast. That helps"
      }
    ]
  },
  {
    "number": 1066,
    "title": "MailKit Pop3Client.Count retrieves all emails, not just the number of emails.",
    "created_at": "2020-08-30T08:51:29Z",
    "closed_at": "2020-08-30T12:09:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1066",
    "body": "**Describe the bug**\r\nMailKit Pop3Client.Count retrieves all emails, not just the number of emails.\r\n\r\nMy code is as follows\r\n\r\n```\r\nusing (var client = new Pop3Client(new ProtocolLogger(\"d:\\\\pop3.txt\") ))\r\n            {\r\n                client.Connect(emailSettings.PopServer, emailSettings.PopPort, SecureSocketOptions.SslOnConnect);\r\n                client.Authenticate(emailSettings.Username, emailSettings.Password);\r\n\r\n                EmailCount = client.Count();\r\n            }\r\n```\r\n\r\nThe mailbox I am issung this command against has over 1000 emails in it. When examining the created Pop3.txt file I see that the client has correctly issued the ```STAT``` command and recieves the reply ```+OK 1122 50068335```.\r\n\r\nHowever the Client then goes on to retrieves all email, issuing ```RETR``` until all have been downloaded.\r\n\r\nWhen calling the ```client.Count()``` command, all the client needs to do is issue STAT and return the number from the server. Anything further is not necessary and a waste of bandwidth.\r\n\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows 10\r\n - .NET: Net Core 3.1\r\n-  Microsoft Visual Studio Community 2019 Version 16.7.2\r\n - MailKit Version: 2.8.0\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1066/comments",
    "author": "johnmackerras",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-08-30T12:09:58Z",
        "body": "The `Count()` method that you are using is a LINQ extension method that iterates over an IEnumerable.\r\n\r\nWhat you want is the `Count` *property* which will not download all messages.\r\n\r\nI can't change the behavior of the LINQ `Count()` method because it exists in System.Linq, not MailKit."
      },
      {
        "user": "johnmackerras",
        "created_at": "2020-09-02T16:39:54Z",
        "body": "Damn those paretheses - thanks. Much faster now."
      }
    ]
  },
  {
    "number": 1045,
    "title": "Outlook: Unicode problems in header",
    "created_at": "2020-07-08T15:49:28Z",
    "closed_at": "2020-07-08T19:47:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1045",
    "body": "**Describe the bug**\r\nIf a message is sent with a UTF8 or unicode encoding in the subject or in the from/to, outlook will display it as garbage characters. I do use the Encoding.UTF8 as the first parameter of MailboxAddress. GMail also displays it correctly.\r\nIs this an outlook bug or is there something else I can do to ensure that they display it correctly?\r\n```cs\r\n                var msg = new MimeMessage();\r\n\r\n                msg.From.Add(new MailboxAddress(Encoding.UTF8, sender.Name, sender.MailAddress));\r\n                msg.To.Add(new MailboxAddress(Encoding.UTF8, receiver.Name, receiver.MailAddress));\r\n                msg.Subject = subject;\r\n\r\n                var builder = new BodyBuilder() { TextBody = content };\r\n\r\n                if (attachments != null)\r\n                    foreach (var attachment in attachments)\r\n                        builder.Attachments.Add(attachment.Name, attachment.Data);\r\n\r\n                msg.Body = builder.ToMessageBody();\r\n\r\n                var options = FormatOptions.Default.Clone();\r\n\r\n                options.International = true;\r\n                options.AllowMixedHeaderCharsets = true;\r\n\r\n                client.Send(options, msg);\r\n```\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows 10 1909 18363.900 and Outlook on Android 10 (possibly elsewhere)\r\n - .NET Runtime: No clue.\r\n - .NET Framework: .NET Core 3.1\r\n - MailKit Version: 2.7.0\r\n\r\n**To Reproduce**\r\nSend mail with the example above where the name is unicode and open Outlook.\r\n\r\n**Expected behavior**\r\nOutlook should display it the same as GMail (which does work on both firefox and GMail app).\r\n\r\n**Screenshots**\r\nN.A. Just the general character mess you get if unicode isn't read properly.\r\n\r\n**Additional context**\r\n-\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1045/comments",
    "author": "Nielsbishere",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-07-08T19:47:12Z",
        "body": "Don't use the following code snippet:\r\n\r\n```csharp\r\noptions.International = true;\r\noptions.AllowMixedHeaderCharsets = true;\r\n```\r\n\r\noptions.International tells MimeKit/MailKit not to encode the headers (i.e. it sends raw UTF-8 which probably breaks Outlook) and options.AllowMixedHeaderCharsets tells MimeKit/MailKit to mix-and-match UTF-8, US-ASCII and ISO-8859-1 in the same header. In other words, if the Subject (for example) is really long and needs to be broken up into multiple encoded-word tokens, this option allows MimeKit/MailKit to choose US-ASCII and/or ISO-8859-1 for each individual encoded-word even if you've specified UTF-8, thereby making it *possible* that you end up with a Subject like this:\r\n\r\n```\r\nSubject: =?us-ascii?q?This_is_ascii_?= =?iso-8859-1?q?and_this_is_fran=CAes?= =?utf-8?b?<base64>?=\r\n```\r\n\r\nSome clients do not deal well with this scenario even though the specification requires support for that."
      },
      {
        "user": "Nielsbishere",
        "created_at": "2020-07-09T12:07:18Z",
        "body": "You are right. I saw an if(...) options.International = true; mentioned somewhere on an issue. I guess that introduced this and then I tried fixing it by adding the mixed charsets.\r\nThank you!"
      }
    ]
  },
  {
    "number": 987,
    "title": "Unable to parse status code returned by the server",
    "created_at": "2020-02-22T08:32:41Z",
    "closed_at": "2020-02-22T14:58:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/987",
    "body": "MailKit.Net.Smtp.SmtpProtocolException: 'Unable to parse status code returned by the server.'\r\n\r\nlog:\r\n\r\nConnected to smtp://xx.xx.com:1800/?starttls=when-available\r\nS: +OK Welcome to MailEnable POP3 Server\r\n\r\nstack:\r\n\r\n   at MailKit.Net.Smtp.SmtpStream.<ReadResponseAsync>d__46.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at MailKit.Net.Smtp.SmtpStream.ReadResponse(CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.<ConnectAsync>d__74.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Smtp.SmtpClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at xx.SendEmailAsync(String email, String subject, String message) in xx\\EmailSender.cs:line 34",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/987/comments",
    "author": "carlhoogstoel",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-22T14:58:05Z",
        "body": "That's because you are trying to connect to a POP3 server using the SmtpClient.\r\n\r\nYou need to use the Pop3Client to connect to a POP3 server."
      },
      {
        "user": "carlhoogstoel",
        "created_at": "2020-02-22T15:15:05Z",
        "body": "Ok, it is official. I am an idiot:P"
      }
    ]
  },
  {
    "number": 984,
    "title": "How to get the uniqueID of a message\uff1f",
    "created_at": "2020-02-11T07:05:12Z",
    "closed_at": "2020-02-11T14:00:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/984",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI have used inbox.getmessage (1) to get message information, but I can't find the one to get uniqueID\u3002\r\n\r\n**Describe the solution you'd like**\r\nvar message = Inbox.GetMessage(1);\r\nstring subject = message.Subject; //Subject\r\n\r\nHow to get uniqueID next\uff1f\r\nI need to get this uniqueID for setflags\u3002\r\nBut the uniqueID cannot be obtained by using GetMessage\u3002\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/984/comments",
    "author": "pengpengker",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-11T14:00:03Z",
        "body": "You can actually set flags using message indexes as well, but yes, it is better to use unique id's.\r\n\r\nTo get all of the UniqueIDs in a folder, you can do this:\r\n\r\n```csharp\r\nvar uids = inbox.Search (SearchQuery.All);\r\n```\r\n\r\nYou can then use those UIDs to get the messages:\r\n\r\n```csharp\r\nforeach (var uid in uids) {\r\n    var message = inbox.GetMessage (uid);\r\n}\r\n```\r\n\r\nAnother way to get the UIDs is to ask the folder for the metadata for a set of messages (or, in the example below, *all* of the messages):\r\n\r\n```csharp\r\nvar summaries = inbox.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.Flags);\r\nforeach (var summary in summaries) {\r\n    // now you can use summary.UniqueId and any other field that you requested in the Fetch()\r\n    // request such as summary.Envelope. You can also use summary.Index which is *always* set.\r\n   Console.WriteLine (\"Message[{0}] has UID={1} and Subject=\\\"{2}\\\" and currently has the following flags set: {3}\", summary.Index, summary.UniqueId, summary.Envelope.Subject, summary.Flags.Value); \r\n}\r\n```\r\n\r\nIn essence, you don't get a UID from a message, you use a UID to *refer* to a message.\r\n\r\nHope that helps."
      },
      {
        "user": "pengpengker",
        "created_at": "2020-02-13T01:52:12Z",
        "body": "Thank You!\r\nIt is very Good!!!"
      }
    ]
  },
  {
    "number": 978,
    "title": "Argument 1: Cannot convert from \"MimeKit.MimeMessage\" to \"string\".",
    "created_at": "2020-01-22T15:29:35Z",
    "closed_at": "2020-01-22T15:55:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/978",
    "body": "hello, I'm trying to copy part of the text from a REGEX letter , but I have a problem. produces such an error\r\n\u00a0Argument 1: Cannot convert from \"MimeKit.MimeMessage\" to \"string\".\r\n\r\n```csharp\r\n var a = inbox.GetMessage(UID); // \r\n                    var rsw = new Regex(\"(?i)<p [^>]*?>\\\\s*<em[^>]*?>(.*)</em\");\r\n  string capture2 = rsw.Match(a).Groups[1].Value;\r\n```\r\nI do not quite understand how to fix this.\r\n\r\nif this has nothing to do with your project, then I apologize.\r\nthanks",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/978/comments",
    "author": "NerzOff",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-01-22T15:55:42Z",
        "body": "The problem is that you are passing a `MimeMessage` object into `rsw.Match(a)`, but the `Match()` method takes a `string` argument, not a `MimeMessage` argument.\r\n\r\nIt looks like you are trying to use regex to match some HTML of the message body?\r\n\r\nIf so, try something more like this:\r\n\r\n```csharp\r\nvar message = inbox.GetMessage(UID);\r\nvar htmlBody = message.HtmlBody ?? string.Empty;\r\nvar rsw = new Regex(\"(?i)<p [^>]*?>\\\\s*<em[^>]*?>(.*)</em\");\r\nstring capture2 = rsw.Match(htmlBody).Groups[1].Value;\r\n```"
      }
    ]
  },
  {
    "number": 955,
    "title": "use aws ses(Amazon Simple Email Service) error   501 Invalid MAIL FROM address provided",
    "created_at": "2019-11-21T06:40:04Z",
    "closed_at": "2019-11-21T13:19:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/955",
    "body": "Dear Friend\r\nI use mailkit to send aws  ses \r\ncsharp code:\r\n\r\n```csharp\r\n            using (var client = new MailKit.Net.Smtp.SmtpClient(new ProtocolLogger(Program.CreateMailLog())))\r\n            {\r\n\r\n                //25 587\r\n                // String HOST = \"email-smtp.us-west-2.amazonaws.com\";\r\n                // int PORT = 587;\r\n                client.Connect(HOST, PORT, SecureSocketOptions.StartTlsWhenAvailable);\r\n                //SMTP_USERNAME: Replace smtp_username with your Amazon SES SMTP user name.\r\n                // SMTP_PASSWORD: Replace smtp_password with your Amazon SES SMTP user name.\r\n                client.Authenticate(SMTP_USERNAME, SMTP_PASSWORD);\r\n                // client.Authenticate(oauth);\r\n                client.Send(message);\r\n                client.Disconnect(true);\r\n            }\r\n```\r\n\r\nbut is error.\r\nlogs:\r\n```\r\nConnected to smtp://email-smtp.us-west-2.amazonaws.com:587/?starttls=when-available\r\nS: 220 email-smtp.amazonaws.com ESMTP SimpleEmailService-d-B1D75AM90 83qp4IzaerfvF0CNuJJJ\r\nC: EHLO [192.168.1.110]\r\nS: 250-email-smtp.amazonaws.com\r\nS: 250-8BITMIME\r\nS: 250-SIZE 10485760\r\nS: 250-STARTTLS\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 Ok\r\nC: STARTTLS\r\nS: 220 Ready to start TLS\r\nC: EHLO [192.168.1.110]\r\nS: 250-email-smtp.amazonaws.com\r\nS: 250-8BITMIME\r\nS: 250-SIZE 10485760\r\nS: 250-STARTTLS\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 Ok\r\nC: AUTH PLAIN XXX\r\nS: 235 Authentication successful.\r\nC: MAIL FROM:<myemailname> SIZE=606\r\nS: 501 Invalid MAIL FROM address provided\r\nC: RSET\r\nS: 250 Ok\r\n```\r\n\r\nlogs say my error is 501 Invalid MAIL FROM address provided\r\nbut i don't know what can i do\r\nsomeone has idea of it\r\nBest wish  \r\nRico \r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/955/comments",
    "author": "wkf0660",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-11-21T13:19:45Z",
        "body": "You need to set a full email address of the form `user@domain.com`, not just `user`."
      },
      {
        "user": "wkf0660",
        "created_at": "2019-11-22T01:53:16Z",
        "body": "thanks! \r\ni write the full address ,and   is OK "
      }
    ]
  },
  {
    "number": 927,
    "title": "Content Id for mails set to \"multipart/multipart/mixed\" in email message.",
    "created_at": "2019-10-07T10:33:48Z",
    "closed_at": "2019-10-07T12:20:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/927",
    "body": "**Describe the bug**\r\nWhen creating a new mail message using the MailKit and Mimekit helpers, when creating a message from a Multipart object, the Content Id is set to \"multipart/multipart/mixed\" instead of the normal \"multipart/mixed\". This happens when creating a MimeMessage object from a Multipart object, and then sending the email.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nCreate a new outgoing email message using a MimeMessage, instead of using the BodyBuilder helper class. The MimeMessage should be built from a Multipart object using the \"subType\" of \"multipart/mixed\". Adding attachments is optional. \r\nWhen sending the mail and viewing the email as an EML file, the Content Id value is set to \"multipart/multipart/mixed\", instead of the correct \"multipart/mixed\". This can cause issues with certain email servers antispam/antivirus software seeing this message as a \"malformed\" message. This happened in a scenario where the recipient was using MailMarshal.\r\n\r\n**Expected behavior**\r\nContentId should be set to \"multipart/mixed\" in all scenarios.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Browser All\r\n - Version 2.1.5.1\r\n\r\n**Additional context**\r\nWhen creating a new mail message using the BodyBuilder helper class, the message's Content Id is set correctly.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/927/comments",
    "author": "eduardk1008",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-07T12:20:56Z",
        "body": "> The MimeMessage should be built from a Multipart object using the \"subType\" of \"multipart/mixed\".\r\n\r\nSo... `new Multipart (\"multipart/mixed\");` results in `Content-Type: multipart/multipart/mixed`?\r\n\r\nDoctor's orders: take a sip of your morning coffee and then look at that again and tell me why you are getting the result you are getting ;-)\r\n\r\nI'm pretty sure you'll have a \"ah-hah!\" moment, a little light bulb will spark to life and you'll be golden.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nHint: what you want is `new Multipart (\"mixed\");`"
      },
      {
        "user": "eduardk1008",
        "created_at": "2019-10-08T08:37:54Z",
        "body": "Hi there,\r\n\r\nThank you for letting me know!\r\n\r\nI have updated our code to correct this."
      }
    ]
  },
  {
    "number": 917,
    "title": "Need option to remove sender header from message.",
    "created_at": "2019-09-26T09:32:12Z",
    "closed_at": "2019-09-26T15:19:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/917",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen I add the sender ```MailboxAddress``` it changes the MAIL FROM in the envelope but also adds a sender header. The problem is that in some email clients and in particular, Outlook, the client displays something like \"sender@domain.com on behalf of from@domain.com\" or \"Sender <sender@domain.com> on behalf of From <from@domain.com>\". This may be correct but the recipient is often left in doubt as to who the message is really from. Typically the sender is going to be used to handle NDRs programmatically using a VERP (Variable envelope return path) scheme and the alias part of the address could be a GUID.\r\n\r\n**Describe the solution you'd like**\r\nI would like an option to not add the sender header, and only change the MAIL FROM in the envelope. Perhaps adding the sender to the MimeMessage should add the header but adding it in the ```MailTransport.SendAsync``` overload does not?\r\n\r\n**Describe alternatives you've considered**\r\nThe only way I've found to get what I want so far is to extend the SmtpClient and remove the header from the ```Prepare``` method:\r\n\r\n```\r\npublic class ExtendedSmtpClient : SmtpClient\r\n{\r\n\tprotected override void Prepare(FormatOptions options, MimeMessage message, EncodingConstraint constraint, int maxLineLength)\r\n\t{\r\n\t\tmessage.Headers.Remove(HeaderId.Sender);\r\n\r\n\t\tbase.Prepare(options, message, constraint, maxLineLength);\r\n\t}\r\n}\r\n```\r\n\r\nI haven't fully tested this but I'm wondering if there's a better way you could point out to me?\r\n\r\n**Additional context**\r\nAmazon SES modifies the MAIL FROM without adding the sender header so I guess this is considered acceptable practice.\r\n\r\nPlease let me know what you think.\r\nThanks \r\nAndrew",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/917/comments",
    "author": "j055",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-26T15:19:52Z",
        "body": "Use SmtpClient.Send (message, from, recipients);"
      },
      {
        "user": "j055",
        "created_at": "2019-09-26T21:15:06Z",
        "body": "Doh! I think I tried every combination except the most obvious one! MimeKit and MailKit are outstanding libraries. Thank you."
      },
      {
        "user": "srikarbalmuri",
        "created_at": "2023-10-13T05:21:31Z",
        "body": "Is there a sample code I can use to achieve this feature I am also trying to implement verp"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-10-15T14:37:36Z",
        "body": "@srikarbalmuri \r\n\r\n```csharp\r\nclient.Send (message, from, recipients);\r\n```\r\n"
      }
    ]
  },
  {
    "number": 907,
    "title": "FetchAsync is not loading list of UniqueIds",
    "created_at": "2019-09-10T16:08:06Z",
    "closed_at": "2019-09-10T16:15:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/907",
    "body": "**Describe the bug**\r\n\r\nI'm attempting to load recent messages from a given folder, in this case a user's inbox.  I get a list of unique ids using `folder.SortAsync()` then take that list and call `folder.FetchAsync()`.  `SortAsync` is returning 199 UniqueId values.  When I call fetch, no records are returned.\r\n\r\nHowever, if I request a single UniqueId at a time, it works.  I assume the IMAP server does not support ranges.\r\n\r\nIs there a capability I can look at the determine this behavior?  Also, is there a way to request that Fetch not use ranges?\r\n\r\nUsing MailKit 2.3.0\r\n\r\n**Expected behavior**\r\nI'd expect `FetchAsync` to return the 199 messages.\r\n\r\n**Additional context**\r\n<details><summary>Output from Imap Protocol Logger</summary>\r\n<pre>\r\nS: A00000000 OK [CAPABILITY IMAP4REV1 LITERAL+ UTF8=ALL STARTTLS IDLE NAMESPACE UNSELECT SORT QUOTA ID] User [redacted] authenticated\r\nC: A00000001 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000001 OK NAMESPACE completed\r\nC: A00000002 LIST \"\" \"INBOX\"\r\nS: * LIST (\\NoInferiors) NIL INBOX\r\nS: A00000002 OK LIST completed\r\nC: A00000003 LIST \"\" \"%\"\r\nS: * LIST (\\NoInferiors) NIL INBOX\r\nS: * LIST (\\Marked) \"/\" mail/SPAM.incoming\r\nS: * LIST (\\UnMarked) \"/\" mail/drafts\r\nS: * LIST (\\UnMarked) \"/\" mail/sent-mail\r\nS: * LIST (\\UnMarked) \"/\" mail/trash\r\nS: * LIST (\\UnMarked) \"/\" \"Junk E-mail\"\r\nS: * LIST (\\UnMarked) \"/\" \"Sent Items\"\r\nS: * LIST (\\UnMarked) \"/\" \"Deleted Items\"\r\nS: * LIST (\\UnMarked) \"/\" Drafts\r\nS: A00000003 OK LIST completed\r\nC: A00000004 LIST \"\" mail\r\nS: A00000004 OK LIST completed\r\nC: A00000005 EXAMINE INBOX\r\nS: * 199 EXISTS\r\nS: * 2 RECENT\r\nS: * OK [UIDVALIDITY 1279810762] UID validity status\r\nS: * OK [UIDNEXT 38448] Predicted next UID\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Draft \\Seen)\r\nS: * OK [PERMANENTFLAGS ()] Permanent flags\r\nS: * OK [UNSEEN 198] first unseen message in mailbox\r\nS: A00000005 OK [READ-ONLY] EXAMINE completed\r\nC: A00000006 UID SORT (REVERSE ARRIVAL) US-ASCII ALL\r\nS: * SORT 38447 38446 38445 38444 38443 38442 38441 38440 38439 38438 38437 38436 38435 38434 38433 38432 38431 38430 38429 38428 38427 38426 38425 38424 38423 38422 38421 38420 38419 38418 38417 38416 38415 38414 38413 38412 38411 38410 38409 38408 38407 38406 38405 38404 38403 38402 38401 38400 38399 38398 38397 38396 38395 38394 38393 38392 38391 38390 38389 38388 38387 38386 38385 38384 38383 38382 38381 38380 38379 38378 38377 38376 38375 38374 38373 38372 38371 38370 38369 38368 38367 38366 38365 38364 38363 38362 38361 38360 38359 38358 38357 38356 38355 38354 38353 38352 38351 38350 38349 38348 38347 38346 38345 38344 38343 38342 38341 38340 38339 38338 38337 38336 38335 38334 38333 38332 38331 38330 38329 38328 38327 38326 38325 38324 38323 38322 38321 38320 38319 38318 38317 38316 38315 38314 38313 38312 38311 38310 38309 38308 38307 38306 38305 38304 38303 38302 38301 38300 38299 38298 38297 38296 38295 38294 38293 38292 38291 38290 38289 38288 38287 38286 38285 38284 38283 38282 38281 38280 38279 38278 38277 38276 38275 38274 38273 38272 38271 38270 38269 38268 38267 38266 38265 38264 38263 38262 38261 38260 38259 38258 38257 38256 38255 38254 38253 38252 38251 38250 38249\r\nS: A00000006 OK UID SORT completed\r\nC: A00000007 UID FETCH 38447:38348 BODY.PEEK[HEADER.FIELDS (TO FROM MESSAGE-ID DATE DELIVERY-DATE SUBJECT REFERENCES IN-REPLY-TO)]\r\nS: A00000007 OK UID FETCH completed\r\n</pre>\r\n</details>\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/907/comments",
    "author": "rgmills",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T16:15:00Z",
        "body": "The problem seems to be a bug in your IMAP server which cannot handle UIDs in descending order.\r\n\r\nSolution:\r\n\r\n```csharp\r\nvar uids = folder.Search (SearchQuery.All);\r\nvar results = folder.Fetch (uids, ...);\r\nresults.Sort (new OrderBy[] { OrderBy.ReverseArrival });\r\n```"
      },
      {
        "user": "rgmills",
        "created_at": "2019-09-10T16:21:19Z",
        "body": "You're a damned wizard.  Thanks, Jeffrey!"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T16:53:29Z",
        "body": "No problem :-)\n\n---\n\nOn second thought, what IMAP server is this? Do you have the greeting message from the log file?\r\n\r\nI'm wondering if maybe I can start compiling a list of servers that this doesn't work on and add a work-around for.\r\n"
      },
      {
        "user": "rgmills",
        "created_at": "2019-09-10T17:00:44Z",
        "body": "Unsure who the actual author of the IMAP server software is.\r\n\r\nDoes this give you enough information?  Or do you need the hostnames as well?\r\n\r\n```\r\nS: * OK [CAPABILITY IMAP4REV1 LITERAL+ UTF8=ALL STARTTLS SASL-IR AUTH=LOGIN ID] mail37c25 IMAP4rev1 Bigfoot\r\n```\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T17:26:07Z",
        "body": "Thanks! That might be good enough. Perhaps the IMAP server is called Bigfoot. I'll have to do some web searching later to see.\r\n\r\nI generally prefer to try and use the info in the line you gave me than hostnames to do this sort of work-around.\r\n"
      }
    ]
  },
  {
    "number": 899,
    "title": "Attachment file size showing higher than the actual size",
    "created_at": "2019-08-30T15:20:07Z",
    "closed_at": "2019-08-30T16:05:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/899",
    "body": "Hi,\r\nI am trying to check the attachments size before downloading the complete message. For this I have used the MessageSummaryItems.BodyStructure while Fetching the items from inbox. As follows.\r\n\r\n```csharp\r\nvar items = folder.Fetch (ids, MessageSummaryItems.BodyStructure | MessageSummaryItems.UniqueId);\r\nforeach (var item in items) {\r\n    foreach (var attachment in item.Attachments) {\r\n        // 'octets' is just a fancy word for \"number of bytes\"\r\n        var size = attachment.Octets;\r\n\tlog.Info(size);\r\n    }\r\n}\r\n```\r\n\r\nBut, looking at the log, it shows the file size as more than the actual file size. Log comes as follows.\r\n\r\nFound 2 attachments with the mail (UniqueID:5533)\r\nIndividual attachment size for message:5533 is :: 3427408\r\nIndividual attachment size for message:5533 is :: 2875804\r\nTotal size of attachment for message:5533 is 6303212\r\n\r\nBut the actual file size in File Properties shows as 2504642 and 2101546 respectively.\r\n\r\nCan you please help me understand why the size shows more than the actual size when we download it from the email? If this is an expected behavior, is there a way to get the actual file size before downloading the attachments?\r\n\r\nMy requirement is to put a limit on the email attachment size, and ignore those emails if the size is above the limit.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/899/comments",
    "author": "kbchowdary",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-08-30T16:05:58Z",
        "body": "You're confusing attachment size with file size after decoding the attachment content. They are 2 different things.\r\n\r\nThere's no way to get what the decoded content size will be.\r\n\r\nThe best you can do is approximate it, knowing that if the ContentTransferEncoding is \"base64\", you can multiply it by 0.75, but that doesn't account for the MIME headers nor the fact that base64 content gets line-wrapped.\r\n\r\nThat's about the best you can do."
      },
      {
        "user": "kbchowdary",
        "created_at": "2019-08-30T17:13:12Z",
        "body": "Ok thank you for the response. I understood now."
      }
    ]
  },
  {
    "number": 846,
    "title": "Empty Sender in Envelope object",
    "created_at": "2019-04-15T16:02:28Z",
    "closed_at": "2019-04-15T16:44:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/846",
    "body": "Hi, we have encountered an issue with the reading sender from an envelope in the case when the sender doesn't have a hostname. Sender and From properties are NULL in this case.\r\nHere is an exapmle:\r\n```\r\nC: B00000092 UID FETCH 16855:16880 ENVELOPE\r\nS: * 1 FETCH (ENVELOPE (\"Sat, 6 Apr 2019 06:11:46 +0000\" \"SUBJECT\" ((\"NAME\" NIL NIL \".MISSING-HOST-NAME.\")) ((NIL NIL \"NAME\" \".MISSING-HOST-NAME.\")) NIL ((NIL NIL \"TEST\" \"TEST.COM\")) NIL NIL NIL \"<D5EE6C329218A78D@>\") UID 16855)\r\n```\r\nSender and From headers in such emails have the following values\r\n\r\n```\r\nSender: <NAME>\r\nFrom: NAME\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/846/comments",
    "author": "SuhovDE",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-04-15T16:17:38Z",
        "body": "What version are you using? The latest version of MailKit does not set `Envelope.From` or `Envelope.Sender` to `null`.\r\n\r\nInstead, the latest version provides the following results which I would argue is correct:\r\n\r\n1. `Envelope.Sender` is an `InternetAddressList` with a count of 1, where the 1 address is a `MailboxAddress` with an `Address` value of \"NAME\" and the `Name` property is `null` because there is no name.\r\n2. `Envelope.From` is an empty list because all MailboxAddresses *MUST* have a valid `Address` property, so there's no way to represent that."
      },
      {
        "user": "SuhovDE",
        "created_at": "2019-04-16T08:43:30Z",
        "body": "Confirmed. Cannot replicate with version 2.1.4.0.\r\nThe issue was in version 2.1.2.0. \r\nThank you\r\n"
      }
    ]
  },
  {
    "number": 833,
    "title": "SMTP Client - Capture response from successful SendAsync",
    "created_at": "2019-03-20T22:36:26Z",
    "closed_at": "2019-03-21T11:17:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/833",
    "body": "Following successful submission of a message via the SMTP client, I would like the ability to capture the server response for the specific message.\r\n\r\nFor example,  given a successful call\r\n    `await client.SendAsync (message).ConfigureAwait(false);` , \r\n\r\nI would like to capture the server's response, such as\r\n    `250 2.0.0 x2KMTNgW014937 Message accepted for delivery`\r\n\r\nI've seen this as part of the protocol log, but it's only the delivery response that I would like to write to application logs.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/833/comments",
    "author": "tvalenta",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-21T11:17:37Z",
        "body": "You should be able to get that string now if you connect to the `MessageSent` event.\r\n\r\nThe `MessageSentEVentArgs.Response` should be the string you are looking for."
      },
      {
        "user": "tvalenta",
        "created_at": "2019-03-21T21:23:51Z",
        "body": "Thanks for setting me on the right path. I had tried to get this information from a result of SendAsync, and didn't catch that it had to be an event handler. The `MessageSent` event got me what I needed."
      }
    ]
  },
  {
    "number": 832,
    "title": "Textbody return always null",
    "created_at": "2019-03-19T13:02:47Z",
    "closed_at": "2019-03-19T14:12:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/832",
    "body": "Hi, I'm trying to read mail using a c# console program with mailkit.\r\nI use this code:\r\n\r\n```\r\nprivate static MimeMessage ReceiveMails()\r\n      {\r\n         MimeMessage message = new MimeMessage();\r\n\r\n         using( var client = new Pop3Client() )\r\n         {\r\n            client.Connect( \"outlook.office365.com\", 995, true );\r\n\r\n            client.Authenticate( \"xxx@yyy.com\", \"xxxxxxx\" );\r\n\r\n            for( int i = 0; i < client.Count; i++ )\r\n            {\r\n               message = client.GetMessage( i );\r\n               Console.WriteLine( \"Body: {0}\", message.TextBody );\r\n            }\r\n\r\n            client.DeleteAllMessages();\r\n            client.Disconnect( true );\r\n            return message;\r\n         }\r\n\r\n      }\r\n```\r\n\r\nWhile mail.Subject always return the correct subject, TextBody always returns null.\r\nI searched the internet for answers but I only found imap examples and by now I can't read my mail body. Thanks!\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/832/comments",
    "author": "mavel72",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-19T13:24:41Z",
        "body": "Are you sure that these messages *have* a `text/plain` body? Or do they have something else like a `text/html` body?"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T13:49:59Z",
        "body": "I'm writing the mail from Outlook and simply writing a word in the body. I don't know if Outlook send mails with text/plain format. If it is the case, can I try HtmlBody instead? Thank you very much!\n\n---\n\nOk I tried HtmlBody and it gets the body. Thanks for your time.\n\n---\n\nAnyways, how can I convert html to get only the \"text\" part of htmlbody?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-19T14:12:59Z",
        "body": "Converting HTML into plain text is not a lossless conversion, you're going to lose formatting.\r\n\r\nBut if that's really what you want to do, you can either use the MimeKit.Text.HtmlTokenizer to parse the HTML and just extract out the character data.\r\n\r\nfor example:\r\n\r\n```csharp\r\nusing (var reader = new StringReader (message.HtmlBody)) {\r\n    var tokenizer = new HtmlTokenizer (reader);\r\n    HtmlToken token;\r\n    \r\n    while (tokenizer.ReadNextToken (out token)) {\r\n        switch (token.Kind) {\r\n\tcase HtmlTokenKind.Data:\r\n\t    var text = (HtmlDataToken) token;\r\n            Console.Write (text.Data);\r\n            break;\r\n        case HtmlTokenKind.Tag:\r\n            var tag = (HtmlTagToken) token;\r\n            switch (tag.Id) {\r\n            case HtmlTagId.Br:\r\n            case HtmlTagId.P:\r\n                Console.WriteLine ();\r\n                break;\r\n            }\r\n            break;\r\n    }\r\n}\r\n```"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T14:15:57Z",
        "body": "Thank you very much, I have to send body text to a telegram bot so I need ony plain text."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-19T14:26:02Z",
        "body": "Just change your Outlook settings to send plain text instead of HTML"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T14:30:29Z",
        "body": "Thanks!!!"
      }
    ]
  },
  {
    "number": 755,
    "title": "ReplyTo is Difficult for me to set",
    "created_at": "2018-09-17T21:41:12Z",
    "closed_at": "2018-09-18T11:07:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/755",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm just wanting to be able to set the reply to property in the MimeMessage so that emails that go out will reply to that property. I can't figure out what I would inherit or use to set this as I've been trying a few things and checking documentation for any answers on how to actually set the property.\r\n\r\n**Describe the solution you'd like**\r\nI can set the to addresses, from addresses, message and body, subject... I'd love to be able to set the reply to property as well or at least know how.\r\n\r\n**Describe alternatives you've considered**\r\nTrying to implement and change the code myself. I'm somewhat new at this so I need documentation that tells me how I would set properties like this with only a getter or at least how they were intended to be used and why I can't set them like other properties that I can set.\r\n\r\n**Additional context**\r\nIf there's anything that helps me set this then please refer me and I would really appreciate it.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/755/comments",
    "author": "DanJ210",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-09-18T11:07:30Z",
        "body": "`MimeMessage.ReplyTo` does not have a setter - the way you add ReplyTo addresses is to add them to the existing `MimeMessage.ReplyTo` list. It works exactly the same way as the `From`, `To`, `Cc`, and `Bcc` properties.\r\n\r\nExample:\r\n\r\n```csharp\r\nvar message = new MimeMessage ();\r\nmessage.ReplyTo.Add (new MailboxAddress (\"My Name\", \"my@address.com\"));\r\n```\r\n"
      },
      {
        "user": "DanJ210",
        "created_at": "2018-09-18T13:17:08Z",
        "body": "Oh. So yea that makes a lot of sense and is definitely a super dumb question. I don't know why I didn't realize that.\r\n\r\nThank you."
      },
      {
        "user": "chartierpw",
        "created_at": "2023-03-19T23:39:21Z",
        "body": "I just installed the latest version of Mailkit/Mimekit (3.6.0/3.6.1) and apparently we are still unable to set the reply to address.  This was supposed to be fixed 4+ years ago, no?  I need to be able to set the reply to address, not being able to do this makes Mailkit/Mimekit useless to me.  Is that change going to be made anytime soon?\r\n\r\nR/\r\nPrescott ...."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-03-20T02:26:03Z",
        "body": "You set the Reply-To addresses like this:\n\n    message.ReplyTo.Add(new MailboxAddress(\"name\", \"user@domain.com\"));"
      },
      {
        "user": "chartierpw",
        "created_at": "2023-03-20T02:35:15Z",
        "body": "Ah ... clearly I didn't look close enough.  Thanks for the reply, I was worried for a second as Xamarin was complaining that System.Net.Mail was obsolete and to switch to Mailkit/Mimekit.\r\n\r\nR/\r\nPrescott ...."
      }
    ]
  },
  {
    "number": 641,
    "title": "Request for POP3 'Fetch' before downloading",
    "created_at": "2018-02-01T13:28:08Z",
    "closed_at": "2018-02-01T15:09:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/641",
    "body": "I'm creating an email app that needs to support both IMAP and POP3 protocols. I have a local cache of messages that have already been downloaded. I didn't have much trouble implementing the message synchronization on the IMAP side (thanks for that!). \r\n\r\nFor POP3, checking for messages I've already downloaded is a bit tricky. As I understand it, not all POP3 servers support message UIDs. In that case, I want to fall back to comparing metadata of the message (e.g. Date/Sender/Subject) to check if it has already been downloaded. It seems the only way to get this information is to download the whole message. It would be convenient if you could add something similar to IMailFolder.Fetch to Pop3Client so that I can get the metadata before downloading the whole message. \r\n\r\nYou're the expert, so I'll trust your judgement if that is a reasonable request or not worth the effort. Thank you!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/641/comments",
    "author": "jernelson7",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-01T15:09:17Z",
        "body": "IMAP is a far more flexible protocol than POP3. The IMAP and POP3 API's mimic the protocol commands that are available.\r\n\r\nThat said, POP3 does have a HEAD command which gets just the message headers and the Pop3Client has a GetHeaders() method to take advantage of this.\r\n\r\nThat's what I would recommend using.\r\n\r\nHope that helps!"
      },
      {
        "user": "jernelson7",
        "created_at": "2018-02-01T19:36:02Z",
        "body": "Thanks! I think that will work. I was worried about having to parse the headers but I see you have some support for that (e.g. InternetAddress.TryParse)."
      }
    ]
  },
  {
    "number": 624,
    "title": "ASP.NET Core 2.0 Trying to send email with O365 account",
    "created_at": "2018-01-06T16:51:18Z",
    "closed_at": "2018-01-06T17:41:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/624",
    "body": "Hi \r\nHope some one can point me to what i could be doing wrong. Trying to send email with MailKit using below sample code but seems to fail. I'm using an Office 365 account. \r\n\r\nI've tried different ports, 25, 587, 465, set useSSL to false, true, SecureSocketOptions.StartTls, SecureSocketOptions.StartTlsWhenAvailable. But zero success.\r\n\r\n`client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n client.Connect(\"mydomain.mail.protection.outlook.com\", 25, true);\r\nclient.Authenticate(\"username\", \"password\");\r\nclient.Send(message);\r\nclient.Disconnect(true);`\r\n\r\nI've also tried using `client.AuthenticationMechanisms.Remove (\"XOAUTH2\"); ` in the code but make no difference. \r\n\r\nThe error i'm getting is mainly \"The SMTP server does not support authentication\", but sometime \"The handshake failed due to an unexpected packet format.\"\r\n\r\nI have an older web API project where i'm using the .net smtp to connect with above details with no issue. Is this an account setting thing or issue in my code???\r\n\r\nThanks in advance\r\n  ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/624/comments",
    "author": "Mike-tech",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-06T17:41:36Z",
        "body": "You need to match the useSsl value with the port otherwise things are bound to fail.\r\n\r\nPort 465 is the *only* port you are *likely* to want to use `useSsl = true` with.\r\n\r\nThat explains the \"unexpected packet format\" error you got.\r\n\r\nThe \"server does not support authentication\" error means precisely that, the server does not support authentication. Which means don't call `client.Authenticate()` :)"
      },
      {
        "user": "Mike-tech",
        "created_at": "2018-01-06T18:19:02Z",
        "body": "Thanks for the pointer for excluding `client.Authenticate()` Wow! I never saw anywhere on the net that this should be excluded. In fact i didn't think this would work without authentication.\r\n\r\nMany thanks for quick response. :)"
      }
    ]
  },
  {
    "number": 533,
    "title": "Question: How to get the message headers (like X-....)",
    "created_at": "2017-07-03T08:24:01Z",
    "closed_at": "2017-07-03T13:42:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/533",
    "body": "Hi,\r\n\r\nI now use below code to get MessageSummary items to get information about the message. I also want to retrieve the headers. Is it possible to do it somehow in the same call or do I need to use the client.Inbox.GetHeaders(result[0].Index); method on each message?\r\n\r\n```\r\nclient.Inbox.Open(FolderAccess.ReadOnly);\r\n\r\nconst MessageSummaryItems items =\r\n\tMessageSummaryItems.UniqueId |\r\n\tMessageSummaryItems.Flags |\r\n\tMessageSummaryItems.Envelope |\r\n\tMessageSummaryItems.Body |\r\n\tMessageSummaryItems.Size;\r\n\r\nvar fields = new HashSet<HeaderId> {HeaderId.Importance};\r\nvar result = client.Inbox.Count == 0\r\n\t? new IMessageSummary[0]\r\n\t: client.Inbox.Fetch(0, -1, items, fields);\r\n\r\n//var test = client.Inbox.GetHeaders(result[0].Index);\r\n\r\nclient.Inbox.Close();\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/533/comments",
    "author": "Sicos1977",
    "comments": [
      {
        "user": "Sicos1977",
        "created_at": "2017-07-03T10:26:05Z",
        "body": "And is it also possible to check if a message has attachments without retrieving the entire message?"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-07-03T13:42:23Z",
        "body": "The `Fetch()` API is really designed to just get back a specified list of named headers and not the full header block of each message. So right now, you'll have to use `GetHeaders()` *unless* you can specify which X- headers you want:\r\n\r\n```csharp\r\nvar fields = new HashSet<string> ({ \"X-Mailer\", \"X-Priority\", \"X-Loop\" });\r\nvar result = folder.Fetch (0, -1, items, fields);\r\n```\r\n\r\nAs far as determining if a message has attachments or not, what you can do is include `MessageSummaryItems.BodyStructure` and then check the `IMessageSummary`'s `Attachments` property like so:\r\n\r\n```csharp\r\nif (item.Attachments.Any ())\r\n```"
      },
      {
        "user": "Sicos1977",
        "created_at": "2017-07-03T16:34:22Z",
        "body": "Thanks"
      },
      {
        "user": "ravikumarjella",
        "created_at": "2018-06-11T15:03:27Z",
        "body": "HI \r\ni followed the same but i am getting headers as null. this is my code : \r\n  var headerFields = new HashSet<string> { \"X-MS-Has-Attach\", \"X-Mailer\", \"X-Priority\", \"X-Loop\" };\r\nvar result = folder.Fetch (0, -1, items, headerFields );"
      }
    ]
  },
  {
    "number": 528,
    "title": ".net core bad cyrillic symbols",
    "created_at": "2017-06-23T13:36:05Z",
    "closed_at": "2017-06-23T13:42:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/528",
    "body": "Hi!\r\nI am trying to retrieve messages with Pop3Client. In .net core console application there is a problem with cyrillic symbols in MimeMessage objects. Results of last 10 message subjects in console (with Console.OutputEncoding = Encoding.Unicode;):\r\n\r\n> Subject: \u00f0\u00d2\u00cf\u00d3\u00d8\u00c2\u00c1!\r\n> Subject: \u00ef\u00d4\u00d0\u00d2\u00c1\u00d7\u00cb\u00c1: \u00eb\u00cf\u00ce\u00c3\u00c5\u00d0\u00c3\u00c9\u00d1 E3.Hub 2.0.pptx\r\n> Subject: FW: E3.Series \u00d7 Wiki. \u00e6\u00cf\u00d2\u00d5\u00cd E3.Series.\r\n> Subject: \u00f0\u00c5\u00d2\u00c5\u00c8\u00cf\u00c4\u00ce\u00c9\u00cb OTG c USB \u00ce\u00c1 micro USB\r\n> Subject: \u00f0\u00c5\u00de\u00c1\u00cc\u00d8\u00ce\u00c1\u00d1 \u00c4\u00c1\u00d4\u00c1\r\n> Subject: E3.Series \u00d7 Wiki. \u00e6\u00cf\u00d2\u00d5\u00cd E3.Series.\r\n> Subject: [Zuken E3 GmbH] ZDE551435 Answer to [Panel Sheets (errors)]\r\n> Subject: \u0410\u043d\u043e\u043d\u0441 DotNext 2017 Moscow\r\n> Subject: RE: E3.series \u0444\u0430\u0439\u043b \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0434\u043e 19 \u0438\u044e\u043d\u044f\r\n> Subject: \u00ef\u00d4\u00d0\u00d5\u00d3\u00cb\r\n\r\nThe same code result data in .net framework 4.5.2 console app:\r\n\r\n> Subject: \u041f\u0440\u043e\u0441\u044c\u0431\u0430!\r\n> Subject: \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430: \u041a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u044f E3.Hub 2.0.pptx\r\n> Subject: FW: E3.Series \u0432 Wiki. \u0424\u043e\u0440\u0443\u043c E3.Series.\r\n> Subject: \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u043d\u0438\u043a OTG c USB \u043d\u0430 micro USB\r\n> Subject: \u041f\u0435\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430\r\n> Subject: E3.Series \u0432 Wiki. \u0424\u043e\u0440\u0443\u043c E3.Series.\r\n> Subject: [Zuken E3 GmbH] ZDE551435 Answer to [Panel Sheets (errors)]\r\n> Subject: \u0410\u043d\u043e\u043d\u0441 DotNext 2017 Moscow\r\n> Subject: RE: E3.series \u0444\u0430\u0439\u043b \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0434\u043e 19 \u0438\u044e\u043d\u044f\r\n> Subject: \u041e\u0442\u043f\u0443\u0441\u043a\r\n\r\n\r\nMethod code is the same:\r\n\r\n```csharp\r\nusing (var client = new Pop3Client(new ProtocolLogger(\"pop3.log\")))\r\n            {\r\n                client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\r\n                client.Connect(\"webhost.pointcad.ru\", 0, true);\r\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\r\n                client.Authenticate(\"somedomain/somelogin\", \"somepassword\");\r\n\r\n                for (int i = 0; i < 10; i++) \r\n                {\r\n                    var message = client.GetMessage(client.Count - i - 1);\r\n                    \r\n                    Console.WriteLine(\"Subject: {0}\", message.Subject);\r\n                }\r\n                client.Disconnect(true);\r\n            }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/528/comments",
    "author": "bloodyroll",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-23T13:42:52Z",
        "body": "This suggests the problem is that your .net core installation does not include the proper text encodings. There's nothing MimeKit can do about that.\r\n\r\nTo test my theory, write a simple test program that tries to get a cyrilic encoding such as koi8-r:\r\n\r\n```csharp\r\nvar encoding = System.Text.Encoding.GetEncoding (\"koi8-r\");\r\n```\r\n\r\nMy bet is that you'll get an exception."
      },
      {
        "user": "bloodyroll",
        "created_at": "2017-06-24T09:14:07Z",
        "body": "thank you for help. Need to install System.Text.Encoding.CodePages package and add:\r\n```csharp\r\nEncoding.RegisterProvider(CodePagesEncodingProvider.Instance);"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-24T11:24:18Z",
        "body": "Thanks for the update, that will likely be helpful to others that run into this issue on .NET Core :)"
      }
    ]
  },
  {
    "number": 525,
    "title": "Unable to code Connect Method (Socket, String, Int32, SecureSocketOptions, CancellationToken)",
    "created_at": "2017-06-15T20:01:52Z",
    "closed_at": "2017-06-15T20:08:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/525",
    "body": "Hello,\r\n\r\nIf I try to use this code to connect an Imap client:\r\n```csharp\r\nSocket tcpSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\nclient.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\nclient.Connect(tcpSocket, mailbox.Host, mailbox.ServerPortNumber, mailbox.UseSsl);\r\nclient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\nclient.Authenticate(mailbox.User, mailbox.Password);\r\nvar inbox = client.Inbox;\r\ninbox.Open(FolderAccess.ReadOnly);\r\n```\r\n\r\n\r\nThe **tcpSocket** in the client.Connect statement, gives the error: **Argument 1: cannot convert from 'System.Net.Sockets.Socket' to 'string'**\r\n\r\nI think I am coding this in the correct way, but I am not sure of why the intellisense will not allow me to do that.\r\n\r\nI expected that it would be accepted since the first parameter of the Connect method is typed as a System.Net.Sockets.Socket.\r\n\r\nAny help that you can provide to resolve this issue would be gratefully appreciated.\r\n\r\nThanks,\r\nTony",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/525/comments",
    "author": "Carneno",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-15T20:08:16Z",
        "body": "Please provide the exact exception message and the StackTrace value. Thanks\n\n---\n\nOh, I bet the problem is that you are using a `bool` value for `useSsl` and there is no `Connect` method that takes a `Socket` and a `bool` for `useSsl`. You need to replace your `mailbox.UseSsl` with a `SecureSocketOptions` value."
      },
      {
        "user": "Carneno",
        "created_at": "2017-06-15T20:22:59Z",
        "body": "Jeffrey,\r\n\r\nThanks for your quick response and help.\r\n\r\nYes, the problem is I was using a bool value for useSsl.\r\n\r\nIt works now.\r\n\r\nTony"
      }
    ]
  },
  {
    "number": 518,
    "title": "Imap client.connect not giving exception when using bad port number",
    "created_at": "2017-06-07T14:23:27Z",
    "closed_at": "2017-06-07T15:00:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/518",
    "body": "\r\nHello,\r\n\r\nWhen I use this to connect to an IMAP server using SSL and port 993, it works fine.\r\n`try\r\n               {\r\n                    Mailbox mailbox = db.Mailboxes.Find(mbid);\r\n                    int mailboxcount = db.Mailboxes.Count();\r\n                    using (var client = new ImapClient())\r\n                    {\r\n                         client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                         client.Connect(mailbox.Host, mailbox.ServerPortNumber, mailbox.UseSsl);\r\n                         client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                         client.Authenticate(mailbox.User, mailbox.Password);\r\n                         var inbox = client.Inbox;\r\n                         inbox.Open(FolderAccess.ReadOnly);\r\n`\r\n\r\nIf I change the port number to something like 994, it never gets to the **client.AuthenticationMechanisms.Remove(\"XOAUTH2\");** statement.  It does not execute any of the exception catches.  It just exits the method completely.\r\n\r\nI used the Visual Studio 2017 debugger and it makes it to the **client.Connect(mailbox.Host, mailbox.ServerPortNumber, mailbox.UseSsl);** line, but when I continue execution, it never gives any kind of error message.\r\n\r\nI tried it in IE 11 and Mozilla Firefox.\r\n\r\nIs there a way to catch an exception message for this error?\r\n\r\nThanks,\r\nTony",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/518/comments",
    "author": "Carneno",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-07T15:00:01Z",
        "body": "Why would you try to connect to port 994?\r\n\r\nAnd yes, it will eventually throw an exception. Same as Socket.Connect() will. It just takes several minutes because of the standard TCP timeout."
      },
      {
        "user": "Carneno",
        "created_at": "2017-06-07T15:15:03Z",
        "body": "Jeffrey,\r\n\r\nThanks for your help.\r\n\r\nI myself would not try to connect to port 994, because I know that the correct port to use is 993, but what if one of my clients puts in the wrong port number by mistake when setting up their mailbox?\r\n\r\nI want to be able to inform them of what the problem is.\r\n\r\nIn my testing I did not wait for the timeout to occur.  I just tested it again and waited for the timeout and it did give an error message.\r\n\r\nThanks,\r\nTony"
      }
    ]
  },
  {
    "number": 493,
    "title": "Cancelling Search or GetMessage causes client to disconnect",
    "created_at": "2017-04-18T19:38:14Z",
    "closed_at": "2017-04-18T21:43:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/493",
    "body": "I don't know if it's a bug or just me not grasping the usage of the CancellationToken correctly, since I couldn't find an explanation about it. I'm trying to make a simple mail client, so to show messages in a folder using the `ImapService` I do the following:\r\n\r\n\r\n    static CancellationTokenSource _messagesTaskCts;\r\n    IMailFolder _sourceFolder;\r\n\r\n    async Task<ObservableCollection<MailMessage>> GetMessages()\r\n    {\r\n        try { _messagesTaskCts?.Cancel(); }\r\n        catch (ObjectDisposedException) { /* The implicated task already finished */ }\r\n        \r\n        using (_messagesTaskCts = new CancellationTokenSource())\r\n        {\r\n            var cToken = _messagesTaskCts.Token;\r\n            var messages = new ObservableCollection<MailMessage>();\r\n\r\n            await _sourceFolder.OpenAsync(FolderAccess.ReadOnly).ConfigureAwait(false);\r\n            var uids = (await _sourceFolder.SearchAsync(SearchQuery.All, cToken));\r\n\r\n            foreach (var uid in uids)\r\n            {\r\n                var msg = await _sourceFolder.GetMessageAsync(uid, cToken);\r\n                messages.Add(new MailMessage(msg));\r\n            }\r\n\r\n            return messages;\r\n        }\r\n    }\r\n\r\n\r\nHowever, if one folder is currently trying to retrieve its messages and I want to start retrieving messages from another folder (i.e. cancel current task and start new) I end up getting a `ServiceNotConnectedException.cs` telling me that the client has been disconnected.\r\n\r\nI expected that cancelling the token source would simply terminate the operation (be it `_sourceFolder.SearchAsync` or `_sourceFolder.GetMessageAsync`), but maybe that's not how I'm supposed to use the token?\r\n\r\nUsing MailKit v1.14.2 from NuGet",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/493/comments",
    "author": "Xerillio",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-04-18T20:21:36Z",
        "body": "The way that cancellation works is that if a command is already in progress, it has to drop the connection (there's no other way).\r\n\r\nThe convention for doing cancellation should probably look a bit like this from your perspective:\r\n\r\n```csharp\r\ntry {\r\n    client.DoSomethingAsync (..., cancellationToken);\r\n} catch (OperationCanceledException) {\r\n    if (!client.IsConnected) {\r\n        Reconnect ();\r\n    }\r\n}\r\n```\r\n\r\nI should note that the `ImapEngine` always checks cancelation state *before* issuing the command as well, so it's possible that the connection is not dropped if the command hasn't been sent yet, so you should always check `client.IsConnected`."
      },
      {
        "user": "Xerillio",
        "created_at": "2017-04-18T21:10:53Z",
        "body": "Thanks for the quick response, that makes sense now. It also forces me to think about how to handle retrying any task that is using the client when it loses connection."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-04-18T21:43:01Z",
        "body": "Glad that cleared things up :)"
      }
    ]
  },
  {
    "number": 456,
    "title": "Email InternalDate",
    "created_at": "2017-02-12T09:40:41Z",
    "closed_at": "2017-02-12T14:13:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/456",
    "body": "Hi,\r\n1) When i fetch the message summaries \r\n\r\n`inbox.Fetch(uids, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.InternalDate)`\r\n\r\nInternalDate is the same Date, but i expect \"received\" date from headers:\r\n\r\n```\r\nReceived: by 10.103.85.210 with SMTP id q79csp283698vsg;\r\n        Sat, 11 Feb 2017 18:24:14 -0800 (PST)\r\nX-Received: by 10.200.40.113 with SMTP id 46mr14303764qtr.167.1486866254026;\r\n        Sat, 11 Feb 2017 18:24:14 -0800 (PST)\r\nReceived: from a11-99.smtp-out.amazonses.com (a11-99.smtp-out.amazonses.com. [54.240.11.99])\r\n        by mx.google.com with ESMTPS id y36si4464679qty.52.2017.02.11.18.24.13\r\n        for <...@gmail.com>\r\n        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);\r\n        Sat, 11 Feb 2017 18:24:13 -0800 (PST)\r\nDate: Sun, 12 Feb 2017 02:24:13 +0000\r\n```\r\n\r\n2) How to get internal date (\"received\") when get message like `inbox.GetMessage(id)`?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/456/comments",
    "author": "lordofhammsters",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-12T14:13:47Z",
        "body": "What you can do is request specific header fields (such as Received) like this:\r\n\r\n```csharp\r\nvar fields = new HashSet<string> ();\r\nfields.Add (\"Received\");\r\n\r\ninbox.Fetch (uids, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope, fields);\r\n```\r\n\r\nAt this point you can access the `Headers` property of each message summary that is returned.\r\n"
      },
      {
        "user": "lordofhammsters",
        "created_at": "2017-02-13T11:41:38Z",
        "body": "Thank you for answer and library!"
      }
    ]
  },
  {
    "number": 445,
    "title": "send attachement from array",
    "created_at": "2017-01-01T07:08:56Z",
    "closed_at": "2017-01-01T16:09:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/445",
    "body": "I am testing .Net Core MVC, which does not support System.Net.Mail, Mailkit, works well but can't figure out how to send attachments that I have stored in my database as binary. I used the following in MVC 5:\r\n```\r\nvar mail = new MailMessage();\r\n     mail.Attachments.Add(new Attachment(new MemoryStream(attachment), \r\n     attachmentName, attachmentType));\r\n```\r\nI would appreciate your suggestions. Thank you",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/445/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-01-01T16:09:09Z",
        "body": "This is probably the easiest solution:\r\n\r\n```csharp\r\nvar message = new MimeMessage ();\r\nvar builder = new BodyBuilder ();\r\n\r\nbuilder.Attachments.Add (attachmentName, attachment, ContentType.Parse (attachmentType));\r\n\r\nmessage.Body = builder.ToMessageBody ();\r\n```\r\n\r\nThis assumes that `attachmentName` and `attachmentType` are strings while `attachment` is a `byte[]`."
      },
      {
        "user": "ghost",
        "created_at": "2017-01-01T18:44:45Z",
        "body": "Thank you"
      },
      {
        "user": "caocuongccc",
        "created_at": "2020-11-26T07:22:21Z",
        "body": "Thank man!"
      }
    ]
  },
  {
    "number": 438,
    "title": "MailKit - Attachment From Stream",
    "created_at": "2016-12-15T21:42:42Z",
    "closed_at": "2016-12-15T21:50:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/438",
    "body": "I am using epplus with Memory stream to download excel. Now i want use this stream in attachment can i? i cannot find any example about this.\r\nis there any working example like this\r\n> builder.Attachments.Add(stream,\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",  \"Report.xlsx\" );",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/438/comments",
    "author": "epozsh",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-12-15T21:49:45Z",
        "body": "What you can do is something like this:\r\n\r\n```csharp\r\nbuilder.Attachments.Add (\"Report.xslx\", stream);\r\n```\r\n\r\nor (if the above code doesn't get the correct mime-type)\r\n\r\n```csharp\r\nbuilder.Attachments.Add (\"Report.xslx\", stream, new ContentType (\"application\", \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\"));\r\n```\r\n\r\nJust be careful not to dispose the stream until after you have sent the message."
      },
      {
        "user": "epozsh",
        "created_at": "2016-12-16T08:03:18Z",
        "body": "Thank you very much, it does work. i was giving the parameters in wrong way. "
      }
    ]
  },
  {
    "number": 399,
    "title": "Interesting exception when try to log in an unsecure imap server",
    "created_at": "2016-09-15T17:34:01Z",
    "closed_at": "2016-09-15T17:52:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/399",
    "body": "Hi,\nMy problem is: my code is just working fine on gmail and other secure servers. When I'm connecting to this unsecure imap(without ssl) server it works on my main pc(even if I use a virtual machine(different ip, directly connected to the network card(diferent mac too), it has win 8.1 and working perfectly with the unsecure server).\n\nBut when I'm try to run my code on a different computer it throw this exception:\n\"A call to SSPI failed, see inner exception.\"\nInner exception: \"The Local Security Authority cannot be contacted\"\n\nAny idea what can cause this? How should I workaround this?\n(Sorry for my English)\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/399/comments",
    "author": "Jonas741",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T17:52:03Z",
        "body": "You are trying to connect with SSL. Show me your call to `client.Connect()`.\n\n\n---\n\nMake sure to use:\n\n``` csharp\nclient.Connect (\"hostname\", port, SecureSocketOptions.None);\n```\n\nUsing this should also work unless the server has a broken STARTTLS implementation:\n\n``` csharp\nclient.Connect (\"hostname\", port, SecureSocketOptions.StartTlsWhenAvailable);\n```\n"
      },
      {
        "user": "Jonas741",
        "created_at": "2016-09-15T18:12:48Z",
        "body": "Thanks it looks like helps.\n\nI have used a simple bool in the client.Connect(\"host\",port,xyz.ssl) like this.\n\nThanks for the quick answer, much appreciated.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T18:31:00Z",
        "body": "What the bool parameter does is it behaves the same as `SecureSocketOptions.StartTlsWhenAvailable`, so maybe your server advertizes that it supports `STARTTLS` but it's broken or something.\n"
      }
    ]
  },
  {
    "number": 384,
    "title": "Can't Delete message from GMail",
    "created_at": "2016-08-17T16:36:45Z",
    "closed_at": "2016-08-17T21:26:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/384",
    "body": "Hello. I trashed a message and tried to Expunge it. But message still is in trash folder. Code: \n\n```\nvar result = mailFolder.MoveTo(uniqueIds, trashFolder);\nmailFolder.CloseAsync(true);\nif (trashFolder.IsOpen) trashFolder.Close(false);\ntrashFolder.Open(MailKit.FolderAccess.ReadWrite);\ntrashFolder.SetFlags(result.Source, MailKit.MessageFlags.Deleted, true);\ntrashFolder.Expunge(result.Source);\ntrashFolder.Close(true);\n```\n\nHow can i expunge the trash folder?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/384/comments",
    "author": "yuribb",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-08-17T21:26:42Z",
        "body": "`result.Source` refers to the UIDs in the `mailFolder` and not the `trashFolder`. You want to use `result.Destination` when settings flags/expunging the `trashFolder`.\n\nHope that helps.\n"
      },
      {
        "user": "DavidKarlas",
        "created_at": "2016-08-18T06:43:30Z",
        "body": "Also what looks kind of wrong...\n`mailFolder.CloseAsync(true);` You need `await mailFolder.CloseAsync(true);` or ugly `mailFolder.CloseAsync(true).Wait();`\n"
      }
    ]
  },
  {
    "number": 379,
    "title": "Search query doesn't work when additional parameters are added inside loop",
    "created_at": "2016-08-09T22:43:52Z",
    "closed_at": "2016-08-10T08:15:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/379",
    "body": "```\nI have a strange issue with mailkit:\n\n\n        string[] fromAuthors = new string[] { \"@something.com\", \"@something2.com\", \"@somethingelse.net\" };\n\n        SearchQuery query = SearchQuery.FromContains(fromAuthors[0]);\n        for (int i = 1; i < fromAuthors.Length; i++)\n        {\n            query.Or(SearchQuery.FromContains(fromAuthors[i]));\n        }\n```\n\nThis doesn't work, `inbox.Search(query)` returns results for only the first entry  (in this case \"@something.com\"), everything else is being ignored.\n\nWhile this:\n\n```\n     SearchQuery query = SearchQuery.FromContains(fromAuthors[0]).Or(SearchQuery.FromContains(fromAuthors[1])) \n```\n\nworks fine, and results for both emails are being returned...\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/379/comments",
    "author": "gholol",
    "comments": [
      {
        "user": "DavidKarlas",
        "created_at": "2016-08-10T07:06:03Z",
        "body": "What you probably want to change is line inside for loop.\nFrom\n\n```\nquery.Or(SearchQuery.FromContains(fromAuthors[i]));\n```\n\nto\n\n```\nquery = query.Or(SearchQuery.FromContains(fromAuthors[i]));\n```\n"
      },
      {
        "user": "gholol",
        "created_at": "2016-08-10T08:14:55Z",
        "body": "Yeah, that worked... so it was my fault after all. \nThanks for help!\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-10T10:43:07Z",
        "body": "Thanks David :)\n"
      }
    ]
  },
  {
    "number": 375,
    "title": "Email start date",
    "created_at": "2016-07-22T12:31:05Z",
    "closed_at": "2016-07-22T12:41:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/375",
    "body": "Hi ,\n\nHow do you read an email account (Imap) from a particular time forward? I am using the following code. But this reads all emails on a particular day. I need to update the time read so that I do not have to read any previous emails from a time on a single day.\n\nDateTime ReadSDate = System.DateTime.Today;\nvar query = SearchQuery.DeliveredAfter(ReadSDate);\nforeach (var uid in inbox.Search(query))\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/375/comments",
    "author": "madu2003",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-07-22T12:41:25Z",
        "body": "The IMAP protocol does not support searching on a particular time of the day, it only supports searching based on a day.\n\nIf you want to read only messages delivered on a day after a certain specified time, you'll need to do the search you are currently doing and then further filter the results down by doing manual date comparisons.\n\nfor example:\n\n``` csharp\nvar results = inbox.Search (SearchQuery.DeliveredAfter (DateTime.Today));\nvar uids = new UniqueIdSet ();\n\nforeach (var info in inbox.Fetch (results, MessageSummaryItems.InternalDate | MessageSummaryItems.UniqueId)) {\n    if (info.InternalDate.Value >= searchDateTime)\n        uids.Add (info.UniqueId);\n}\n\n// now `uids` is the set of messages that match what you are looking for...\n```\n"
      }
    ]
  },
  {
    "number": 373,
    "title": "Which is the better Secure Socket Option?",
    "created_at": "2016-07-15T14:28:58Z",
    "closed_at": "2016-07-15T14:52:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/373",
    "body": "I am at present using SslOnConnect for my SMTP connections.  One user though is reporting that they can only connect when using port 465 and that it fails if they attempt to use 25.  I'm trying to check but at present they are adamant that they have security running on port 25.\n\nI know I'm not doing anything differently on the different ports and I'm pretty sure from the MailKit code that it isn't either but it has got me thinking about the SslOnConnect option.\n\nWhich is the better more secure one to use out of SslOnConnect and StartTls?\n\nFrom reading the comments SslOnConnect should be the better one as it should encrypt immediately.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/373/comments",
    "author": "Saurbaum",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-07-15T14:52:36Z",
        "body": "There isn't really a \"better\". SslOnConnect when used with SMTP is generally for port 465 and was historically used with SMTP servers that did not support SSL out of the box. What admins did was to wrap the SMTP port with another program that did the SSL encryption for the SMTP daemon process. This is known as \"SSL-wrapping\".\n\nLater, SMTP server implementations started getting SSL support natively and this is enabled in the protocol usually as soon as the client reads the server greeting and queries the capabilities to check if the server supports the STARTTLS extension.\n\nThe greeting and list of initial capabilities are perfectly safe to allow transmission in clear text, so it doesn't matter that those bits aren't encrypted. Where you want encryption is authentication and sending of the content.\n\nThe STARTTLS method is most often used with port 25 and/or 587 if the server supports it.\n\nNote, however, that the admin can run the SMTP server on _any_ port with _any_ configuration (SslOnConnect or via STARTTLS or none of the above) he or she wants. The ports I mention are just a general rule of thumb.\n\nHope that helps.\n"
      },
      {
        "user": "Saurbaum",
        "created_at": "2016-07-15T14:58:24Z",
        "body": "Thanks that's pretty much exactly what I was looking for.  By the sound of it I should use StartTLS because it's the more modern option so it's more likely that's what I'll encounter in the wild.\n\nDoes it also mean that the SslOnConnect can fail with \"The handshake failed due to an unexpected packet format.\" if the server is not expecting encryption until it has delivered its greetings and capabilities?  If so that explains what the customer is seeing.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-07-15T20:39:11Z",
        "body": "Yes.\n\nSslOnConnect and StartTLS are both pretty common in the wild, so be mindful of that...\n"
      }
    ]
  },
  {
    "number": 322,
    "title": "Authentication failed",
    "created_at": "2016-04-12T15:28:13Z",
    "closed_at": "2016-04-12T15:36:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/322",
    "body": "Hello,\n\nPeriodically when I connect to IMAP server I receive error:\n\n> MailKit.Security.AuthenticationException: Authentication failed.\n>    at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\n>    at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\n\nIMAP log:\n\n> Connected to imaps://imapserver.com:993/\n> S: \\* OK The Microsoft Exchange IMAP4 service is ready.\n> C: A00000000 CAPABILITY\n> S: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\n> S: A00000000 OK CAPABILITY completed.\n> C: A00000001 AUTHENTICATE NTLM\n> S: +\n> C: TlRMTVNTUAABAAAABwIIAAAAAAAgAAAAAAAAACAAAAA=\n> S: + TlRMTVNTUAACAAAACAAIADgAAAAFAokC/swBpqO/71gAAAAAAAAAAI4AjgBAAAAABgOAJQAAAA9PAEEATQBDAAIACABPAEEATQBDAAEAGABNAEMAVABFAFgAQQBSAFMAUgBWADAAMQAEABAAbwBhAG0AYwAuAGMAbwBtAAMAKgBNAEMAVABFAFgAQQBSAFMAUgBWADAAMQAuAG8AYQBtAGMALgBjAG8AbQAFABAAbwBhAG0AYwAuAGMAbwBtAAcACADS32cxyZTRAQAAAAA=\n> C: TlRMTVNTUAADAAAAGAAYAFQAAAAYABgAbAAAAAAAAABAAAAAFAAUAEAAAAAAAAAAVAAAAAAAAACEAAAAAYIIAG8AbQBhAG4ALgBzAHQAYQB0AHMAou72ajqXvS4AAAAAAAAAAAAAAAAAAAAAshgyuH6SJ/S5AP65OD29I8RMy9BPLZSJ\n> S: A00000001 NO AUTHENTICATE failed.\n> C: A00000002 AUTHENTICATE PLAIN\n> S: +\n> C: XXXXXXXX\n> S: A00000002 NO AUTHENTICATE failed.\n> C: A00000003 LOGIN plain_username plain_password\n> S: A00000003 NO Server Unavailable. 15\n> S: \\* BYE Connection closed. 14\n> C: A00000004 LOGOUT\n\nThe problem is that with Chilkat library I can authenticate stable. What can be reason?\nThank you.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/322/comments",
    "author": "SuhovDE",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-12T15:36:38Z",
        "body": "Try doing this before calling `client.Authenticate (...)`:\n\n``` csharp\nclient.AuthenticationMechanisms.Clear ();\n```\n\nThis will prevent MailKit from trying to authenticate via `NTLM` and `PLAIN` and instead just use the `LOGIN` command (which is probably what ChilKat is using).\n\nIt's possible that the server is disabling your login ability due to the failed `NTLM` and `PLAIN` attempts.\n"
      },
      {
        "user": "SuhovDE",
        "created_at": "2016-04-22T12:42:56Z",
        "body": "Thank you @jstedfast, it resolved the issue.\n"
      }
    ]
  },
  {
    "number": 316,
    "title": "Attachments are corrupt",
    "created_at": "2016-03-30T16:45:44Z",
    "closed_at": "2016-03-30T18:18:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/316",
    "body": "Hi, First of all thanks for the project. it's really really helpful. I love it.\n\nI have a question about attachments. I have seen all of your replies so trust me I have spent a full day on this problem but still can't get my head around. The way I have setup is that I download emails but not attachments, instead just save their names and disposition. Then when customer open the email, he can see the list of attachments and just click on them to download, however they are downloading as corrupted. Here is the download code.\n\n``` csharp\n        public MemoryStream GetAttachement(string fileName, string messageId)\n        {\n            HeaderSearchQuery searchCondition = SearchQuery.HeaderContains(\"Message-Id\", messageId);\n            Client.Inbox.Open(FolderAccess.ReadOnly);\n            IList<UniqueId> uids = Client.Inbox.Search(searchCondition);\n\n            foreach (UniqueId uniqueId in uids)\n            {\n                MimeMessage message = Client.Inbox.GetMessage(uniqueId);\n                if (message.Attachments.Count() > 0)\n                {\n                    var attachement = message.Attachments.Where(x => x.ContentDisposition.FileName.Equals(fileName, StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault();\n                    if (attachement != null)\n                    {\n                        var stream = new MemoryStream();\n                        attachement.WriteTo(stream);\n                        attachement.WriteTo(System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n                        return stream;\n                    }\n                }\n                //check for inline attachements\n                var inlineattachement = message.BodyParts.Where(x => x.ContentType.MediaType.Equals(\"image\", StringComparison.InvariantCultureIgnoreCase) && x.ContentType.Name.Equals(fileName, StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault();\n                if (inlineattachement != null)\n                {\n                    var stream = new MemoryStream();\n                    inlineattachement.WriteTo(stream);\n                    inlineattachement.WriteTo(System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n                    return stream;\n                }\n            }\n\n            return null;\n        }\n```\n\nAs a test, I am writing to both stream and saving to file but nothing is working. I have the latest version, so any help will be greatly appreciated.\nThanks in advance.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/316/comments",
    "author": "atiqi36",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-03-30T18:18:42Z",
        "body": "You are writing out the MIME container of the attachment and not the decoded attachment data.\n\nWhat you need to do is this:\n\n``` csharp\nvar stream = new MemoryStream();\nif (attachment is MessagePart) {\n    var rfc822 = (MessagePart) attachment;\n    rfc822.Message.WriteTo (stream);\n    rfc822.Message.WriteTo (System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n} else {\n    var part = (MimePart) attachment;\n    part.ContentObject.DecodeTo (stream);\n    part.ContentObject.DecodeTo (System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n}\nreturn stream;\n```\n\n(Note: For the inlineattachment logic, you don't need to check for `MessagePart` because that can't happen, image parts can only ever be `MimePart`s)\n"
      },
      {
        "user": "atiqi36",
        "created_at": "2016-03-30T19:43:01Z",
        "body": "Hi, thanks for quick reply but this is not working either. Exactly same problem. Any thoughts?\n\n\n---\n\nIt's working, my fault this time ;) Thanks for the help.\n"
      }
    ]
  },
  {
    "number": 303,
    "title": "Question about downloading attachments.",
    "created_at": "2016-02-12T07:57:39Z",
    "closed_at": "2016-02-12T13:58:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/303",
    "body": "Hello, I have the following issue.\n\nI'm using the IMAP protocol and the Fetch() method to get some emails.\nSome of them have attachments in the form of BodyPartBasic. \nI was wandering if there is a way to download the attachments without having to make a call to the server to get the BodyPart like this:\n\nIMessageSummary message = inboxFolder.Fetch(messageIDs, MessageSummaryItems.BodyStructure)[0];\nclient.Inbox.GetBodyPart(email.UniqueId, message.Attachments.FirstOrDefault());\n\nI have created my own EmailMessage class and I wish to save the attachments and to be able to download them when I want without having to make requests to the server for each of them. \nThis is possible if I use the GetMessage() method instead of Fetch(), because that way I get MimeMessage object, which have attachments of class MimeEntity, which I can download like this :\n\nusing (var stream = System.IO.File.Create(path)\n{\n      mimeAttachment.ContentObject.DecodeTo(stream);\n}\n\nI was also wandering what is the reason the GetMessage() method and Fetch() method to return different types of message objects (MimeMessage and IMessageSummary)?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/303/comments",
    "author": "karaliolio",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-12T13:58:25Z",
        "body": "An `IMessageSummary` is really just metadata for a message, it isn't an actual message. It's meant to be used for things like presenting a list of messages to the user (e.g. a mail client's message list). It also has the `MessageSummaryItems.Body` & `BodyStructure` fields which allow the client to get a glimpse at the structure of the message, allowing the client to optionally decide to download only a subset of the full message (this is ideal for situations where the network is slow and/or storage space on the device is limited, such as cell phones).\n\nThis is different from calling `GetMessage()` because `GetMessage()` will download the complete message and so calling `attachment.ContentObject.DecodeTo(stream)` isn't actually downloading anything because it has already been downloaded as part of `GetMessage()`.\n\nSo what does this mean?\n\nYou have 2 options:\n1. Download complete messages using `GetMessage()`, thus making things easy allowing you to decode attachments to streams at any time without need of requesting any additional data from the IMAP server, or...\n2. Using `Fetch()` to request message metadata, allowing you to download only the parts of the message that you want/need, but requiring you to keep track of which folder the message is from, what the message's UID is, and which `BodyPartBasic` corresponds to the part you want.\n\nWhich one you choose will depend on what you want to do.\n\nHope that helps.\n"
      },
      {
        "user": "karaliolio",
        "created_at": "2016-02-12T19:36:23Z",
        "body": "Great explanation! Thanks alot for the quick answer :)\n"
      }
    ]
  },
  {
    "number": 269,
    "title": "Authentication failed trying to connect to IMAP:4 Exchange server",
    "created_at": "2015-11-27T05:23:51Z",
    "closed_at": "2015-11-29T00:58:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/269",
    "body": "I am trying to connect to an IMAP:4 enabled hosted Exchange Server using \"IMapClient\" class from MailKit but I am getting the Authentication failed exception. The following is the dump of the logger:\n\nConnected to imap://IP-ADDRESS:143/?starttls=when-available\nS: \\* OK The Microsoft Exchange IMAP4 service is ready.\nC: A00000000 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 LOGINDISABLED STARTTLS UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\nS: A00000000 OK CAPABILITY completed.\nC: A00000001 STARTTLS\nS: A00000001 OK Begin TLS negotiation now.\nC: A00000002 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\nS: A00000002 OK CAPABILITY completed.\nC: A00000003 AUTHENTICATE NTLM\nS: +\nC: TlRMTVNTUAABAAAABwIIAAAAAAAgAAAAAAAAACAAAAA=\nS: + TlRMTVNTUAACAAAAEAAQADgAAAAFAokCT++vHlcHakoAAAAAAAAAAKQApABIAAAABgOAJQAAAA9EAFAAVABDAEwATwBVAEQAAgAQAEQAUABUAEMATABPAFUARAABAAoAQwBBAFMAMAAyAAQAHgBkAHAAdABjAGwAbwB1AGQALgBjAG8AbQAuAGEAdQADACoAYwBhAHMAMAAyAC4AZABwAHQAYwBsAG8AdQBkAC4AYwBvAG0ALgBhAHUABQAeAGQAcAB0AGMAbABvAHUAZAAuAGMAbwBtAC4AYQB1AAcACACYJccN0ijRAQAAAAA=\nC: TlRMTVNTUAADAAAAGAAYAFYAAAAYABgAbgAAAAAAAABAAAAAFgAWAEAAAAAAAAAAVgAAAAAAAACGAAAAAYIIAGUAbABlAGMAdAByAGkAYwBpAHQAeQDqlY7S6w1JqQAAAAAAAAAAAAAAAAAAAABmwpjC52AodwEn5tt4Or/Jsrx/RyHV0ew=\nS: A00000003 NO AUTHENTICATE failed.\nC: A00000004 AUTHENTICATE PLAIN\nS: +\nC: AGVsZWN0cmljaXR5AEVQYXNzd29yZDE=\nS: A00000004 NO AUTHENTICATE failed.\nC: A00000005 LOGIN ACCOUNT@EMAILADDRESS ACCPASSWORD\nS: A00000005 NO LOGIN failed.\nAUTHENTICATE failed.\n\nI should mention that same code works when I try to connect to our on-premiss exchange server but the Capabilities are a little bit different as followed:\n\nConnected to imap://IPADDRESS:143/?starttls=when-available\nS: \\* OK The Microsoft Exchange IMAP4 service is ready.\nC: V00000000 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI STARTTLS UIDPLUS ID CHILDREN IDLE NAMESPACE LITERAL+\nS: V00000000 OK CAPABILITY completed.\nC: V00000001 STARTTLS\nS: V00000001 OK Begin TLS negotiation now.\nC: V00000002 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS ID CHILDREN IDLE NAMESPACE LITERAL+\nS: V00000002 OK CAPABILITY completed.\nC: V00000003 AUTHENTICATE NTLM\nS: +\nC: TlRMTVNTUAABAAAABwIIAAAAAAAgAAAAAAAAACAAAAA=\nS: + TlRMTVNTUAACAAAADgAOADgAAAAFAokCPaBgQj6SzAoAAAAAAAAAAKYApgBGAAAABgOAJQAAAA9SAE8AQwBLAEUATgBEAAIADgBSAE8AQwBLAEUATgBEAAEAEgBSAE8AQwBLAC0ARQBYADAAMQAEABoAUgBvAGMAawBlAG4AZAAuAGwAbwBjAGEAbAADAC4AUgBPAEMASwAtAEUAWAAwADEALgBSAG8AYwBrAGUAbgBkAC4AbABvAGMAYQBsAAUAGgBSAG8AYwBrAGUAbgBkAC4AbABvAGMAYQBsAAcACABFCJ2wmCjRAQAAAAA=\nC: TlRMTVNTUAADAAAAGAAYAFYAAAAYABgAbgAAAAAAAABAAAAAFgAWAEAAAAAAAAAAVgAAAAAAAACGAAAAAYIIAGYAaQBsAGUAUwBNAEEAUgBUADAAMQDxvOiYzHcqeQAAAAAAAAAAAAAAAAAAAABq6PWCwxas9yZzLne1nD9r+ys7XCOfPXQ=\nS: V00000003 OK AUTHENTICATE completed.\n\nAny thought on that?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/269/comments",
    "author": "matt-mahdieh",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-11-29T00:58:38Z",
        "body": "Try disabling NTLM by using the following line of code before calling the Authenticate() method:\n\n``` csharp\nclient.AuthenticationMechanisms.Remove (\"NTLM\");\n```\n"
      },
      {
        "user": "matt-mahdieh",
        "created_at": "2015-12-14T01:02:06Z",
        "body": "Hi There,\n\nI gave it a try and it worked. Thanks for your help!\n\nRegards,\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-09-14T21:52:20Z",
        "body": "With this latest patch, you might not need to disable NTLM anymore. Let me know if you try it and it still fails.\n\nIf you'd rather wait for a new nuget release, I'll try to update the status of this bug when I get around to doing that.\n"
      }
    ]
  },
  {
    "number": 218,
    "title": "Mark an email as read POP3",
    "created_at": "2015-07-24T17:43:47Z",
    "closed_at": "2015-07-24T17:51:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/218",
    "body": "Hi. I'm developing a desktop application that monitors an email and gets its messages.\nHowever, everytime I'm gonna read them, I'm obligated to read every email again and again.\nIs there a way to set them as READ and then only read the UNREAD emails?\n\nPlease help me\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/218/comments",
    "author": "ericscaglioni",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-07-24T17:51:31Z",
        "body": "POP does not support read/unread status, it only supports deleting messages.\n\nIf you want to track read/unread status, you'll need to keep a log of which messages you've already \"read\".\n\nIf the POP3 server supports the UIDL extension, using the UIDs is probably the simplest way. Otherwise you'll have to use something else... like an MD5 sum of a few choice message headers (avoid headers like `Status` and `X-Status` as they may change between downloads).\n\nTo track by uids, you might do something like this:\n\n``` csharp\nvoid DownloadUnreadMessages (HashSet<string> known)\n{\n    using (var client = new PopClient ()) {\n        client.Connect (\"pop.gmail.com\", 993, true);\n        client.Authenticate (\"username\", \"password\");\n\n        if (client.Capabilities.HasFlag (Pop3Capabilities.Uidl)) {\n            var uids = client.GetMessageUids ();\n            for (int i = 0; i < client.Count; i++) {\n                if (known.Contains (uids[i]))\n                    continue;\n\n                var message = client.GetMessage (i);\n                known.Add (uids[i]);\n            }\n        } else {\n            // good luck!\n        }\n\n        client.Disconnect (true);\n    }\n}\n```\n"
      }
    ]
  },
  {
    "number": 180,
    "title": "Not receiving a MimeMessage sent on SmtpClient",
    "created_at": "2015-05-04T07:03:56Z",
    "closed_at": "2015-05-05T07:25:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/180",
    "body": "I'm just trying out MailKit for the first time, so I may be way off here, but I am using the Net.Pop3Client to pull a MimeMessage, and then send it to a new recipient. I am using the code below to send it, but it never appears in the recipient's gmail inbox:\n\n```\nusing (var smtp = new MailKit.Net.Smtp.SmtpClient())\n{\n    smtp.Connect(\"smtp.gmail.com\", 587, false);\n    smtp.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n    smtp.Authenticate(SmtpUser, SmtpPassword);\n\n    message.To.Clear();\n    message.To.Add(new MailboxAddress(\"Brady Kelly\", SmtpRecipient));\n    smtp.Send(message);\n    smtp.Disconnect(true);\n}\n```\n\nThe SmtpRecipient value is correct. I am using this with the built-in SMTP client and that works fine.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/180/comments",
    "author": "bradykelly",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-05-04T11:21:30Z",
        "body": "That looks correct, but make sure that the message does not have any Resent-From, Resent-To, Resent-Cc, etc. headers. If any of those headers are set, MailKit's SMTP implementation will use those instead of the normal From/To/Cc/Bcc headers.\n\nIf that's not the problem, try getting a log of the SMTP commands being sent:\n\n``` csharp\nusing (var smtp = new MailKit.Net.Smtp.SmtpClient(new ProtocolLogger(\"smtp.log\")))\n```\n\nIt's possible that the GMail SMTP server is rejecting the message for some reason and MailKit isn't properly catching the error(?).\n\n\n---\n\nI'll improve the docs to explain how it decides which sender and recipients to use when sending the message when you use `Send (MimeMessage message)`.\n\n\n---\n\nOh, I bet I know what the problem is: You aren't setting the Sender or From header, so MailKit will use whatever the Sender or From header existed in the message downloaded from the POP3 server.\n\nMy guess is that since the email address that MailKit is choosing to use as the sender is not your email address, GMail is (silently?) rejecting it.\n"
      },
      {
        "user": "bradykelly",
        "created_at": "2015-05-05T07:25:40Z",
        "body": "Thank you very much, Jeffrey. I have just tried again, with a proper sender, and all is running smooth as hell. I love MailKit!\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-05T11:04:55Z",
        "body": "Awesome! Glad you figured it out and love MailKit :-)\n"
      }
    ]
  },
  {
    "number": 129,
    "title": "IsAttachment is false for Attachment.",
    "created_at": "2014-12-11T12:13:43Z",
    "closed_at": "2014-12-11T14:05:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/129",
    "body": "I used Client.Inbox.Fetch(messagesUids, MessageSummaryItems.Full); for getting information from mailbox, and unfortunately for sent email i received there is no attachment.\nI used Gmail account, Imap, with email without subject and body.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/129/comments",
    "author": "WesolyPierozek",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2014-12-11T14:11:19Z",
        "body": "You need to request the BodyStructure (Full only requests Body which does not contain the needed information to determine if it is an attachment or not).\n\nI'm adding remarks for the IsAttachment, ContentDisposition, ContentLocation, and ContentLanguage properties to note that the BodyStructure flag must be used for these properties to be populated.\n\n\n---\n\nIn other words, try this:\n\n``` csharp\nclient.Inbox.Fetch(messagesUids, MessageSummaryItems.Full | MessageSummaryItems.BodyStructure);\n```\n"
      },
      {
        "user": "WesolyPierozek",
        "created_at": "2014-12-11T14:58:20Z",
        "body": "Thanks a lot, it changes a lot.\n"
      }
    ]
  }
]