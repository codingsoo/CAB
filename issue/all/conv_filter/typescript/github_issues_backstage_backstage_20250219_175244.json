[
  {
    "number": 8869,
    "title": "Move out Storybook into it's own workspace",
    "created_at": "2022-01-11T15:57:27Z",
    "closed_at": "2022-01-27T10:20:02Z",
    "labels": [
      "enhancement",
      "good first issue",
      "help wanted"
    ],
    "url": "https://github.com/backstage/backstage/issues/8869",
    "body": "We've got a real issue with upgrading certain dependencies, looking at you webpack \ud83d\udc40 , because we have two different versions of webpack v4, and v5 running side by side, and the types are all over the place for the webpack plugins and libraries.\r\n\r\nWe have a stable build right now, but trying to upgrade dependencies #8793 #8548 are proving to be a massive time sink as we need to get the correct modules installed in the correct places for our typescript build to pass with `skipLibCheck: false`.\r\n\r\nNot hoisting the packages from the `storybook` workspace has worked for now, but it would be really nice if we just had one version of webpack and all the dev-server dependencies in the project.\r\n\r\nUntil storybook starts to use v5 out of the box, there's little we can do, as you can use v5 with storybook, but it will also try and bring in v5 which makes the whole thing even worse.\r\n\r\nLet's move out Storybook into it's own yarn workspaces, that requires a seperate yarn install to get up and running and would install things in `storybook/node_modules` seperate with it's own yarn.lock.\r\n\r\nMaybe there's also a possibility to skip the build tooling of storybook entirely and just get it to generate something that we can hook into our own build system instead.",
    "comments_url": "https://api.github.com/repos/backstage/backstage/issues/8869/comments",
    "author": "benjdlambert",
    "comments": [
      {
        "user": "snehaljos",
        "created_at": "2022-01-12T12:34:59Z",
        "body": "hi am interested to work on it but I need some help can I work  on it?"
      },
      {
        "user": "benjdlambert",
        "created_at": "2022-01-12T12:45:34Z",
        "body": "So I think it should be a case of removing `storybook` from `packages` and placing it at the root level under `storybook/` and then making sure that all the stories still work, and that any workflows that run storybook need to do a `yarn install` in the `storybook` directory as well as a normal `yarn install`. Feel free to go ahead and see if you can get this working, maybe there could also be other dragons which make this a little tricky and not a `good first issue`. \ud83d\ude05 "
      },
      {
        "user": "benjdlambert",
        "created_at": "2022-01-27T10:20:18Z",
        "body": "Fixed! Thanks @snehaljos!"
      }
    ]
  },
  {
    "number": 3340,
    "title": "[Search] Improve search match",
    "created_at": "2020-11-19T08:42:47Z",
    "closed_at": "2020-11-20T14:28:26Z",
    "labels": [
      "good first issue",
      "help wanted",
      "search"
    ],
    "url": "https://github.com/backstage/backstage/issues/3340",
    "body": "The new frontend search plugin makes it possible to search across names and descriptions of entities. The name of an entity sometimes includes an hyphen, if I do search for that plugin I might search for \"documented component\" instead, without the hyphen. This will not give me a match as it is now, only if I search for \"documented-component\" with the hyphen included. \r\n\r\nWe would like to match a result even if the search query in the input field doesn't include the hyphen. ",
    "comments_url": "https://api.github.com/repos/backstage/backstage/issues/3340/comments",
    "author": "emmaindal",
    "comments": [
      {
        "user": "shashank-bairy",
        "created_at": "2020-11-20T11:28:57Z",
        "body": "Hi @emmaindal, I would like to work on this."
      },
      {
        "user": "emmaindal",
        "created_at": "2020-11-20T12:23:35Z",
        "body": "Great, I'll assign you @BA1RY \ud83c\udf89 "
      },
      {
        "user": "shashank-bairy",
        "created_at": "2020-11-20T13:24:27Z",
        "body": "Hi @emmaindal, I've made a PR. Please let me know if there are changes to be made. Thanks :smile: "
      },
      {
        "user": "emmaindal",
        "created_at": "2020-11-20T14:28:26Z",
        "body": "closed by #3365"
      }
    ]
  },
  {
    "number": 584,
    "title": "Packages should use dependencies instead of peerDependencies",
    "created_at": "2020-04-17T22:58:27Z",
    "closed_at": "2020-04-19T12:04:42Z",
    "labels": [
      "bug",
      "good first issue",
      "help wanted"
    ],
    "url": "https://github.com/backstage/backstage/issues/584",
    "body": "## Expected Behavior\r\n\r\nWe were hoping that peerDependencies could be used as a way to signal which dependencies should be shared with other packages. Even to the point where we inline the regular dependencies during the rollup build.\r\n\r\n## Current Behavior\r\n\r\nPeer dependencies don't work well with yarn workspaces, transitive dependencies in the workspace don't propagate properly. For example, if a plugin has a peer dependency on react and the app depends on the plugin, yarn will complain about a missing peer dependency, even if the app depends on react.\r\n\r\n## Possible Solution\r\n\r\nSkip using peerDependencies for now, make all packages just use dependencies instead. They pretty much behave the same anyway atm.\r\n\r\n## Context\r\n\r\nInitially brought up in #576, and partially fixed in #581.\r\n",
    "comments_url": "https://api.github.com/repos/backstage/backstage/issues/584/comments",
    "author": "Rugvip",
    "comments": [
      {
        "user": "ruarfff",
        "created_at": "2020-04-17T23:32:41Z",
        "body": "I can take this one on \ud83d\udc4d "
      },
      {
        "user": "Rugvip",
        "created_at": "2020-04-19T12:04:42Z",
        "body": "Fixed by #586"
      }
    ]
  }
]