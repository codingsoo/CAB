[
  {
    "number": 2441,
    "title": "Is `constructor` required for class components?",
    "created_at": "2021-06-29T16:28:28Z",
    "closed_at": "2021-06-29T16:51:54Z",
    "labels": [
      "question",
      "react"
    ],
    "url": "https://github.com/airbnb/javascript/issues/2441",
    "body": "# Is `constructor` required for class components?\r\n\r\nHi Everyone :wave:,\r\nso, can i use class component alike below? :thinking: \r\n```jsx\r\n// is this good?\r\nclass MyComponent extends React.Component {\r\n  render(){\r\n    return <div>...</div>;\r\n  }\r\n};\r\n```",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/2441/comments",
    "author": "mikoloism",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2021-06-29T16:32:47Z",
        "body": "It is not required, and should be omitted from any class that doesn\u2019t use constructor arguments directly.\r\n\r\nIn this case, that should be a functional component."
      },
      {
        "user": "mikoloism",
        "created_at": "2021-06-29T16:43:15Z",
        "body": "> It is not required, and should be omitted from any class that doesn\u2019t use constructor arguments directly.\r\n> \r\n> In this case, that should be a functional component.\r\n\r\n### :heart: :star_struck:\r\n**thank you** :heart_eyes:\r\n> yes, i should use function component, but i did it **simple** :+1: "
      }
    ]
  },
  {
    "number": 2395,
    "title": "How to Properly Setup the Extends Array",
    "created_at": "2021-02-23T09:23:01Z",
    "closed_at": "2021-02-23T16:18:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/2395",
    "body": "This is my current setup of the `extends` array in my `.eslintrc.js` file:\r\n\r\n```\r\n  extends: [\r\n    'plugin:react/recommended',\r\n    'plugin:react-hooks/recommended',\r\n    'airbnb',\r\n    'airbnb/hooks',\r\n    'plugin:@typescript-eslint/recommended',\r\n    'plugin:prettier/recommended',\r\n  ],\r\n```\r\n\r\nI am not sure, though, that I did this the right way.  Here are my questions.\r\n\r\nFirst, do I need to include either `'plugin:react/recommended'` or `'plugin:react-hooks/recommended'`?\r\n\r\nSecondly, if I do need to include those plugins, do I place them **before** `airbnb` and `airbnb/hooks` or **after**?  In other words, should it be like this:\r\n\r\n```\r\n  extends: [\r\n    'plugin:react/recommended',\r\n    'plugin:react-hooks/recommended',\r\n    'airbnb',\r\n    'airbnb/hooks',\r\n    ...\r\n  ],\r\n```\r\n\r\nOr like this:\r\n\r\n```\r\n  extends: [\r\n    'airbnb',\r\n    'airbnb/hooks',\r\n    'plugin:react/recommended',\r\n    'plugin:react-hooks/recommended',\r\n    ...\r\n  ],\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/2395/comments",
    "author": "thecodeclimber",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2021-02-23T15:31:55Z",
        "body": "Generally you wouldn\u2019t want to include either of those, since the Airbnb config handles both:\r\n```\r\n\u201cextends\u201d: [\r\n  \u201cairbnb\u201d,\r\n  \u201cairbnb/hooks\u201d,\r\n]\r\n```\r\nshould be sufficient."
      },
      {
        "user": "thecodeclimber",
        "created_at": "2021-02-23T16:01:25Z",
        "body": "Thanks :)"
      }
    ]
  },
  {
    "number": 1931,
    "title": "Since use of 'ForOfStatement' is not allowed ...",
    "created_at": "2018-10-06T18:49:21Z",
    "closed_at": "2018-10-07T00:56:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1931",
    "body": "Pretty sure this has been discussed thousands of times but haven't found a perfect replacement for my code snippet below.\r\n\r\nSince the use of `for...of` construct is not allowed, how can I write following code?\r\n\r\n``` javascript\r\n// lines is an array of strings\r\nlet value = ''\r\nfor (const line of lines) {\r\n   try {\r\n      const json = JSON.parse(line)\r\n      if (json) {\r\n        value = json.whatever \r\n        /* \r\n           more logic irrelevant to this question\r\n        */\r\n        // As soon as first jsonable line is found and processed, short-circuit the loop\r\n        break\r\n      }\r\n    } catch (err) {\r\n      // Handle error\r\n      // throw / reject / console.error() / return - could be anything\r\n    }  \r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1931/comments",
    "author": "hvkale",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2018-10-06T22:11:07Z",
        "body": "```js\r\nconst value = lines.reduce((prev, line) => prev.then((lastValue) => {\r\n  if (lastValue) { return lastValue; }\r\n  const result = JSON.parse(line);\r\n  if (result) {\r\n    return value.whatever;\r\n  }\r\n}).catch(errorHandling), Promise.resolve());\r\n```\r\nas long as `errorHandling` returns a falsy value to continue processing, a truthy value to stop processing, or re-throws, then `value` should end up as a promise for your desired value."
      },
      {
        "user": "hvkale",
        "created_at": "2018-10-07T00:56:16Z",
        "body": "@ljharb Thank you."
      }
    ]
  },
  {
    "number": 1860,
    "title": "why not recommended to use `array.length` directly in if statements \uff1f",
    "created_at": "2018-07-08T13:43:02Z",
    "closed_at": "2018-07-09T03:16:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1860",
    "body": "In NO. 15.3.\r\n```\r\n// bad\r\nif (collection.length) {\r\n  // ...\r\n}\r\n\r\n// good\r\nif (collection.length > 0) {\r\n  // ...\r\n}\r\n```\r\nwhy use `collection.length>0` is better than `collection.length`?",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1860/comments",
    "author": "momodiy",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2018-07-08T18:12:54Z",
        "body": "Because `.length` isn't a boolean - which means you're relying on the implicit conversion of a number to a boolean. Using `> 0` is explicit (and explicit > implicit), and avoids any possible confusion about what you mean."
      },
      {
        "user": "momodiy",
        "created_at": "2018-07-09T03:16:40Z",
        "body": "I see,thanks for your wonderful reply. @ljharb "
      }
    ]
  },
  {
    "number": 1810,
    "title": "Which is more appropriate in a promise callback with a extra arg? function pointer or function",
    "created_at": "2018-05-16T21:29:41Z",
    "closed_at": "2018-05-16T21:50:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1810",
    "body": "Which style is more appropriate when there is a extra argument in a callback? \r\n\r\nA function pointer using a bind to pass the extra arg:\r\n```javascript\r\npromise\r\n  .then(foo.bind(this, bar))\r\n```\r\n\r\nOr a callback without using a function pointer:\r\n```javascript\r\npromise\r\n  .then(foobar => foo(bar, foobar))\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1810/comments",
    "author": "dman777",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2018-05-16T21:38:16Z",
        "body": "The latter, primarily because `.bind` is often slow outside of super-modern v8 - but also because most functions don't need `this`, so in your example, the lack of reliance on `this` is more clear."
      },
      {
        "user": "dman777",
        "created_at": "2018-05-16T21:50:47Z",
        "body": "\ud83d\udc4d Thanks!"
      }
    ]
  },
  {
    "number": 1786,
    "title": "Prefer default export not working for const variable",
    "created_at": "2018-04-17T12:51:15Z",
    "closed_at": "2018-04-19T04:30:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1786",
    "body": "If I have single export in a file like this\r\n```\r\nexport const url = \"google.com\";\r\n```\r\nIt shows me linting error for prefer-default-export, but making it default would throw me this error\r\n`Parsing error: Unexpected token const`",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1786/comments",
    "author": "AjayPoshak",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2018-04-17T14:05:31Z",
        "body": "Because that\u2019s not a default export; if you want it default you\u2019ll have to do it in two lines:\r\n```jsx\r\nconst url = \u2018google.com\u2019;\r\nexport default url;\r\n```"
      },
      {
        "user": "AjayPoshak",
        "created_at": "2018-04-19T04:30:51Z",
        "body": "This solves my problem. Cool, thanks \ud83c\udf89 "
      }
    ]
  },
  {
    "number": 1692,
    "title": "prop-types in react router",
    "created_at": "2018-01-10T03:19:28Z",
    "closed_at": "2018-01-10T05:45:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1692",
    "body": "I use `eslint-config-airbnb` rules. and here is my code example.\r\n```jsx\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authLogin ?\r\n        <Component {...props} /> :\r\n        <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location },\r\n        }}\r\n        />\r\n    )}\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.element.isRequired,\r\n};\r\n```\r\n[eslint] 'location' is missing in props validation (react/prop-types)\r\n\r\nI wonder what should I do to fix it? I've attempted to fix but useless\r\n  ",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1692/comments",
    "author": "GravityMsc",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2018-01-10T04:43:49Z",
        "body": "For the record, our style guide prohibits arrow function SFCs; that should be `function PrivateRoute(`.\r\n\r\nThe error message is that your propTypes lack \"location\"; as you can see in `PrivateRoute.propTypes = {`, you haven't specified `location`.\r\n\r\nTry:\r\n```jsx\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.element.isRequired,\r\n  location: Redirect.propTypes.state.from, // if this doesn't work because Redirect badly specifies its propTypes, then:\r\n  location: PropTypes.object, // or whatever the most precise propType you can come up with is\r\n};\r\n```"
      },
      {
        "user": "GravityMsc",
        "created_at": "2018-01-10T06:17:56Z",
        "body": "Thank you. And I misunderstand the 'props'. I rewrite it in `Route.propTypes`. Sorry for bothering you "
      }
    ]
  },
  {
    "number": 1614,
    "title": "Initialize some property for each object in a list",
    "created_at": "2017-10-24T09:11:26Z",
    "closed_at": "2017-10-25T06:59:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1614",
    "body": "I want to do this\r\nthis.someList.forEach(item => item.someProperty = 'Some Value');\r\n\r\nBut i get these\r\nno-return-assign   Arrow function should not return assignment\r\nno-param-reassign  Assignment to property of function parameter 'item'\r\n\r\nHow do i do it diffrently?\r\n",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1614/comments",
    "author": "kirantambe",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2017-10-24T20:17:11Z",
        "body": "First,\r\n```js\r\nthis.someList.forEach(item => { item.someProperty = 'Some Value'; });\r\n```\r\nsince you're not trying to return a value from the arrow function.\r\n\r\nAs for `no-param-reassign`, the intent is specifically not to mutate - if `item` is a plain object, you could do:\r\n```js\r\nconst newList = this.someList.map(item => ({ ...item, someProperty: 'Some Value' }));\r\n```"
      },
      {
        "user": "kirantambe",
        "created_at": "2017-10-25T06:59:08Z",
        "body": "Yes they are plain objects so ill use map.\r\nDidnt know about the ... syntax. \r\nThanks"
      }
    ]
  },
  {
    "number": 1519,
    "title": "Clarification regarding react/prop-types validation and react router dom",
    "created_at": "2017-08-10T20:37:53Z",
    "closed_at": "2017-08-10T20:55:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1519",
    "body": "I am getting the alert, that I have to validate in prop types match, but I think it is not necessary.\r\n\r\nimport React from 'react';\r\n\r\n```javascript\r\nconst Header = (props) => {\r\n  const { match } = props; // 'match' is missing props validation (react/prop-types)\r\n  return (\r\n    <div>\r\n      <h1>Hello</h1>\r\n      <h3>ID: {match.params.id}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n```\r\n\r\nDo I need to validate it? What's the new convention?\r\n\r\nRegards",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1519/comments",
    "author": "rsancheza09",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2017-08-10T20:55:18Z",
        "body": "It's definitely necessary; every prop should have a propType (also, every SFC should be a non-arrow function, per this guide).\r\n\r\nIn your case, it looks like:\r\n```jsx\r\nmatch: PropTypes.shape({\r\n  params: PropTypes.shape({\r\n    id: PropTypes.node,\r\n  }).isRequired,\r\n}).isRequired\r\n```\r\nwould be the minimal propType - you could restrict it further to `PropTypes.string`, perhaps?"
      },
      {
        "user": "rsancheza09",
        "created_at": "2017-08-11T16:13:27Z",
        "body": "Thanks @ljharb but compiling the project and using this piece of code\r\n```javascript\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => {\r\n  const { match } = props;\r\n  return (\r\n    <div>\r\n      <h1>Hello</h1>\r\n      <h3>ID: {match.params.id}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Header;\r\n```\r\n\r\nI am getting now this error, that's the reason that I think that **'match'** maybe should not be necessary.\r\n\r\n> propType \"match\" is not required, but has no corresponding defaultProp declaration.  react/require-default-props"
      },
      {
        "user": "ljharb",
        "created_at": "2017-08-11T16:15:00Z",
        "body": "My original code has isRequireds, use them and you wont have that error."
      },
      {
        "user": "rsancheza09",
        "created_at": "2017-08-11T16:17:24Z",
        "body": "Cool thanks."
      }
    ]
  },
  {
    "number": 1509,
    "title": "Eslint installation issues",
    "created_at": "2017-07-31T16:07:04Z",
    "closed_at": "2017-07-31T16:10:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1509",
    "body": "Hi,\r\nI am very new to Eslint but I would like to use your eslint configuration. Therefore I've created a new .eslintrc.json file in the root folder and put \r\n```\r\n{\r\n  \"extends\": \"airbnb\"\r\n}\r\n```\r\ninto it. Then I tried to install your config with `npm install --save eslint-config-airbnb` which threw some errors though:\r\n\r\n> +-- UNMET PEER DEPENDENCY eslint@^3.19.0 || ^4.3.0                                                                                                                             \r\n> +-- eslint-config-airbnb@15.1.0                                                                                                                                                \r\n> | +-- UNMET PEER DEPENDENCY eslint@^3.19.0 || ^4.3.0                                                                                                                           \r\n> | `-- UNMET PEER DEPENDENCY eslint-plugin-import@^2.7.0                                                                                                                        \r\n> +-- UNMET PEER DEPENDENCY eslint-plugin-import@^2.7.0                                                                                                                          \r\n> +-- UNMET PEER DEPENDENCY eslint-plugin-jsx-a11y@^5.1.1                                                                                                                        \r\n> `-- UNMET PEER DEPENDENCY eslint-plugin-react@^7.1.0      \r\n\r\n                                                                                                                     \r\n                                                                                                                                                                               \r\n\r\n> npm WARN eslint-config-airbnb@15.1.0 requires a peer of eslint@^3.19.0 || ^4.3.0 but none was installed.                                                                       \r\n> npm WARN eslint-config-airbnb@15.1.0 requires a peer of eslint-plugin-jsx-a11y@^5.1.1 but none was installed.                                                                  \r\n> npm WARN eslint-config-airbnb@15.1.0 requires a peer of eslint-plugin-import@^2.7.0 but none was installed.                                                                    \r\n> npm WARN eslint-config-airbnb@15.1.0 requires a peer of eslint-plugin-react@^7.1.0 but none was installed.                                                                     \r\n> npm WARN eslint-config-airbnb-base@11.3.1 requires a peer of eslint@^3.19.0 || ^4.3.0 but none was installed.                                                                  \r\n> npm WARN eslint-config-airbnb-base@11.3.1 requires a peer of eslint-plugin-import@^2.7.0 but none was installed.                                                               \r\n> npm WARN brawlstats.io@1.0.0 No description                                                                                                                                    \r\n> npm WARN brawlstats.io@1.0.0 No repository field.                                                                                                                              \r\n> PS C:\\Users\\user\\Documents\\project-express> ^C^C                                                                                                                         \r\n> ESLint!\r\n> Ln 1, Col 1 (27 selected)Spaces: 2UTF-8CRLFJSON master* 0\u2193 2\u219100\r\n> Close\r\n\r\nVSCode shows:\r\n> InfoCannot find module 'eslint-config-airbnb' Referenced from: c:\\Users\\user\\Documents\\project-express\\.eslintrc.json\r\n\r\n\r\nWhat am I doing wrong?",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1509/comments",
    "author": "weeco",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2017-07-31T16:10:01Z",
        "body": "You're using the wrong install command: read the readme for eslint-config-airbnb for the proper one. Additionally, `--save` is for production deps, whereas eslint is a dev dep."
      },
      {
        "user": "weeco",
        "created_at": "2017-07-31T17:01:34Z",
        "body": "Thanks @ljharb that worked!\r\n\r\nFor my frontend javascript Eslint is going crazy because I don't use ES6 there and because of jquery ('$' is not defined). Is there a good solution to enable some sort of jquery configuration or do I need to disable all the rules which pop up there?"
      },
      {
        "user": "ljharb",
        "created_at": "2017-07-31T17:05:59Z",
        "body": "1) you should use ES6 + babel there\r\n2) if you don't, you'll have to use a different set of eslint rules for the non-ES6 code - you can use nested .eslintrc files for example, and extend `airbnb-base/legacy`. Separately, you can set `\"env\": { \"jquery\": true }` in your eslint config to enable jquery usage."
      }
    ]
  },
  {
    "number": 1444,
    "title": "In 7.4, another good expression",
    "created_at": "2017-06-11T03:13:04Z",
    "closed_at": "2017-06-11T07:07:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1444",
    "body": "`\r\nlet test;\r\nif (currentUser) {\r\n test = function bar() {\r\n   console.log('Yup.');\r\n };\r\n}\r\n`\r\nIs that a good expression ?",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1444/comments",
    "author": "pftom",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2017-06-11T03:48:51Z",
        "body": "Sure - but I'd probably do `const test = currentUser ? function bar() { \u2026 } : undefined;` to avoid the `let`."
      },
      {
        "user": "pftom",
        "created_at": "2017-06-11T06:47:04Z",
        "body": "Oh! Thanks!"
      }
    ]
  },
  {
    "number": 1386,
    "title": "import/no-duplicates vs import/no-named-default",
    "created_at": "2017-04-24T18:13:42Z",
    "closed_at": "2017-04-24T21:09:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1386",
    "body": "In a module with both `const` and `default` exports, how do I import both? It seems to fail with either `import/no-duplicates` or `import/no-named-default`.\r\n\r\n```\r\nexport const schema = {...}\r\n...\r\nconst config = ...\r\nexport default config;\r\n```\r\n```\r\nimport config from '.../config';\r\nimport { schema } from '.../config';\r\n\r\nerror config.js imported multiple times import/no-duplicates\r\n```\r\n```\r\nimport { default as config, schema } from '.../config';\r\n\r\nerror Use default import syntax to import 'config' import/no-named-default\r\n```",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1386/comments",
    "author": "kozhevnikov",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2017-04-24T19:30:20Z",
        "body": "Are you looking for `import config, { schema } from '../config';`?"
      },
      {
        "user": "kozhevnikov",
        "created_at": "2017-04-24T21:08:58Z",
        "body": "Yes, thank you. Had a little brain fart."
      }
    ]
  },
  {
    "number": 1349,
    "title": "Configuration for rule \"no-param-reassign\" is invalid ",
    "created_at": "2017-03-27T06:56:52Z",
    "closed_at": "2017-03-27T07:03:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1349",
    "body": "I think the latest version of eslint-config-airbnb-base v11.1.2 is giving me an error whenever I use the airbnb config with eslint. \r\n\r\nError log:\r\n\r\n```\r\nError: <project>/node_modules/eslint-config-airbnb-base/rules/best-practices.js:\r\n\tConfiguration for rule \"no-param-reassign\" is invalid:\r\n\tValue \"data[\"0\"].ignorePropertyModificationsFor\" has additional properties.\r\n\r\nReferenced from: <project>/node_modules/eslint-config-airbnb-base/index.js\r\nReferenced from: airbnb\r\n```\r\n\r\nAm I doing something wrong?",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1349/comments",
    "author": "kartiklad",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2017-03-27T06:59:18Z",
        "body": "That means you didn't update eslint along with it - ie, you didn't update the peer deps.\r\n\r\nRerun the install command in the package readme to update the peer deps to the right versions."
      },
      {
        "user": "kartiklad",
        "created_at": "2017-03-27T07:03:47Z",
        "body": "@ljharb oh ok! Thanks a lot that a very quick response. It works now. "
      }
    ]
  },
  {
    "number": 1305,
    "title": "React-Native + AirBnB's ESLint configuration",
    "created_at": "2017-02-16T13:33:25Z",
    "closed_at": "2017-07-17T16:28:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1305",
    "body": "We have started using ESLint in our react-native project and I am interested to find out what the ideal settings are.\r\n\r\nI currently have the following in my .eslintrc.json file.\r\n\r\n```\r\n{\r\n    \"extends\": [\"airbnb\", \"plugin:react-native/all\"],\r\n    \"plugins\": [\r\n        \"react-native\"\r\n    ]\r\n}\r\n```\r\n\r\nSome questions I have: I keep seeing this \"parser\": 'babel-eslint' but when I went to their github they mention this is no longer neccesary. Should I be using it or not?",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1305/comments",
    "author": "ItsNoHax",
    "comments": [
      {
        "user": "ItsNoHax",
        "created_at": "2017-02-16T14:20:20Z",
        "body": "Also if someone could Label this as a question, would be great!"
      },
      {
        "user": "tomkel",
        "created_at": "2017-04-13T19:21:09Z",
        "body": "Only stage 4 features are supported. If you are using something stage 3 and below, use `\"babel-eslint\"`.\r\n\r\nBasically, use `parser: \"eslint\"` until something breaks, which indicates that you are using an ES feature which hasn't made it into acorn yet. Then switch to `\"babel-eslint\"`."
      },
      {
        "user": "ItsNoHax",
        "created_at": "2017-07-17T16:28:25Z",
        "body": "Got all info I need"
      }
    ]
  },
  {
    "number": 1130,
    "title": "Question about modifying with forEach",
    "created_at": "2016-10-15T02:12:52Z",
    "closed_at": "2016-10-15T05:37:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1130",
    "body": "The example for 13.6 contains the snippet\n\n``` javascript\narray.forEach((value) => {\n  value += 1;\n});\n```\n\nHowever, this style guide forbids modifying the value of an element.\n\nWhat's the recommended way to change a property of all elements in an array? I'm working with changing the `.style` of DOM nodes in an array, so using `.map()` doesn't really feel right to me...\n",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1130/comments",
    "author": "controversial",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2016-10-15T03:13:16Z",
        "body": "Whoops, that's not a very good example :-) I'll fix it.\n\nIn the case of DOM nodes, because \"the DOM\", you can't avoid mutation. So, in that case only, it'd be appropriate to use an inline eslint override comment. At Airbnb we don't tend to run into that problem because we use React.\n"
      },
      {
        "user": "controversial",
        "created_at": "2016-10-15T10:36:01Z",
        "body": "Ok. Thanks for the swift response!\n"
      }
    ]
  },
  {
    "number": 1087,
    "title": "PascalCase or camelCase for HOC filenames",
    "created_at": "2016-09-23T07:42:27Z",
    "closed_at": "2016-09-23T10:41:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/airbnb/javascript/issues/1087",
    "body": "What is a correct filename  for that HOC component? `withFoo.jsx` or `WithFoo.jsx`?\n\n```\nexport default function withFoo(WrappedComponent) {\n    function WithFoo(props) {\n      return <WrappedComponent {...props} foo />;\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName\n      || WrappedComponent.name\n      || 'Component';\n\n    WithFoo.displayName = `withFoo(${wrappedComponentName})`;\n    return WithFoo;\n  }\n```\n",
    "comments_url": "https://api.github.com/repos/airbnb/javascript/issues/1087/comments",
    "author": "danturu",
    "comments": [
      {
        "user": "ljharb",
        "created_at": "2016-09-23T10:41:49Z",
        "body": "The default export is `withFoo`, so `withFoo.jsx`.\n"
      },
      {
        "user": "danturu",
        "created_at": "2016-09-23T11:56:20Z",
        "body": "@ljharb thank you!\n"
      }
    ]
  }
]