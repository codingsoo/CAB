[
  {
    "number": 11553,
    "title": "Error: 'import' and 'export' may appear only with 'sourceType: module', When running sls deploy",
    "created_at": "2022-11-25T16:34:24Z",
    "closed_at": "2022-11-26T00:38:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/11553",
    "body": "### Are you certain it's a bug?\n\n- [x] Yes, it looks like a bug\n\n### Is the issue caused by a plugin?\n\n- [X] It is not a plugin issue\n\n### Are you using the latest v3 release?\n\n- [X] Yes, I'm using the latest v3 release\n\n### Is there an existing issue for this?\n\n- [X] I have searched existing issues, it hasn't been reported yet\n\n### Issue description\n\nrunning a deploy throws an Error: 'import' and 'export' may appear only with 'sourceType: module'.\r\n\r\nTrying setting \"sourceType\" to \"module\" and it didn't work.\n\n### Service configuration (serverless.yml) content\n\n```yaml\nservice: nest-serverless-lambda\r\n\r\nplugins:\r\n - 'serverless-plugin-typescript'\r\n - serverless-plugin-optimize\r\n - serverless-offline\r\n - serverless-webpack\r\n\r\nprovider:\r\n name: aws\r\n runtime: nodejs14.x\r\n\r\nfunctions:\r\n oa-staging-backend:\r\n   handler: packages/backend/src/app/lambda.handler\r\n   events:\r\n     - http:\r\n         method: any\r\n         path: /{any+}\n```\n\n\n### Command name and used flags\n\nsls deploy --verbose --debug \"*\"\n\n### Command output\n\n```shell\nlifecycle:command:invoke:hook: [17]   > before:package:createDeploymentArtifacts\r\nlifecycle:command:invoke:hook: [17]   < before:package:createDeploymentArtifacts\r\nOptimize: starting engines\r\nOptimize: nest-serverless-lambda-dev-oa-staging-backend\r\naws: [1] { Error: connect EHOSTDOWN 169.254.169.254:80 - Local (172.20.10.8:65007)\r\n    at internalConnect (net.js:934:16)\r\n    at defaultTriggerAsyncIdScope (internal/async_hooks.js:452:18)\r\n    at net.js:1022:9\r\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)\r\n  message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1',\r\n  errno: -64,\r\n  code: 'CredentialsError',\r\n  syscall: 'connect',\r\n  address: '169.254.169.254',\r\n  port: 80,\r\n  time: 2022-11-25T16:30:10.671Z,\r\n  originalError:\r\n   { message: 'Could not load credentials from any providers',\r\n     errno: -64,\r\n     code: 'CredentialsError',\r\n     syscall: 'connect',\r\n     address: '169.254.169.254',\r\n     port: 80,\r\n     time: 2022-11-25T16:30:10.671Z,\r\n     originalError:\r\n      { message: 'EC2 Metadata roleName request returned error',\r\n        errno: -64,\r\n        code: 'EHOSTDOWN',\r\n        syscall: 'connect',\r\n        address: '169.254.169.254',\r\n        port: 80,\r\n        time: 2022-11-25T16:30:10.671Z,\r\n        originalError:\r\n         { errno: -64,\r\n           code: 'EHOSTDOWN',\r\n           syscall: 'connect',\r\n           address: '169.254.169.254',\r\n           port: 80,\r\n           message: 'connect EHOSTDOWN 169.254.169.254:80 - Local (172.20.10.8:65007)' } } } }\r\nlifecycle:command:invoke:hook: [17]   > before:package:createDeploymentArtifacts\r\nlifecycle:command:invoke:hook: [1] > before:deploy:deploy\r\n\r\n\u2716 Stack nest-serverless-lambda-dev failed to deploy (89s)\r\nprocess: handle error\r\nprocess: finalize { error:\r\n   { [SyntaxError: 'import' and 'export' may appear only with 'sourceType: module']\r\n     message: \"'import' and 'export' may appear only with 'sourceType: module'\",\r\n     line: 1,\r\n     column: 1,\r\n     annotated:\r\n      \"\\n/Users/bassel/oa-monorep/.build/node_modules/@nestjs/axios/node_modules/axios/index.js:1\\nimport axios from './lib/axios.js';\\n^\\nParseError: 'import' and 'export' may appear only with 'sourceType: module'\",\r\n     stream:\r\n      Labeled {\r\n        _readableState:\r\n         ReadableState {\r\n           objectMode: true,\r\n           highWaterMark: 16,\r\n           buffer: BufferList { length: 0 },\r\n           length: 0,\r\n           pipes:\r\n            Labeled {\r\n              _readableState: [ReadableState],\r\n              readable: true,\r\n              [domain]: null,\r\n              _events: [Object: null prototype],\r\n              _eventsCount: 8,\r\n              _maxListeners: undefined,\r\n              _writableState: [WritableState],\r\n              writable: true,\r\n              allowHalfOpen: true,\r\n              _options: [Object],\r\n              _wrapOptions: [Object],\r\n              _streams: [Array],\r\n              length: 1,\r\n              label: 'sort',\r\n              [Symbol(kCapture)]: false,\r\n              _writev: null,\r\n              [writableHighWaterMark]: [Getter],\r\n              [destroyed]: [Getter/Setter] },\r\n           pipesCount: 1,\r\n           flowing: true,\r\n           ended: false,\r\n           endEmitted: false,\r\n           reading: true,\r\n           sync: false,\r\n           needReadable: true,\r\n           emittedReadable: false,\r\n           readableListening: false,\r\n           resumeScheduled: false,\r\n           destroyed: false,\r\n           defaultEncoding: 'utf8',\r\n           awaitDrain: 0,\r\n           readingMore: false,\r\n           decoder: null,\r\n           encoding: null },\r\n        readable: true,\r\n        [domain]: null,\r\n        _events:\r\n         [Object: null prototype] {\r\n           end: [ [Function], [Function], [Function], [length]: 3 ],\r\n           finish: { [Function: bound onceWrapper] [length]: 0, [name]: 'bound onceWrapper', listener: [Function] },\r\n           error: { [Function (anonymous)] [length]: 1, [name]: '', [arguments]: null, [caller]: null, [prototype]: [Object] },\r\n           data: { [Function: ondata] [length]: 1, [name]: 'ondata', [prototype]: [Object] },\r\n           _mutate: { [Function: bound onceWrapper] [length]: 0, [name]: 'bound onceWrapper', listener: [Function] } },\r\n        _eventsCount: 5,\r\n        _maxListeners: undefined,\r\n        _writableState:\r\n         WritableState {\r\n           objectMode: true,\r\n           highWaterMark: 16,\r\n           finalCalled: false,\r\n           needDrain: false,\r\n           ending: false,\r\n           ended: false,\r\n           finished: false,\r\n           destroyed: false,\r\n           decodeStrings: true,\r\n           defaultEncoding: 'utf8',\r\n           length: 1,\r\n           writing: true,\r\n           corked: 0,\r\n           sync: false,\r\n           bufferProcessing: false,\r\n           onwrite: { [Function (anonymous)] [length]: 1, [name]: '', [prototype]: [Object] },\r\n           writecb: { [Function: nop] [length]: 0, [name]: 'nop', [prototype]: [Object] },\r\n           writelen: 1,\r\n           bufferedRequest: null,\r\n           lastBufferedRequest: null,\r\n           pendingcb: 1,\r\n           prefinished: false,\r\n           errorEmitted: false,\r\n           bufferedRequestCount: 0,\r\n           corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] },\r\n           [buffer]: [Getter] },\r\n        writable: true,\r\n        allowHalfOpen: true,\r\n        _options: { objectMode: true },\r\n        _wrapOptions: { objectMode: true },\r\n        _streams:\r\n         [ DestroyableTransform {\r\n             _readableState: [ReadableState],\r\n             readable: true,\r\n             [domain]: null,\r\n             _events: [Object: null prototype],\r\n             _eventsCount: 4,\r\n             _maxListeners: undefined,\r\n             _writableState: [WritableState],\r\n             writable: true,\r\n             allowHalfOpen: true,\r\n             _transformState: [Object],\r\n             _destroyed: false,\r\n             _transform: [Function],\r\n             [Symbol(kCapture)]: false,\r\n             _writev: null,\r\n             [writableHighWaterMark]: [Getter],\r\n             [destroyed]: [Getter/Setter] },\r\n           [length]: 1 ],\r\n        length: 1,\r\n        label: 'syntax',\r\n        [Symbol(kCapture)]: false,\r\n        _writev: null,\r\n        [writableHighWaterMark]: [Getter],\r\n        [destroyed]: [Getter/Setter] } },\r\n  shouldBeSync: undefined,\r\n  telemetryData: undefined,\r\n  shouldSendTelemetry: undefined }\r\nEnvironment: darwin, node 14.19.0, framework 3.25.0, plugin 6.2.2, SDK 4.3.2\r\nDocs:        docs.serverless.com\r\nSupport:     forum.serverless.com\r\nBugs:        github.com/serverless/serverless/issues\r\n\r\nError:\r\n'import' and 'export' may appear only with 'sourceType: module'\r\nauth: start with cached data: {}, expires NaN\r\nauth: resolved data from config: {}\r\nauth: mode: null\r\ntelemetry: payload { ciName: null,\r\n  isTtyTerminal: true,\r\n  cliName: 'serverless',\r\n  command: 'deploy',\r\n  commandOptionNames: [ 'verbose', 'debug', 'stage', 'region', [length]: 4 ],\r\n  console: { isAuthenticated: false },\r\n  dashboard: { userId: null, orgUid: undefined },\r\n  firstLocalInstallationTimestamp: 1669305495,\r\n  frameworkLocalUserId: 'cde0c610-6c10-11ed-8287-49d5a986a63d',\r\n  installationType: 'global:npm',\r\n  isAutoUpdateEnabled: false,\r\n  isUsingCompose: false,\r\n  notificationsMode: 'on',\r\n  timestamp: 1669393812432,\r\n  timezone: 'Asia/Beirut',\r\n  triggeredDeprecations: [ [length]: 0 ],\r\n  versions: { serverless: '3.25.0', '@serverless/dashboard-plugin': '6.2.2' },\r\n  commandDurationMs: 93817,\r\n  hasLocalCredentials: false,\r\n  npmDependencies:\r\n   [ '@emotion/react',\r\n     '@emotion/server',\r\n     '@fortawesome/fontawesome-svg-core',\r\n     '@fortawesome/free-regular-svg-icons',\r\n     '@fortawesome/free-solid-svg-icons',\r\n     '@fortawesome/react-fontawesome',\r\n     '@mantine/core',\r\n     '@mantine/form',\r\n     '@mantine/hooks',\r\n     '@mantine/next',\r\n     '@mantine/notifications',\r\n     '@nestjs/axios',\r\n     '@nestjs/common',\r\n     '@nestjs/config',\r\n     '@nestjs/core',\r\n     '@nestjs/passport',\r\n     '@nestjs/platform-express',\r\n     '@prisma/client',\r\n     'amazon-cognito-identity-js',\r\n     'aws-amplify',\r\n     'aws-lambda',\r\n     'aws-serverless-express',\r\n     'core-js',\r\n     'jwks-rsa',\r\n     'next',\r\n     'passport',\r\n     'passport-jwt',\r\n     'react',\r\n     'react-dom',\r\n     'reflect-metadata',\r\n     'regenerator-runtime',\r\n     'rxjs',\r\n     'tslib',\r\n     'zod',\r\n     '@nestjs/schematics',\r\n     '@nestjs/swagger',\r\n     '@nestjs/testing',\r\n     '@nrwl/cli',\r\n     '@nrwl/cypress',\r\n     '@nrwl/eslint-plugin-nx',\r\n     '@nrwl/jest',\r\n     '@nrwl/js',\r\n     '@nrwl/linter',\r\n     '@nrwl/nest',\r\n     '@nrwl/next',\r\n     '@nrwl/node',\r\n     '@nrwl/react',\r\n     '@nrwl/web',\r\n     '@nrwl/workspace',\r\n     '@testing-library/react',\r\n     '@types/aws-serverless-express',\r\n     '@types/jest',\r\n     '@types/node',\r\n     '@types/passport-jwt',\r\n     '@types/react',\r\n     '@types/react-dom',\r\n     '@typescript-eslint/eslint-plugin',\r\n     '@typescript-eslint/parser',\r\n     'babel-jest',\r\n     'babel-preset-es2015',\r\n     'class-validator',\r\n     'cypress',\r\n     'eslint',\r\n     'eslint-config-next',\r\n     'eslint-config-prettier',\r\n     'eslint-plugin-cypress',\r\n     'eslint-plugin-import',\r\n     'eslint-plugin-jsx-a11y',\r\n     'eslint-plugin-react',\r\n     'eslint-plugin-react-hooks',\r\n     'jest',\r\n     'jest-environment-jsdom',\r\n     'nx',\r\n     'plugin',\r\n     'prettier',\r\n     'prisma',\r\n     'react-test-renderer',\r\n     'sass',\r\n     'serverless-offline',\r\n     'serverless-plugin-optimize',\r\n     'serverless-plugin-typescript',\r\n     'serverless-webpack',\r\n     'ts-jest',\r\n     'ts-node',\r\n     'typescript',\r\n     [length]: 85 ],\r\n  config:\r\n   { configValidationMode: 'warn',\r\n     provider: { name: 'aws', runtime: 'nodejs14.x', stage: 'dev', region: 'us-east-1' },\r\n     variableSources: [ [length]: 0 ],\r\n     plugins:\r\n      [ 'serverless-plugin-typescript', 'serverless-plugin-optimize', 'serverless-offline', 'serverless-webpack', [length]: 4 ],\r\n     functions: [ { url: false, runtime: 'nodejs14.x', events: [ [Object], [length]: 1 ] }, [length]: 1 ],\r\n     resources: { general: [ [length]: 0 ] },\r\n     paramsCount: 0 },\r\n  isConfigValid: true,\r\n  didCreateService: false,\r\n  commandUsage: {} }\n```\n\n\n### Environment information\n\n```shell\nFramework Core: 3.25.0\r\nPlugin: 6.2.2\r\nSDK: 4.3.2\n```\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/11553/comments",
    "author": "basselabbara",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2022-11-25T16:39:43Z",
        "body": "@basselabbara this looks as problem related to one of the used plugins. Please report at given plugin repository"
      },
      {
        "user": "basselabbara",
        "created_at": "2022-11-25T16:55:32Z",
        "body": "@medikoo Can you tell which plugin?\r\n"
      },
      {
        "user": "medikoo",
        "created_at": "2022-11-25T16:56:31Z",
        "body": "@basselabbara unfortunately not"
      },
      {
        "user": "ahmadissa",
        "created_at": "2022-12-12T04:52:14Z",
        "body": "@basselabbara try it without serverless-plugin-optimize"
      },
      {
        "user": "basselabbara",
        "created_at": "2022-12-13T14:31:38Z",
        "body": "@ahmadissa I already had to do it that way and it worked so I created an issue on the plugin's issue page. So far no response so I guess I'm gonna have to move on without optimize."
      },
      {
        "user": "m16khb",
        "created_at": "2023-01-11T02:38:03Z",
        "body": "If you want to use axios while using optimization, you can exclude the relevant modules from optimization.\r\nex:\r\n```\r\ncustom:\r\n  optimize:\r\n    external:\r\n      [\r\n        'axios',\r\n        'form-data',\r\n        'combined-stream',\r\n        'delayed-stream',\r\n        'mime-types',\r\n        'mime-db',\r\n        'asynckit',\r\n        'proxy-from-env',\r\n        'follow-redirects',\r\n      ]\r\n    includePaths:\r\n      [\r\n        'node_modules/axios',\r\n        'node_modules/form-data',\r\n        'node_modules/combined-stream',\r\n        'node_modules/delayed-stream',\r\n        'node_modules/mime-types',\r\n        'node_modules/mime-db',\r\n        'node_modules/asynckit',\r\n        'node_modules/proxy-from-env',\r\n        'node_modules/follow-redirects',\r\n      ]\r\n```"
      }
    ]
  },
  {
    "number": 11038,
    "title": "Migrating from x86_64 to arm64 Graviton2 processor not updated ",
    "created_at": "2022-05-05T20:04:33Z",
    "closed_at": "2022-05-15T00:12:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/11038",
    "body": "### Are you certain it's a bug?\n\n- [X] Yes, it looks like a bug\n\n### Is the issue caused by a plugin?\n\n- [X] It is not a plugin issue\n\n### Are you using the latest version?\n\n- [X] Yes, I'm using the latest version\n\n### Is there an existing issue for this?\n\n- [X] I have searched existing issues, it hasn't been reported yet\n\n### Issue description\n\nWe tried to migrate our development env's lambda workload from x86_64 to arm64 Graviton2 processor using a serverless framework. serverless deployment was successful but the processor configuration was not changed. still it was using x86 processor. When I tried to change it manually on the AWS console, it was saying \r\n```\r\nIf the function uses a compiled language, or the function size exceeds the code editor storage limit (3 MB), you must upload a .zip file archive (or .jar file) when you change the architecture. Uploading a new .zip file package overwrites the existing code.\r\n```\r\n Is there any alternative way to override this? or how to change/migrate the processor without recreating/rebuilding the code?\r\n\r\n```\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs12.x\r\n  timeout: 90\r\n  memorySize: 1024\r\n  tracing: ture\r\n  architecture: arm64\r\n```\r\n\r\nFYI: if the code is less than 3MB and if it is not a zip file, I can change the processor using `sls deploy`\n\n### Service configuration (serverless.yml) content\n\n```yaml\nN/A\n```\n\n\n### Command name and used flags\n\nN/A\n\n### Command output\n\n```shell\nserverless --deploy --stage flux\n```\n\n\n### Environment information\n\n```shell\nsh-4.2# serverless --version\r\nFramework Core: 2.18.0\r\nPlugin: 4.4.2\r\nSDK: 2.3.2\r\nComponents: 3.4.6\r\nsh-4.2#\n```\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/11038/comments",
    "author": "pbalajiips",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2022-05-06T10:54:17Z",
        "body": "> We tried to migrate our development env's lambda workload from x86_64 to arm64 Graviton2 processor using a serverless framework. serverless deployment was successful but the processor configuration was not changed. still it was using x86 processor\r\n\r\n@pbalajiips I'm not able to reproduce that. (1) I've created a simple service with no `provider.architecture` setting, (2) deployed (3) in AWS console it shown `x86_64` at architecture (4) added `provider.architecture: arm64` (5) deployed (6) in AWS it shows as expected `arm64` setting.\r\n\r\nPlease minimise your setup to confirm where exactly is the issue, but this feature in Framework (no plugins involved) seems to work without issues"
      },
      {
        "user": "medikoo",
        "created_at": "2022-05-06T10:55:23Z",
        "body": "@pbalajiips actually you're using highly outdated version (you've checked _Yes, I'm using the latest version_ but that's not true).\r\n\r\nPlease upgrade"
      },
      {
        "user": "pbalajiips",
        "created_at": "2022-05-15T00:12:28Z",
        "body": "@medikoo Thanks a lot!!!, with recent version i can update the processors arch. \r\n\r\n#sls --version \r\nFramework Core: 3.17.0\r\nPlugin: 6.2.2\r\nSDK: 4.3.2\r\n\r\n   "
      }
    ]
  },
  {
    "number": 9715,
    "title": "Unable to configure provisioned concurrency 0",
    "created_at": "2021-07-07T15:25:12Z",
    "closed_at": "2021-07-08T12:43:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/9715",
    "body": "<!--\r\nQ1: Describe the problem (use case) that needs to be solved:\r\n-->\r\n\r\nWhen using `configValidationMode: error` and provisioned concurrency is set to 0 for some function, an error is thrown requiring:\r\n```\r\nConfiguration error at 'functions.authorizer.provisionedConcurrency': should be >= 1\r\n```\r\n\r\n### Use case description\r\n\r\nThis would be useful in cases where provisioned concurrency is only desired for certain stage deployments.  It allows the provisioned concurrency configuration to be conditional.\r\n\r\n<!--\r\nQ2: Propose a solution (e.g. provide configuration example)\r\n-->\r\n\r\n### Proposed solution\r\n\r\nAllow provisioned concurrency 0 - it currently works without `configValidationMode: error`, which is useful in cases where provisioned currency is only desired for certain stage deployments.  It allows the provisioned concurrency configuration to be conditional.\r\n\r\n```\r\nfunctions:\r\n  authorizer:\r\n    handler: handler\r\n    provisionedConcurrency: ${self:custom.config.authorizer-provisioned-concurrency}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/9715/comments",
    "author": "jackmuskopf",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2021-07-07T16:31:08Z",
        "body": "@jackmuskopf if you don't want to setup `provisionedConcurrency` but for some technical reason need to keep property in configuration, simply set it to `null`"
      },
      {
        "user": "jackmuskopf",
        "created_at": "2021-07-08T12:21:40Z",
        "body": "@medikoo Using `null` works with `configValidationMode: error` but leads me to a different concern: using `null` fails with\r\n\r\n```\r\n  Cannot resolve serverless.yml: Variables resolution errored with:\r\n    - Cannot resolve variable at \"functions.authorizer.provisionedConcurrency\": Value not found at \"self\" \r\nsource\r\n```\r\n\r\nwhen using `variablesResolutionMode: 20210326`, which like `configValidationMode: error` looks like it will become default in the next major release.  Maybe I can use `configValidationMode: warn` after the next major release.\r\n\r\n "
      },
      {
        "user": "medikoo",
        "created_at": "2021-07-08T12:31:34Z",
        "body": "@jackmuskopf if you want to accept _no value_ as valid resolution value, you need to explicitly configure a fallback to `null` as:\r\n\r\n```\r\n ${self:custom.config.authorizer-provisioned-concurrency, null}\r\n```"
      },
      {
        "user": "jackmuskopf",
        "created_at": "2021-07-08T12:43:30Z",
        "body": "Excellent! Thank you!"
      }
    ]
  },
  {
    "number": 7534,
    "title": "v1.67.0 Could not unzip uploaded file",
    "created_at": "2020-04-02T14:08:58Z",
    "closed_at": "2020-04-22T22:04:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/7534",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\n1. What did you do: AWS, nodejs HTTP API with events\r\n1. What happened?:  CustomDashresourceDashapigwDashcwDashroleLambdaFunction - Could not unzip uploaded file\r\n1. What should've happened?: Success deploy\r\n1. What's the content of your `serverless.yml` file?\r\n```yml\r\napp: myapp\r\norg: myorg\r\nservice: myservice\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs12.x\r\n\r\nfunctions:\r\n  api:\r\n    handler: handler.http\r\n    events:\r\n      - http:\r\n          path: /packages/{packages}\r\n          method: post\r\n```\r\n\r\nIt works with v1.66.0.\r\n- #12345\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/7534/comments",
    "author": "ianberdin",
    "comments": [
      {
        "user": "rafaeelaudibert",
        "created_at": "2020-04-08T16:22:37Z",
        "body": "Same issue here, but it works on **1.67.3** though"
      },
      {
        "user": "medikoo",
        "created_at": "2020-04-21T12:41:14Z",
        "body": "@ianberdin do you still observe the issue with latest version? What OS are you on?"
      },
      {
        "user": "ianberdin",
        "created_at": "2020-04-21T13:43:23Z",
        "body": "Hi, I will check later"
      },
      {
        "user": "ianberdin",
        "created_at": "2020-04-22T22:04:59Z",
        "body": "1.6.8 perfectly works.\r\nThank you \ud83d\udc4d"
      }
    ]
  },
  {
    "number": 7480,
    "title": "Can't deploy to AWS China regions",
    "created_at": "2020-03-18T09:45:09Z",
    "closed_at": "2020-03-24T13:17:01Z",
    "labels": [
      "question",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/7480",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\n1. What did you do?\r\ncreate an simple lambda function using aws-nodejs sample. \r\nDeploy the application using sls deploy.\r\n\r\n1. What happened?\r\n\r\nReceived error saying security token is invalid. I did have IAM admin AK/SK configured for AWS China regions. \r\n\r\n```bash\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ aws sts get-caller-identity --profile china --region cn-northwest-1\r\n{\r\n    \"Account\": \"xxxxxxxxxxxxx\",\r\n    \"UserId\": \"AIDAOUZ3VMBZOM4GMPZ7E\",\r\n    \"Arn\": \"arn:aws-cn:iam::xxxxxxxxxxxxx:user/admin\"\r\n}\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ sls deploy --profile china --region cn-northwest-1\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  The security token included in the request is invalid.\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n\r\n\r\n```\r\n1. What should've happened?\r\n\r\nThe deploy should succeed. \r\n\r\n1. What's the content of your `serverless.yml` file?\r\n\r\n```\r\n\r\nservice: projects\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs12.x\r\n\r\n  stage: dev\r\n  region: cn-northwest-1\r\n  endpointType: REGIONAL\r\n\r\nfunctions:\r\n  hello:\r\n    handler: handler.hello\r\n\r\n\r\n```\r\n\r\n\r\n1. What's the output you get when you use the `SLS_DEBUG=*` environment variable (e.g. `SLS_DEBUG=* serverless deploy`)\r\n\r\n```\r\nServerless: Load command interactiveCli\r\nServerless: Load command config\r\nServerless: Load command config:credentials\r\nServerless: Load command config:tabcompletion\r\nServerless: Load command config:tabcompletion:install\r\nServerless: Load command config:tabcompletion:uninstall\r\nServerless: Load command create\r\nServerless: Load command install\r\nServerless: Load command package\r\nServerless: Load command deploy\r\nServerless: Load command deploy:function\r\nServerless: Load command deploy:list\r\nServerless: Load command deploy:list:functions\r\nServerless: Load command invoke\r\nServerless: Load command invoke:local\r\nServerless: Load command info\r\nServerless: Load command logs\r\nServerless: Load command metrics\r\nServerless: Load command print\r\nServerless: Load command remove\r\nServerless: Load command rollback\r\nServerless: Load command rollback:function\r\nServerless: Load command slstats\r\nServerless: Load command plugin\r\nServerless: Load command plugin\r\nServerless: Load command plugin:install\r\nServerless: Load command plugin\r\nServerless: Load command plugin:uninstall\r\nServerless: Load command plugin\r\nServerless: Load command plugin:list\r\nServerless: Load command plugin\r\nServerless: Load command plugin:search\r\nServerless: Load command config\r\nServerless: Load command config:credentials\r\nServerless: Load command rollback\r\nServerless: Load command rollback:function\r\nServerless: Load command upgrade\r\nServerless: Load command uninstall\r\nServerless: Load command login\r\nServerless: Load command logout\r\nServerless: Load command generate-event\r\nServerless: Load command test\r\nServerless: Load command dashboard\r\nServerless: Load command output\r\nServerless: Load command output:get\r\nServerless: Load command output:list\r\nServerless: Load command param\r\nServerless: Load command param:get\r\nServerless: Load command param:list\r\nServerless: Invoke deploy\r\nServerless: Invoke package\r\nServerless: Invoke aws:common:validate\r\nServerless: Invoke aws:common:cleanupTempDir\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\nServerless: Invoke aws:package:finalize\r\nServerless: Invoke aws:common:moveArtifactsToPackage\r\nServerless: Invoke aws:common:validate\r\nServerless: Invoke aws:deploy:deploy\r\nServerless: [AWS cloudformation 403 1.528s 0 retries] describeStacks({ StackName: 'projects-dev' })\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  ServerlessError: The security token included in the request is invalid.\r\n      at /Users/sunhua/.nvm/versions/node/v12.16.1/lib/node_modules/serverless/lib/plugins/aws/provider/awsProvider.js:331:27\r\n      at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/7480/comments",
    "author": "bnusunny",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2020-03-23T03:23:56Z",
        "body": "@bnusunny thanks for report. Such error happens if security token as provided in AWS credentials is outdated. Are you sure your credentials configuration is up to date?"
      },
      {
        "user": "bnusunny",
        "created_at": "2020-03-23T13:54:04Z",
        "body": "@medikoo Yes, I'm sure my credential is up to date. As you can see in the following tests. I can use aws cli to get back my IAM identity, and immediately after that, I do the deployment, it fails. \r\n\r\nUser accounts in AWS China regions and global regions are completed seperated. AWS China region's IAM credentials can only be used in AWS China regions. If serverless cli sent the request to AWS global regions, the request would fail.  \r\n\r\n```bash\r\n\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ aws sts get-caller-identity --profile china --region cn-northwest-1\r\n{\r\n    \"Account\": \"xxxxxxxxxxxxx\",\r\n    \"UserId\": \"AIDAOUZ3VMBZOM4GMPZ7E\",\r\n    \"Arn\": \"arn:aws-cn:iam::xxxxxxxxxxxxx:user/admin\"\r\n}\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ sls deploy --profile china --region cn-northwest-1\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  The security token included in the request is invalid.\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "medikoo",
        "created_at": "2020-03-24T00:18:34Z",
        "body": "Thanks @bnusunny for futher clarifications. It's probably an issue with hardcoded AWS partition (`:aws:` token) sowewhere.\r\n\r\nWe'll try to look into it shortly. Otherwise if anyone has quick idea where's the source of a problem PR with a fix is welcome!"
      },
      {
        "user": "drexler",
        "created_at": "2020-03-24T11:51:17Z",
        "body": "@bnusunny  i see you deploying with `sls deploy --profile china --region cn-northwest-1`\r\n\r\ndoes the following work for you?: \r\n`sls deploy --aws-profile china --region cn-northwest-1`"
      },
      {
        "user": "bnusunny",
        "created_at": "2020-03-24T13:17:01Z",
        "body": "It works! Thanks for pointing out my mistake. \r\n\r\nClosing this issue. "
      },
      {
        "user": "myfreax",
        "created_at": "2021-05-17T13:36:16Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 6887,
    "title": "Ignore 200 CF resource limit",
    "created_at": "2019-10-25T15:12:45Z",
    "closed_at": "2019-11-13T17:44:29Z",
    "labels": [
      "question",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/6887",
    "body": "Hello,\r\n\r\nWould it be possible to ignore the CF resource limit validation? I\u2019ve managed to increase the limit from 200 to 500 resources (through AWS support), but the deploy still fails because it looks like the framework also validates locally the number of resources in a stack.\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6887/comments",
    "author": "celicoo",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-25T15:16:06Z",
        "body": "@celicoo 200 resources per stack is a fixed, not adjustable, limit on AWS grounds (also I don't think framework implies any extra validation on that).\r\n\r\nI believe you've increased some other limit (e.g. maximum number of stacks)"
      },
      {
        "user": "celicoo",
        "created_at": "2019-11-13T17:44:29Z",
        "body": "@medikoo you're right. Sorry for not replying earlier."
      }
    ]
  },
  {
    "number": 6824,
    "title": "`npm run test-ci` fails with  lib/classes/PluginManager.test.js",
    "created_at": "2019-10-12T08:21:24Z",
    "closed_at": "2019-10-15T17:28:20Z",
    "labels": [
      "question",
      "cat/plugin"
    ],
    "url": "https://github.com/serverless/serverless/issues/6824",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\nWhen I run `npm run test-ci` with the latest commit aba4e09c7be7e1c89b14728428f0f1a3bf9ccbbb, it fails and shows following message:\r\n\r\n```\r\n  105 passing (8s)\r\n  1 failing\r\n\r\n  1) PluginManager\r\n       #loadAllPlugins()\r\n         should throw an error when trying to load unknown plugin:\r\n\r\n      AssertionError: expected [Function] to throw 'ServerlessError' but 'TypeError: Cannot read property \\'realPath\\' of null' was thrown\r\n      + expected - actual\r\n\r\n      -TypeError: Cannot read property 'realPath' of null\r\n      +ServerlessError\r\n      \r\n      at Context.it (lib/classes/PluginManager.test.js:710:74)\r\n      at process._tickCallback (internal/process/next_tick.js:61:11)\r\n\r\n\r\n\r\nlib/classes/PluginManager.test.js failed\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! serverless@1.54.0 test-isolated: `mocha-isolated`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the serverless@1.54.0 test-isolated script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /Users/akito/.npm/_logs/2019-10-12T07_00_32_589Z-debug.log\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! serverless@1.54.0 test-ci: `npm run prettier-check-updated && npm run lint-updated && npm run test-isolated`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the serverless@1.54.0 test-ci script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n```\r\n\r\nCommit 050cb90684c03559fd484c89fb13ab380b3c263a may be related to this issue.\r\nWhen I run the same command with the previous commit, 4d9006bcdf783f96ca89c4901947c7159ea64121, it gets success.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6824/comments",
    "author": "kdnakt",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-14T07:52:21Z",
        "body": "@kdnakt ensure to update dependencies with `npm install` (error is like you've pulled new changes but didn't update the dependencies)"
      },
      {
        "user": "kdnakt",
        "created_at": "2019-10-15T17:28:20Z",
        "body": "@medikoo Thanks for your advise, I got success after running `npm install`!"
      }
    ]
  },
  {
    "number": 6803,
    "title": "The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed",
    "created_at": "2019-10-08T10:06:35Z",
    "closed_at": "2019-10-08T12:28:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/6803",
    "body": "# Bug Report\r\n\r\n## Description\r\nI opened a ticket within AWS Support and they have increased our CF Stack limit to 500 resources. Even though the limit was increased, Serverless is still throwing the error in the title.\r\n\r\nObviously our limit is not 200 anymore but 500 instead and Serverless keeps telling that the It is still 200, why? \r\n\r\nHow can I use Serverless with more than 200 resources now that the limit has been increased?\r\n\r\n\r\n1. What did you do?\r\n   sls deploy\r\n1. What happened?\r\n   The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed\r\n1. What should've happened?\r\n    Successfully deploy\r\n1. What's the content of your `serverless.yml` file?\r\n     Does not matter\r\n1. What's the output you get when you use the `SLS_DEBUG=*` environment variable (e.g. `SLS_DEBUG=* serverless deploy`)\r\n    Serverless: Packaging service...\r\nServerless: Excluding development dependencies...\r\nServerless: Uploading CloudFormation file to S3...\r\nServerless: Uploading artifacts...\r\nServerless: Uploading service dialog-manager.zip file to S3 (10.66 MB)...\r\nServerless: Validating template...\r\nUnhandled rejection Error: The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed, 200\r\n    at provider.request.catch.error (/usr/local/lib/node_modules/serverless/lib/plugins/aws/deploy/lib/validateTemplate.js:19:13)\r\n    at tryCatcher (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/util.js:16:23)\r\n    at Promise._settlePromiseFromHandler (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:517:31)\r\n    at Promise._settlePromise (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:574:18)\r\n    at Promise._settlePromise0 (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:619:10)\r\n    at Promise._settlePromises (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:695:18)\r\n    at _drainQueueStep (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:138:12)\r\n    at _drainQueue (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:131:9)\r\n    at Async._drainQueues (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:147:5)\r\n    at Immediate.Async.drainQueues (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:17:14)\r\n    at runCallback (timers.js:810:20)\r\n    at tryOnImmediate (timers.js:768:5)\r\n    at processImmediate [as _immediateCallback] (timers.js:745:5)\r\n\r\nSimilar or dependent issues:\r\n\r\n- #5999\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6803/comments",
    "author": "marcosoftinova",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-08T10:11:42Z",
        "body": "Serverless message refers to _Maximum number of resources that you can declare in your AWS CloudFormation template_, which is hard set to 200 (it's not possible to lift it even after contacting support).\r\n\r\nI believe what you have lifted is _Maximum number of AWS CloudFormation stacks that you can create_, which indeed is possible to upgrade by contacting the support.\r\n"
      },
      {
        "user": "marcosoftinova",
        "created_at": "2019-10-08T12:28:26Z",
        "body": "@medikoo \r\n\r\nConfirmed. The limit they've increased is actually Maximum number of AWS CloudFormation stacks.\r\n\r\nThanks for your response. I am closing the issue as It's not an issue."
      }
    ]
  },
  {
    "number": 4402,
    "title": "Turn of SLS_DEBUG",
    "created_at": "2017-10-20T20:41:21Z",
    "closed_at": "2017-10-20T21:28:53Z",
    "labels": [
      "question",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4402",
    "body": "This is probably a super simple issue to be resolved, but I can't turn off SLS_DEBUG to save my life. I turned it on by submitting `export SLS_DEBUG=*` via terminal. I have tried to use `export SLS_DEBUG=false` but that doesn't prevent the logs from continuing. How do I resolve this? It has to be easier than the amount of time I have spent trying to figure this out.\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4402/comments",
    "author": "chasebleyl",
    "comments": [
      {
        "user": "RafalWilinski",
        "created_at": "2017-10-20T21:20:11Z",
        "body": "@chasebleyl I guess `unset` is the command that you're looking for \ud83d\ude04 \r\n\r\nTry this:\r\n```bash\r\nunset SLS_DEBUG\r\n```\r\n\r\nLet me know if it helps."
      },
      {
        "user": "chasebleyl",
        "created_at": "2017-10-20T21:28:53Z",
        "body": "That was it! Thank you."
      }
    ]
  },
  {
    "number": 4368,
    "title": "  Serverless Error ---------------------------------------        An error occurred while provisioning your stack: S3BucketServerlesschatbotdevuploadsyourinitialshere      - serverless-chatbot-dev-uploads-your-initials-here      already exists.",
    "created_at": "2017-10-09T17:02:48Z",
    "closed_at": "2017-10-09T19:32:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/4368",
    "body": "I've got this issue:\r\n  Serverless Error ---------------------------------------\r\n \r\n     An error occurred while provisioning your stack: S3BucketServerlesschatbotdevuploadsyourinitialshere\r\n     - serverless-chatbot-dev-uploads-your-initials-here\r\n     already exists.\r\n\r\nAny ideas? ",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4368/comments",
    "author": "rachelwu11",
    "comments": [
      {
        "user": "RafalWilinski",
        "created_at": "2017-10-09T18:47:48Z",
        "body": "Hi @rachelwu11 \r\n\r\nHave you tried renaming your stack and running `serverless deploy` again?"
      },
      {
        "user": "rachelwu11",
        "created_at": "2017-10-09T19:22:50Z",
        "body": "Hey @RafalWilinski , @DavidWells he helped me out. If the custom variable was called uploadBucket, then there was a conflict. so i've renamed it to be bucket, and it worked. Thanks a lot. :)\r\n      \r\n     UPLOAD_BUCKET: ${self:custom.bucket\r\n      bucket: ${self:service}-${self:provider.stage}-uploads-xw"
      },
      {
        "user": "RafalWilinski",
        "created_at": "2017-10-09T19:32:17Z",
        "body": "Glad to see this resolved, closing \u2764\ufe0f "
      }
    ]
  },
  {
    "number": 3323,
    "title": "Having an event only for prod stage",
    "created_at": "2017-03-03T06:42:51Z",
    "closed_at": "2017-03-16T06:58:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/3323",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nI'm would like to use a schedule event on a function but only on the production stage. I'm trying to do something like that : \r\n\r\n    functions:\r\n        myfunction:\r\n            handler: myfunction.handler\r\n                stage: production\r\n                    events:\r\n                         - schedule: cron(0 15 * * ? *)\r\n\r\nIs there a way to do that ? Thanks a lot \r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.5.1\r\n* ***Operating System***: OS X 10.12\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/3323/comments",
    "author": "chrishiste",
    "comments": [
      {
        "user": "andymac4182",
        "created_at": "2017-03-03T10:51:03Z",
        "body": "I believe you could use the variable system to load nothing into events for every stage other than production."
      },
      {
        "user": "Leomel",
        "created_at": "2017-03-03T10:52:35Z",
        "body": "\ud83d\udc4d"
      },
      {
        "user": "chrishiste",
        "created_at": "2017-03-07T23:45:56Z",
        "body": "Ok thanks a lot ! I'm gonna check it out"
      },
      {
        "user": "chrishiste",
        "created_at": "2017-03-13T00:23:54Z",
        "body": "Hello again, I've been trying to use the variable system but even though it seems really powerful I couldn't find a way to do what you said. It seems that there is no way to do an if statement like : \r\nif ${opt:stage} == 'prod', I could also do it from JS and references it like they show in the doc but then I don't know which stage I'm deploying too. Did you already do something similar ? Sorry, I'm fairly new to Serverless "
      },
      {
        "user": "buggy",
        "created_at": "2017-03-13T08:02:20Z",
        "body": "@chrishiste I don't have time to test it at the moment but it will look something like:\r\n\r\n```yaml\r\ncustom:\r\n  stage: \"${opt:stage, self:provider.stage}\"\r\n  prod:\r\n    schedule:\r\n       - schedule: cron(0 15 * * ? *)\r\n  dev:\r\n    schedule:\r\n\r\nfunctions:\r\n    myfunction:\r\n        handler: myfunction.handler\r\n            stage: production\r\n                events: ${self:custom.${self:custom.stage}.schedule}        \r\n```\r\n\r\nThat way it loads `custom.prod.schedule` when you're on deploying to production and `custom.dev.schedule` when you're deploying to development."
      },
      {
        "user": "chrishiste",
        "created_at": "2017-03-16T06:58:06Z",
        "body": "THANKS A LOT! I didn't really understood the variable system until now\r\n\r\nIf anyone is looking to do something similar that's how I did it : \r\n\r\n```yaml\r\ncustom:\r\n  stage: \"${opt:stage, self:provider.stage}\"\r\n    prod:\r\n      schedule: cron(0 15 * * ? *)\r\n   dev:\r\n      schedule:\r\n\r\nfunctions:\r\n   myFunction:\r\n     handler: myFunction.handler\r\n     events:\r\n       - schedule: ${self:custom.${self:custom.stage}.schedule}\r\n```\r\n\r\nJust make sure you pass \"--stage\" and not \"-s\"\r\n"
      },
      {
        "user": "pmuens",
        "created_at": "2017-03-16T07:22:17Z",
        "body": "Nice! Thanks for helping and thanks for posting the solution so that others can use it as well!"
      },
      {
        "user": "ruipaulo",
        "created_at": "2018-12-04T11:48:04Z",
        "body": "Maybe this could be added to the main schedule documentation, I think it is a quite common use case to only have the schedular running for the production lambda."
      },
      {
        "user": "oligirling",
        "created_at": "2019-06-10T18:52:54Z",
        "body": "Could also use `enabled` to turn them on or off for different stages\r\n\r\n```\r\nfunctions:\r\n  fetch:\r\n    handler: handler.fetch\r\n    events:\r\n    - schedule:\r\n        rate: rate(1 minute)\r\n        enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}\r\n\r\ncustom:\r\n  scheduleEnabled:\r\n    prod: true\r\n    dev: false\r\n    local: false\r\n```"
      },
      {
        "user": "juanilarregui",
        "created_at": "2019-07-15T04:54:06Z",
        "body": "> Could also use `enabled` to turn them on or off for different stages\r\n> \r\n> ```\r\n> functions:\r\n>   fetch:\r\n>     handler: handler.fetch\r\n>     events:\r\n>     - schedule:\r\n>         rate: rate(1 minute)\r\n>         enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}\r\n> \r\n> custom:\r\n>   scheduleEnabled:\r\n>     prod: true\r\n>     dev: false\r\n>     local: false\r\n> ```\r\n\r\nIs this confirmed to work, with booleans? Because it seems that booleans are not allowed, giving `Trying to populate non string value into a string...` error."
      },
      {
        "user": "arliber",
        "created_at": "2019-11-24T08:41:17Z",
        "body": "@juanilarregui I have a similar issue when I write `enabled: false` it does deploy but I can see that the CloudWatch event is still enabled in the AWS Console. \r\n\r\nHave you found a way to make it work?"
      },
      {
        "user": "oligirling",
        "created_at": "2019-11-26T10:33:36Z",
        "body": "I dont seem to get any issues with the code I posted above. Could you post a copy of what your doing?"
      },
      {
        "user": "steadweb",
        "created_at": "2020-04-15T11:01:53Z",
        "body": "> Could also use `enabled` to turn them on or off for different stages\r\n> \r\n> ```\r\n> functions:\r\n>   fetch:\r\n>     handler: handler.fetch\r\n>     events:\r\n>     - schedule:\r\n>         rate: rate(1 minute)\r\n>         enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}\r\n> \r\n> custom:\r\n>   scheduleEnabled:\r\n>     prod: true\r\n>     dev: false\r\n>     local: false\r\n> ```\r\n\r\nThis doesn't disable the schedule, it deploys though."
      },
      {
        "user": "juancarlosortizr",
        "created_at": "2022-04-11T18:48:33Z",
        "body": "deleted"
      }
    ]
  },
  {
    "number": 8457,
    "title": "Refactor: Clear \"that = this\" pattern from codebase",
    "created_at": "2020-10-30T11:31:13Z",
    "closed_at": "2020-11-02T10:29:40Z",
    "labels": [
      "good first issue",
      "refactor",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/8457",
    "body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Acknowledge ALL below remarks -->\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Request may not be processed if it doesn't meet outlined criteria -->\r\n\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Search existing issues to avoid creating duplicates  -->\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Plugin enhancements should be proposed at plugin repository, not here -->\r\n\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Answer ALL required questions below -->\r\n\r\n<!--\r\nQ1: Describe the problem (use case) that needs to be solved\r\n-->\r\n\r\n### Use case description\r\n\r\n`that = this` Resembles questionable and heavily outdated pattern.\r\n\r\nIt was used before we had arrow functions, to maintain access to `this` across nested function references, with arrow functions `this` is shared and cases can be referenced directly\r\n\r\n<!--\r\nQ2: Propose solution (e.g. provide configuration example)\r\n\r\nNote: This is optional, remove this section if you do not wish to propose anything at this point\r\n-->\r\n\r\n### Proposed solution\r\n\r\nSimply remove `const that = this` and replace all `that` references with `this` (mind eventual non-arrow function expressions which rely on top level `that` if there are any upgrade them to arrow functions)\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/8457/comments",
    "author": "medikoo",
    "comments": [
      {
        "user": "MatthewBerk",
        "created_at": "2020-10-30T22:24:55Z",
        "body": "Hello, I am new to contributing. I am not well versed in JavaScript, though I would like to help with this issue since it seems to be a simple find and replace. Could you guide me through this issue?"
      },
      {
        "user": "medikoo",
        "created_at": "2020-11-02T13:21:57Z",
        "body": "@MatthewBerk it's simply about searching for `that = this` and clearing this out.\r\n\r\nAnyway it was already perfectly addressed by @telenord you may check the PR"
      }
    ]
  },
  {
    "number": 5942,
    "title": "Custom authorizer for websockets connection not passing claims to next function and calling $disconnect rather than $connect",
    "created_at": "2019-03-20T19:23:17Z",
    "closed_at": "2019-05-21T23:12:18Z",
    "labels": [
      "enhancement",
      "help wanted",
      "cat/lambda"
    ],
    "url": "https://github.com/serverless/serverless/issues/5942",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nI have a custom authoriser function in front of a websocket connection function, which is successful but does not pass or trigger the actual connection function it sits in front of.\r\n\r\nI have tried to return the value, resolve it as a promise or, what I'd expect to work, pass it as a value in the callback.\r\n\r\n**serverless.yml**\r\n\r\n```\r\ncustomAuthoriser:\r\n  handler: handler.customAuthoriser\r\n  cors: true\r\nconnectionHandler:\r\n  handler: handler.connectionHandler\r\n  events:\r\n    - websocket:\r\n        route: $connect\r\n        authorizer:\r\n          name: customAuthoriser\r\n          identitySource:\r\n            - 'route.request.querystring.Authorizer'\r\n    - websocket:\r\n        route: $disconnect\r\n```\r\n\r\n**connectionHandler.js**\r\n\r\n```\r\nexport async function customAuthoriser(event, context, callback) {\r\n  console.log('enter customAuthoriser');\r\n  let someErr;\r\n  let claims;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n      // do some stuff to get claims\r\n\r\n      if (someErr) {\r\n          reject(someErr);\r\n      }\r\n\r\n      // doesn't work\r\n      callback(null, claims);\r\n\r\n      // doesn't work\r\n      resolve(claims);\r\n\r\n      // also doesn't work\r\n      return claims;\r\n  });\r\n}\r\n```\r\n\r\n**connectionHandler.js**\r\n\r\n```\r\n// this never gets hit\r\nexport async function connectionHandler(event, context, callback) {\r\n  console.log('enter connectionHandler');\r\n\r\n  // if it ever gets called, I'd expect this to have a value\r\n  console.log(event.requestContext.authorizer.claims.sub);\r\n}\r\n```\r\n\r\n**client.ts**\r\n\r\n```\r\nimport {webSocket, WebSocketSubjectConfig} from 'rxjs/webSocket';\r\n\r\nprivate subject: Subject;\r\n\r\nprivate setupWebsockets(token: string) {\r\n  const subjectConfig: WebSocketSubjectConfig<any> = {\r\n    url: `wss://abcd1234.execute-api.ap-southeast-1.amazonaws.com/pre?Authorizer=${token}`\r\n  };\r\n  this.subject = webSocket(subjectConfig);\r\n\r\n  this.subject.subscribe(\r\n    (msg) => console.log('message received: ' + msg),\r\n    (err) => console.error(err),\r\n    () => console.log('complete')\r\n  );\r\n}\r\n```\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.39.1\r\n* ***Operating System***: N/A\r\n* ***Stack Trace***: N/A\r\n* ***Provider Error messages***: N/A",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/5942/comments",
    "author": "mrowles",
    "comments": [
      {
        "user": "eahefnawy",
        "created_at": "2019-03-25T12:00:38Z",
        "body": "thanks for reporting @mrowles ... I'm guessing you're using Cognito? "
      },
      {
        "user": "mrowles",
        "created_at": "2019-03-25T18:57:59Z",
        "body": "@eahefnawy Yep! Which isn't/wasn't supported for Websockets out of the box as of 1.39.1. So I rolled my own custom Cognito one. However, not sure if it matters what the auth is, looks like this might be a problem beyond that."
      },
      {
        "user": "mrowles",
        "created_at": "2019-04-02T07:00:32Z",
        "body": "I've updated, this is actually triggering (as of `serverless@1.40.0`) but still no claims passed over.\r\n\r\nI've just realised that it seems as though my client code is actually triggering the `$disconnect` routeKey for some weird reason...I don't even know how, because you're not allowed to specify a customAuthoriser on the `$disconnect` path (which I haven't):\r\n\r\n**Lambda Request Context**\r\n```\r\nrequestContext: { routeKey: '$disconnect' }\r\n```"
      },
      {
        "user": "mrowles",
        "created_at": "2019-04-03T19:02:41Z",
        "body": "I have even tried separating the `$connect` & `$disconnect` handlers and it keeps sending it to the $disconnect:\r\n\r\n```\r\n  connectHandler:\r\n    handler: handler.connectHandler\r\n    events:\r\n      - websocket:\r\n          route: $connect\r\n          authorizer:\r\n            name: customAuthoriser\r\n            identitySource:\r\n              - 'route.request.querystring.Authorizer'\r\n  disconnectHandler:\r\n    handler: handler.disconnectHandler\r\n    events:\r\n      - websocket:\r\n          route: $disconnect\r\n```\r\n\r\nI have even tried a different client websocket library to no avail:\r\n\r\n```\r\nimport {ClientOptions, SubscriptionClient} from 'subscriptions-transport-ws';\r\nimport {WebSocketLink} from 'apollo-link-ws';\r\n\r\nprivate setupWebsockets(token: string) {\r\n    const url = `wss://abcd1234.execute-api.ap-southeast-2.amazonaws.com/pre?Authorizer=${token}`;\r\n    const subscriptionClientOptions: ClientOptions = {\r\n        reconnect: true\r\n    };\r\n\r\n    const subscriptionClient = new SubscriptionClient(url, subscriptionClientOptions);\r\n\r\n    const link = new WebSocketLink(subscriptionClient);\r\n}\r\n```\r\n\r\nI'm either doing something wrong, or this is a genuine bug."
      },
      {
        "user": "Denjul",
        "created_at": "2019-04-23T07:36:09Z",
        "body": "> I have even tried separating the `$connect` & `$disconnect` handlers and it keeps sending it to the $disconnect:\r\n\r\n\r\nWe have the same result as you, for some reason a Custom Authoriser trigger Disconnect rather then Connect. We also tried to split connect and disconnect to separate handlers but to no avail, it still trigger disconnect.\r\n\r\n**UPDATE:**\r\nIt was our fault. When i rewrote our custom authorizer to async await rather than promise().then() it started to work. The fault was probably something like the lambda terminated before the callback(null, policy) had finnished."
      },
      {
        "user": "mrowles",
        "created_at": "2019-05-18T06:28:00Z",
        "body": "Can this get some love please?"
      },
      {
        "user": "mrowles",
        "created_at": "2019-05-19T08:02:55Z",
        "body": "@Denjul I have tried everything, including switching to async await - still bloody called disconnect \ud83d\ude05. Are you just doing a `callback(null, claims)` or something else? I can confirm that the lambda is running through it's entirety correctly (with a return statement), but just passing onto `$disconnect`"
      },
      {
        "user": "Denjul",
        "created_at": "2019-05-21T12:10:27Z",
        "body": "@mrowles We do:\r\n```\r\n      callback(null,\r\n        generateAllow(\r\n          authClaims.sub,\r\n          methodArn,\r\n          {\r\n            organizationId,\r\n            profileId: authClaims.sub,\r\n          }\r\n        ));\r\n```\r\nAnd methodArn we get from `  const {\r\n    methodArn\r\n  } = event;`  (event from lambda)\r\n\r\nYou can skip the `          {\r\n            organizationId,\r\n            profileId: authClaims.sub,\r\n          }` in generateAllow(), It's data we want when that socket connection trigger other lambdas.\r\n\r\n```\r\nconst generateAllow = (principalId, resource, claims) => generatePolicy(\r\n  principalId,\r\n  'Allow',\r\n  resource,\r\n  claims\r\n);\r\n\r\nconst generatePolicy = (principalId, effect, resource, claims) => {\r\n  const authResponse = {};\r\n  authResponse.principalId = principalId;\r\n  if (effect && resource) {\r\n    const policyDocument = {};\r\n    policyDocument.Version = '2012-10-17'; // default version\r\n    policyDocument.Statement = [];\r\n    const statementOne = {};\r\n    statementOne.Action = 'execute-api:Invoke'; // default action\r\n    statementOne.Effect = effect;\r\n    statementOne.Resource = resource;\r\n    policyDocument.Statement[0] = statementOne;\r\n    authResponse.policyDocument = policyDocument;\r\n  }\r\n  authResponse.context = claims;\r\n  return authResponse;\r\n};\r\n\r\n\r\n```\r\n\r\nHope it solves your problem"
      },
      {
        "user": "mrowles",
        "created_at": "2019-05-21T23:12:23Z",
        "body": "This was awesome @Denjul! I was missing the policy effect being passed back. Thanks for the assistance :)"
      }
    ]
  },
  {
    "number": 5664,
    "title": "Bug: Rollback fails due to timestamp parsing error",
    "created_at": "2019-01-08T16:09:45Z",
    "closed_at": "2019-01-28T11:30:57Z",
    "labels": [
      "bug",
      "help wanted",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/5664",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\n* What went wrong?\r\nReceiving _Range Error: Invalid time value_ when trying to rollback (with correct timestamp).\r\nE.g. _sls rollback -t 1546961025152_\r\n\r\n* What did you expect should have happened?\r\nRollback should have been successful\r\nLooks like since this.options.timestamp is a string, the wrong constructor of Date is called, and it's expecting a date string.\r\nI was able to make this work by changing line 68 of _serverless\\lib\\plugins\\aws\\rollback\\index.js_ to\r\n\r\n      const date = new Date(Number(this.options.timestamp));\r\n\r\n* What was the config you used?\r\nAny, including the aws-java-gradle template\r\n\r\n* What stacktrace or error message from your provider did you see?\r\n  \r\nSimilar or dependent issues:\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.35.1\r\n* ***Operating System***: Windows 10 Enterprise (10.0.17134)\r\n* ***Stack Trace***:\r\n\r\n      RangeError: Invalid time value\r\n          at Date.toISOString (<anonymous>)\r\n          at provider.request.then (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\plugins\\aws\\rollback\\index.js:69:65)\r\n      From previous event:\r\n          at AwsRollback.setStackToUpdate (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\plugins\\aws\\rollback\\index.js:59:8)\r\n      From previous event:\r\n          at Object.rollback:rollback [as hook] (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\plugins\\aws\\rollback\\index.js:40:12)\r\n          at BbPromise.reduce (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\classes\\PluginManager.js:391:55)\r\n      From previous event:\r\n          at PluginManager.invoke (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\classes\\PluginManager.js:391:22)\r\n          at PluginManager.run (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\classes\\PluginManager.js:422:17)\r\n          at variables.populateService.then.then (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\Serverless.js:157:33)\r\n          at runCallback (timers.js:705:18)\r\n          at tryOnImmediate (timers.js:676:5)\r\n          at processImmediate (timers.js:658:5)\r\n          at process.topLevelDomainCallback (domain.js:120:23)\r\n      From previous event:\r\n          at Serverless.run (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\Serverless.js:144:8)\r\n          at serverless.init.then (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\bin\\serverless:44:28)\r\n\r\n* ***Provider Error messages***:\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/5664/comments",
    "author": "ldani7492",
    "comments": [
      {
        "user": "luanmuniz",
        "created_at": "2019-01-16T12:55:52Z",
        "body": "@ldani7492 Can you check if the PR i've just created fix your issue? "
      },
      {
        "user": "ldani7492",
        "created_at": "2019-01-16T13:51:06Z",
        "body": "@luanmuniz it does, thank you"
      }
    ]
  },
  {
    "number": 4341,
    "title": "Stack with id XX does not exist",
    "created_at": "2017-10-04T03:34:48Z",
    "closed_at": "2017-10-11T09:36:38Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4341",
    "body": "# This is a Bug Report \r\n\r\n## Description\r\nI had an issue with my AWS serverless stack and I ended up deleting the CloudFormation stack. When I went to redeploy, I assumed it would just recreate the stack if it didn't exist, but it died. I then removed the project from the serverless platform too.\r\n\r\nI cannot deploy it now at all, even if I rename it, use a different AWS profile, use a different region or a different stage.\r\n\r\n\r\n## Additional Data\r\n\r\n> Serverless Error ---------------------------------------\r\n>  \r\n>   Stack with id job-advertiser-dev does not exist\r\n>  \r\n>   Get Support --------------------------------------------\r\n>      Docs:          docs.serverless.com\r\n>      Bugs:          github.com/serverless/serverless/issues\r\n>      Forums:        forum.serverless.com\r\n>      Chat:          gitter.im/serverless/serverless\r\n>  \r\n>   Your Environment Information -----------------------------\r\n>      OS:                     darwin\r\n>      Node Version:           8.6.0\r\n>      Serverless Version:     1.23.0",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4341/comments",
    "author": "jswift",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-10-04T09:23:04Z",
        "body": "Thank you for reporting @jswift \ud83d\udc4d \r\n\r\n>I ended up deleting the CloudFormation stack. \r\n\r\nDid you delete the stack directly on AWS management console?\r\nIf so, You can't control the service via `serverless deploy` since the S3 bucket for the deployment has been left(Your service was broken). You needed to delete the service via `serverless remove`.\r\n\r\nYou might want to look for the deployment bucket,  which name would include `-serverlessdeploymentbucket-`. You could deploy again if you remove it once manually.\r\n\r\nP.S\r\nOne of the concepts of Serverless Framework is that it makes it possible to control any serverless services via only command line \ud83d\udc4d "
      },
      {
        "user": "jswift",
        "created_at": "2017-10-11T09:36:38Z",
        "body": "Thanks for that, yeh I broke it. I removed the stack via the console, but with the aws tools."
      },
      {
        "user": "horike37",
        "created_at": "2017-10-11T09:45:32Z",
        "body": "@jswift \r\nGlad to hear that your problem has been resolved \ud83c\udf89 "
      }
    ]
  },
  {
    "number": 4244,
    "title": "Unresolved config variables when passed to plugin",
    "created_at": "2017-09-11T14:28:43Z",
    "closed_at": "2017-09-11T16:12:00Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4244",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\nVariables in the `serverless.yml` are not resolved when passed in to my custom plugin.\r\n\r\n### What went wrong?\r\n```yaml\r\nservice: test-service\r\n\r\nplugins:\r\n  - myCustomPlugin\r\n\r\ncustom:\r\n  myPluginConfig:\r\n    name: ${opt:stage}-${self:service}\r\n```\r\n\r\nIn my plugin class constructor, `serverless.service.custom.myPluginConfig.name` is an actual string that holds `${opt:stage}-${self:service}`\r\n\r\n### What did you expect should have happened?\r\nThe config variables to be resolved.\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.21.1",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4244/comments",
    "author": "b04zdotcom",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-09-11T14:46:20Z",
        "body": "Thank you for opening this issue @boazdejong !\r\nCould you share your plugins source code or tell us the place which is stored so that taking a look into it?"
      },
      {
        "user": "b04zdotcom",
        "created_at": "2017-09-11T14:57:51Z",
        "body": "@horike37 Sorry, but that's not possible. It is not part of an open source project.\r\n\r\nI don't think the issue is related to the plugin though. It's just a class that receives unresolved variables as part of the `serverless` parameter."
      },
      {
        "user": "HyperBrain",
        "created_at": "2017-09-11T15:01:44Z",
        "body": "@boazdejong I think the reason is, that you fetch them in your plugin's constructor. The constructor should only setup the hooks and commands of the plugin, but not access this.serverless.service at that time.\r\n\r\nYou would do the validation and evaluation of you plugin's configuration at a `validate` method, that you call from the very first location within your hooks. That's the only location, where it is guaranteed that the service has been setup correctly.\r\n\r\nPlease also check other plugins, for how they work or some of the internal plugins."
      },
      {
        "user": "b04zdotcom",
        "created_at": "2017-09-11T16:11:44Z",
        "body": "@HyperBrain That was indeed what caused the problem, thank you for your help!"
      },
      {
        "user": "HyperBrain",
        "created_at": "2017-09-11T16:15:28Z",
        "body": "@boazdejong You're welcome \ud83d\ude03 "
      },
      {
        "user": "pmuens",
        "created_at": "2017-09-12T06:12:22Z",
        "body": "> @HyperBrain That was indeed what caused the problem, thank you for your help!\r\n\r\nGreat @boazdejong \ud83d\udc4d. Thanks for confirming!\r\n\r\nThanks for helping out @HyperBrain and @horike37 \ud83d\udcaf"
      }
    ]
  },
  {
    "number": 4203,
    "title": "S3 bucket event does not create bucket as documented",
    "created_at": "2017-09-05T01:44:22Z",
    "closed_at": "2017-09-05T04:02:08Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4203",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nFor bug reports:\r\n* What went wrong?\r\nCreating an S3 event didn't create the S3 bucket as documented.  The lambda is there but no S3 bucket at all.\r\n\r\n* What did you expect should have happened?\r\nThe S3 bucket would be created as documented.\r\n\r\n* What was the config you used?\r\n```\r\nservice: my-service\r\nprovider:\r\n  name: aws\r\n  runtime: java8\r\n  profile: myprofile\r\n  region: us-west-2\r\n  stage: dev\r\npackage:\r\n  artifact: build/distributions/my-service-1.0-SNAPSHOT.zip\r\nfunctions:\r\n  myService:\r\n    handler: codes.rik.myservice.MyServiceHandler\r\n    events:\r\n          - s3:\r\n            bucket: photos\r\n```\r\n\r\nSimilar or dependent issues:\r\n* #3851\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.21.0\r\n* ***Operating System***: OS X\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4203/comments",
    "author": "rikbrown",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-09-05T02:59:48Z",
        "body": "Thank you for opening up this issue @rikbrown  \ud83d\ude0a\r\n\r\nSeems that the indent under `- s3` go wrong. that need more space.\r\nCould you fix the serverless.yml syntax as follow and try again?\r\n\r\n```yaml\r\n- s3:\r\n    bucket: photos\r\n```"
      },
      {
        "user": "rikbrown",
        "created_at": "2017-09-05T04:02:08Z",
        "body": "You're right: this was YAML indentation related.  Sigh, sorry.\r\nI'll close this report, but if there's any future change you'd consider to at least be more defensive over this (\"hey, you're an idiot like Rik who didn't indent properly, this isn't gonna work\") I'd +1 it.\r\n\r\nCheers."
      },
      {
        "user": "pmuens",
        "created_at": "2017-09-05T06:24:27Z",
        "body": "Thanks for opening @rikbrown and thanks for helping @horike37 \ud83d\udc4d\r\n\r\nGlad to hear that the issue was resolved. Yes, this indentation is a little bit tricky. It's even worse when you copy and paste code snippets from tutorials and stuff. Ran into this a couple of times \ud83d\ude2c...\r\n\r\nHelping here (showing better error messages) is on our radar!"
      }
    ]
  }
]