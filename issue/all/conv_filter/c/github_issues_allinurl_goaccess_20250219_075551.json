[
  {
    "number": 2597,
    "title": "Response time format (seconds vs. milliseconds)",
    "created_at": "2023-12-20T09:00:20Z",
    "closed_at": "2023-12-21T08:03:23Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2597",
    "body": "Thanks a bunch for sharing GoAccess. It a great tool which just works! I have a question about response time analysis that I hope someone can help me out solving. \r\n\r\nI have a custom log file with the following format:\r\n\r\n`2023-12-20T08:17:21Z GET 200 260.403 ms 2048 kB 15.36% /list/default`\r\n\r\nI have tried to parse it using the following command:\r\n\r\n`goaccess --datetime-format='%Y-%m-%dT%H:%M:%SZ' --log-format='%x %m %s %T %h %^ %^ %^%r' --no-ip-validation`.\r\n\r\nI end up with something like this:\r\n\r\n```\r\n Hits     h% Vis.      v% Avg. T.S. Cum. T.S. Max. T.S. Mtd     Proto    Data\r\n ---- ------ ---- ------- --------- --------- --------- ------- -------- ----\r\n   17 45.95%    1 100.00%   4.46 mn   1.26 hr   7.46 mn GET     ---      % /list/default\r\n```\r\n\r\nAs I understand the output Average T.S. (time spent?) is reported in minutes but that does not make sense combined with the response time reported in milliseconds. \r\n\r\nI know that `%T` corresponds to \"The time taken to serve the request, in seconds with milliseconds resolution\" but if I switch to `%L` (The time taken to serve the request, in milliseconds as a decimal number) I get `0.00 us` in all time columns. I also tried with. `%n` for good measure but that also yielded `0.00 us`.\r\n\r\nI wonder if it has to do with `.` or `,` is used as decimal separator? but I could not spot any way to configure this in the documentation.\r\n\r\nNotes: Since the log does not have any host name information I (mis)use the `ms` element as the hostname combined with `--no-ip-validation`.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2597/comments",
    "author": "kasperg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-12-21T01:43:23Z",
        "body": "Great question! It appears that you can accomplish this by utilizing `%L` when splitting the `.` to capture the whole number.\r\n\r\n    goaccess access.log --datetime-format='%Y-%m-%dT%H:%M:%SZ' --log-format='%x %m %s %L.%^ %h %b %^ %^ %U' --no-ip-validation\r\n\r\nLet me know if that helps"
      },
      {
        "user": "kasperg",
        "created_at": "2023-12-21T08:03:23Z",
        "body": "That works like a charm! Really appreciate the help."
      }
    ]
  },
  {
    "number": 2501,
    "title": "Gandi.net - simplehosting - parsing access.log",
    "created_at": "2023-04-13T10:33:32Z",
    "closed_at": "2023-04-14T08:00:58Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2501",
    "body": "Hello, I'm using the simplehosting solution from gandi.net.\r\nI'm in trouble because they use a custom template for access.log : \r\n```LogFormat \"%V %a %l %u %t (%T s) \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" vhost_paas```\r\neg : \r\n`domain.fr 43.130.00.000 - - [12/Apr/2023:15:07:52 +0000] (0 s) \"GET /files/ HTTP/1.1\" 404 196 \"binance.com\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36\"`\r\n\r\nSo I tried\r\n`goaccess /Volumes/XX/access.log --log-format=\"%V %a %l %u %t (%T s) \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"\" vhost_paas --datetime-format=%d/%b/%Y:%H:%M:%S %z`\r\nthat give me `Token '[10/Apr/2023:06:59:08' doesn't match specifier '%t` I tried many options with --date and --time from previous issues without success.\r\n\r\nI'm on a mac, using french locale and installed goaccess with brew.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2501/comments",
    "author": "RolandTi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-04-13T22:40:40Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%v %h %^[%d:%t %^] (%T %^) \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nYou may need to use:\r\n\r\n    LC_TIME=\"en_US.UTF-8\" goaccess log --log-format='%v %h %^[%d:%t %^] (%T %^) \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "RolandTi",
        "created_at": "2023-04-14T08:00:58Z",
        "body": "Hello allinurl ! You're right with the LC_TIME, thank you very much !"
      },
      {
        "user": "allinurl",
        "created_at": "2023-04-18T00:17:40Z",
        "body": "@RolandTi Glad that did the job! Let me know if you have any other questions"
      }
    ]
  },
  {
    "number": 2463,
    "title": "No input data was provided nor there's data to restore when running in a python srcipt",
    "created_at": "2023-02-11T07:24:27Z",
    "closed_at": "2023-02-11T09:15:54Z",
    "labels": [
      "question",
      "log-processing",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2463",
    "body": "When I run `cat logs/access.log | /usr/bin/goaccess --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html` from shell, it works. \r\n\r\nBut when I run from python , it fails with error: `GoAccess - version 1.7 - Jan 1 2023 03:16:59 Config file: /etc/goaccess/goaccess.conf Fatal error has occurred Error occurred at: src/goaccess.c - initializer - 1471 No input data was provided nor there's data to restore.`\r\n```py\r\n#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ncmd = '''cat logs/access.log | /usr/bin/goaccess --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html\r\n'''\r\ndef runcmd(command):\r\n    ret = subprocess.run(command,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE,encoding=\"utf-8\",timeout=10)\r\n    if ret.returncode == 0:\r\n        return ret.stdout\r\n    return ret.stderr\r\n\r\nprint(runcmd(cmd))\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2463/comments",
    "author": "xiangnanscu",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-02-11T16:00:41Z",
        "body": "Did you find the issue? Sounds like you passing `-` to goaccess should solve your issue.\r\n\r\n    /usr/bin/goaccess - --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html"
      },
      {
        "user": "xiangnanscu",
        "created_at": "2023-02-12T09:25:20Z",
        "body": "yes it is. Thanks"
      }
    ]
  },
  {
    "number": 2415,
    "title": "Token '09/Jan/2001' doesn't match specifier '%d'",
    "created_at": "2022-11-10T16:34:36Z",
    "closed_at": "2022-11-10T16:44:28Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2415",
    "body": "Hi,\r\n\r\nDate format is `%d/%b/%Y` and still getting error `Token '09/Jan/2001' doesn't match specifier '%d'`\r\n\r\nAny suggestions what should be the right full log format with dates and times? \ud83e\udd14 \r\n\r\nI'm running app with defaults `goaccess access.log` and then choosing `NCSA Combined Log Format` with defaults:\r\n- `log format` - `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n- `date format` - `%d/%b/%Y`\r\n- `time format` - `%H:%M:%S`\r\n\r\nSample log lines:\r\n\r\n```\r\n10.0.0.0 - - [09/Jan/2001:00:07:51 +0000] \"GET /endpoint HTTP/1.1\" 418 0 \"-\" \"User-agent\"\r\n10.0.0.0 - - [09/Jan/2001:00:08:02 +0000] \"GET /endpoint HTTP/1.1\" 418 0 \"-\" \"User-agent\"\r\n```\r\n\r\nLooks like Combined Log Format, but the `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"` doesn't work \ud83d\ude1e \r\n\r\nAny suggestions? \ud83d\ude4f ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2415/comments",
    "author": "flashlabs",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-11-10T16:40:13Z",
        "body": "Usually this is due to conflicts between your log and your locale. i.e., log has English dates (e.g., Feb/Apr/Oct) while machine has a different locale. Please try running goaccess as:\r\n\r\n    LANG=\"en_US.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'\r\n\r\nOr\r\n\r\n    LC_TIME=\"en_US.UTF-8\" goaccess access.log --log-format=COMBINED"
      },
      {
        "user": "flashlabs",
        "created_at": "2022-11-10T16:44:28Z",
        "body": "Ofc you are right and both of your solutions work! Thanks!"
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-10T16:45:57Z",
        "body": "Glad that solved the issue :) Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 2378,
    "title": "Parse Log with hostname instead of ipv4/ipv6",
    "created_at": "2022-09-08T06:46:40Z",
    "closed_at": "2022-09-22T00:17:44Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2378",
    "body": "I have a log-file where the ip is already resolved and instead of ip has a hostname as a field.\r\n\r\nIt seems this field is not understood by goaccess. As I understand the hostname field is manadatory, but is it really a requirement to hold an IP? \r\n\r\n`Token 'some.perfect-valid-hostname.example.com' doesn't match specifier '%h'`\r\n\r\nDoes someone have an advice?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2378/comments",
    "author": "pniederlag",
    "comments": [
      {
        "user": "pniederlag",
        "created_at": "2022-09-08T06:50:24Z",
        "body": "digging into the source I spotted `--no-ip-validation ` which seems to do the trick"
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-09T22:53:51Z",
        "body": "That's right. `--no-ip-validation` will do the job, still you will need to specify `%h` where the ip has been resolved."
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-22T00:17:44Z",
        "body": "Closing this. Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 2368,
    "title": "Log Format for Traefik and Docker",
    "created_at": "2022-08-22T04:03:45Z",
    "closed_at": "2022-08-25T18:29:22Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2368",
    "body": "Could I get some assistance with finding the right format for the following setup? I was unable to locate a similar one from previous posts.\r\n\r\n```\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"accept tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"accept tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"close tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-26T10:01:43-04:00\" level=error msg=\"close tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"accept tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"accept tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"close tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"close tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2368/comments",
    "author": "the-jchusid",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-23T13:29:00Z",
        "body": "Please try the following (>= v1.6.2):\r\n\r\n    goaccess log --log-format='%^=\"%x\" %^=%e %^[%h]:%^: %U\" %^=%v' --datetime-format='%Y-%m-%dT%H:%M:%S%z' --hour-spec=min --date-spec=min --http-protocol=no --http-method=no --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES --ignore-panel=REQUESTS --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=STATUS_CODES"
      },
      {
        "user": "the-jchusid",
        "created_at": "2022-08-25T18:29:15Z",
        "body": "Perfect, thanks I was able to get it going with that!"
      }
    ]
  },
  {
    "number": 2360,
    "title": "debug-file flag",
    "created_at": "2022-08-01T15:52:49Z",
    "closed_at": "2022-08-01T19:24:20Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2360",
    "body": "Hi,\r\n\r\nI'm running something similar to below, not sure if I'm doing something wrong here but the debug file gets created as \"--debug-file=goaccess.debug\" rather than \"goaccess.debug\". The invalid requests file gets created correctly.\r\n\r\ngoaccess -l --debug-file=goaccess.debug --invalid-requests=goaccess.invalid --no-global-config --ping-interval=15 --config-file=goaccess.conf\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2360/comments",
    "author": "xavier-hernandez",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-01T17:33:58Z",
        "body": "Looks like you are passing `-l` + `--debug-file` which are the same. I'd do one or the other one but not both:\r\n\r\n    goaccess --debug-file=goaccess.debug --invalid-requests=goaccess.invalid --no-global-config --ping-interval=15 --config-file=goaccess.conf"
      },
      {
        "user": "xavier-hernandez",
        "created_at": "2022-08-01T18:41:35Z",
        "body": "@allinurl thanks that worked. I guess I misunderstood the man page :/\r\n\r\nBy the way, I saw this as well,--ping-interval\u2276secs> . It should be =< . Do you want me to open a separate issue for that?\r\n\r\nThanks."
      },
      {
        "user": "allinurl",
        "created_at": "2022-08-01T19:21:51Z",
        "body": "Thanks for letting me know. It should be fixed now :)"
      }
    ]
  },
  {
    "number": 2326,
    "title": "Please help with my Apache Log format (including request times)",
    "created_at": "2022-05-23T08:48:26Z",
    "closed_at": "2022-05-25T00:22:14Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2326",
    "body": "Hello,\r\n\r\nMy Apache LogFormat was the following:\r\n\r\n    LogFormat \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\"  %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" varnish\r\n    LogFormat \"%{X-Forwarded-For}i %h %l %u %t \\\"%r\\\"  %s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-forwarded\r\n    CustomLog /var/log/httpd/access.log varnish\r\n    ErrorLog /var/log/httpd/error.log \r\n\r\nWith this, I am able to generate report with goaccess without problems, but I am not fetching the response times so the report is being generated without the AVG. TS / CUM. T.S / MAX. T.S that i need.\r\n\r\nI have tried adding the '%D' param in the LogFormat like this:\r\n\r\n    LogFormat \"%{X-Forwarded-For}i %l %u %t %D \\\"%r\\\"  %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" varnish\r\n    LogFormat \"%{X-Forwarded-For}i %h %l %u %t %D \\\"%r\\\"  %s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-forwarded\r\n    CustomLog /var/log/httpd/access.log varnish\r\n    ErrorLog /var/log/httpd/error.log \r\n\r\nIn the /var/log/httpd/access.log I can see this info is now being received, for example:\r\n\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **18598** \"GET /xxxxx/animations.min.css HTTP/1.1\"  200 18468 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **22010** \"GET /xxxxx/appart-custom.js HTTP/1.1\"  200 432 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **13073** \"GET /xxxxxdist/scripts/main.js HTTP/1.1\"  200 55574 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n\r\nI am not able to generate a valid Goaccess report that includes the (AVG. TS / CUM. T.S / MAX. T.S) - i understand now this values is being fetched with the '%D'.\r\n\r\nPlease anybody can help me with the log-format parsing for my case? It will be high appreciated.\r\n\r\nThanks in advance for help.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2326/comments",
    "author": "amilhub",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-05-23T18:24:59Z",
        "body": "Please try the following, it should do the job:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] %D \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n"
      },
      {
        "user": "amilhub",
        "created_at": "2022-05-24T06:44:26Z",
        "body": "Hello,\r\n\r\n==24275== Token '' doesn't match specifier '%s'\r\n==24275== Errores de Formato - Verifique su formato de log/fecha/hora\r\n\r\nWith your log-format suggestion gives me this error (about %s status code), is not being parsed correctly (format errors on log/date/time).\r\n\r\nThank you very much again.\r\n\r\nEDIT: The issue was a \"blank\" space on log file, so with the suggested '--log-format' params it seems working like a charm :)"
      },
      {
        "user": "allinurl",
        "created_at": "2022-05-25T00:22:14Z",
        "body": "Glad to hear it worked. Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "a-v-ebrahimi",
        "created_at": "2022-07-31T07:57:45Z",
        "body": "Great it worked, thanks"
      }
    ]
  },
  {
    "number": 2267,
    "title": "Token for '%b' specifier is NULL",
    "created_at": "2022-01-22T06:55:06Z",
    "closed_at": "2022-01-23T02:21:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2267",
    "body": "Example log entries:\r\n`192.168.112.89 - - [22/Jan/2022:00:00:01 +0800] \"GET /app/bed/message/unread?admId=18413&X-ARR-CACHE-HIT=0&X-ARR-LOG-ID=ed1bf584-5da6-4010-9435-7ce111a75131&SERVER-STATUS=200 HTTP/1.1\" 200 192`\r\n\r\nGoaccess version:\r\n`GoAccess - version 1.5.4 - Jan 20 2022 11:47:38` \r\n\r\nSo I start goaccess via:\r\n`LANG='zh_CN.UTF-8' LC_TIME='en_US.UTF-8' goaccess goaccess.log -a -o report.html --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"'  --date-format=%d/%b/%Y --time-format=%H:%M:%S`\r\n\r\nAnd i get a fails msg  about  `Token for '%b' specifier is NULL`.\r\n\r\nIf i chang `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"` to `%h %^[%d:%t %^] \"%r\" %s \"%R\" \"%u\"\" \"%u\"` it's work wall.\r\n\r\nSo it's a bug for this version ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2267/comments",
    "author": "snowlyg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-01-22T15:16:08Z",
        "body": "Please try using:\r\n\r\n    goaccess --log-format=COMMON access.log\r\n"
      },
      {
        "user": "snowlyg",
        "created_at": "2022-01-23T02:21:03Z",
        "body": "> Please try using:\r\n> \r\n> ```\r\n> goaccess --log-format=COMMON access.log\r\n> ```\r\n\r\nThanks, It's working."
      }
    ]
  },
  {
    "number": 2259,
    "title": "What is this log format?",
    "created_at": "2022-01-07T14:25:40Z",
    "closed_at": "2022-01-07T19:06:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2259",
    "body": "I think it's Common Log Format with Virtual Host, but the prefix is throwing me off. Log is rendered like so:\r\n\r\n```log\r\nDec 16 00:00:00 prod.site.com auth-apache-access: 99.99.99.999 9999 - [16/Dec/2021:00:00:00 +0000] \"POST /api/user/ HTTP/1.1\" 200 471 \"-\" \"Python-urllib/3.7\"\r\n```\r\n\r\nHow do I take this into account for the custom format?\r\n\r\nThanks for your time.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2259/comments",
    "author": "rdhar-test",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2022-01-07T17:36:23Z",
        "body": "Hi @rdhar-tc \r\n\r\nIt is seems more NCSA Combined with Virtual Host (VCOMBINED).\r\nMaybe you can try this, at `goaccess.conf`:\r\n\r\n`time-format %H:%M:%S`\r\n`date-format %d/%b/%Y`\r\n`log-format %^ %^ %^ %v %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n\r\nor `--time-format=\"...\"` `--date-format=\"...\"`  `--log-format=\"...\"`, at command-line.\r\n"
      },
      {
        "user": "rdhar-test",
        "created_at": "2022-01-07T19:06:54Z",
        "body": "Thank you, @0bi-w6n-K3nobi, I really appreciate your response. That works a treat!\r\n\r\nAs an added (low-fi) workaround, I also had success with `cut -c17- access.log` to trim the fixed length prefix before piping the output as `--log-format=VCOMMON`.\r\n\r\nThanks once again for your time."
      }
    ]
  },
  {
    "number": 2186,
    "title": "[Help] Need real-time-html report",
    "created_at": "2021-09-20T07:14:29Z",
    "closed_at": "2021-09-22T03:54:44Z",
    "labels": [
      "question",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2186",
    "body": "Recently started using goaccess for our apache base website. We are able to get console running and even was able to generate static HTML page. But again whenever I try to generate report in HTML either static or relatime it shows Websocket interface. Wereas would like to automate a process to generate real-time-html report which runs in background as a daemon or system service. Please can you guide. If this is answered already then please excuse me and share the link for me to refer.   ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2186/comments",
    "author": "JoelDivekar",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-09-21T00:05:07Z",
        "body": "I'm not sure I follow, but if you are interested in running goaccess in the background, you could run it as:\r\n\r\n    goaccess access.log --log-format=COMBINED --daemonize\r\n\r\nOr you could do it through systemd, e.g., #1898 \r\n\r\nLet me know if that helps."
      },
      {
        "user": "JoelDivekar",
        "created_at": "2021-09-22T03:54:43Z",
        "body": "Yes, I did that exactly and it is working fine. But I may have to set it up as a service which will auto start with system reboot. Thanks a lot @allinurl"
      },
      {
        "user": "allinurl",
        "created_at": "2021-09-22T13:19:50Z",
        "body": "Glad to hear you got it to work :)\r\n\r\nFeel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2155,
    "title": "Having a hard time with persistent storage",
    "created_at": "2021-07-28T23:00:59Z",
    "closed_at": "2021-07-29T00:54:34Z",
    "labels": [
      "question",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2155",
    "body": "Hey,\r\nI'm running into some issues with persistent storage and live monitoring.\r\nI want to constantly transfer data from my log file to the persistent storage location but also keep already saved logs.\r\nBut somehow every time I launch goaccess with\r\n`--real-time-html --persist --restore`\r\nit doesn't constantly save to my storage location.\r\nIt isn't quite clear to me whether it saves periodically or not at all.\r\nI couldn't really find anything regarding this in the doc.\r\nI'm honestly really confused rn.\r\nI managed to load all of my old log files using `zcat /var/log/apache2/access.log.*.gz | goaccess -a\r\n`\r\nand then `goaccess --persist`\r\nIf you could help me out by telling me wether it will save to my data location would be great.\r\nAlso does running it daemonized have an impact on it?\r\nEdit: config file is setup correctly with a persistent storage location.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2155/comments",
    "author": "Lennart01",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-07-28T23:10:41Z",
        "body": "I'd run it once as:\r\n\r\n    # zcat access.log.*.gz | goaccess access.log.1 - -o report.html --log-format=COMBINED --persist\r\n\r\nand then just keep adding data to the db as:\r\n\r\n    # goaccess access.log -o report.html --log-format=COMBINED --persist --restore\r\n\r\nEvery time the log rotates, access.log would be the newest and you would just keep adding the new data on top it. \r\n\r\nAlso, before you try that, I'd make sure to the delete current runs that you may have persisted before, e.g.,\r\n\r\n    # rm -rf /tmp/*.db\r\n\r\nGive it a shot and let me know how it goes."
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:15:05Z",
        "body": "yeah about that.\r\nmy initial question would be whether if I run it with --real-time-html and ---persist will it save only once on execution or also down the line?\r\nand thanks if this doesn't work I will definitely try that."
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:26:36Z",
        "body": "If `--real-time-html --persist` doesnt autosave I would just run it once with `--realtime-html` and implement a log rotate hook as described in the guide by Arnaud Rebillout.\r\nI kinda want a live monitoring with live data but also long-term data storage.\r\nIve now managed to get my old logs pulled with the method you described.\r\nIm now running it with `goaccess /var/log/apache2/access.log -o /var/www/html/downloads/report.html --persist --restore --log-format=COMBINED --real-time-html`"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-28T23:51:47Z",
        "body": "You should be fine, `--real-time-html` doesn't affect anything since a complete parse is done, the only difference is that when using real-time, the response to the browser is much lighter than a full blown report. The data is persisted upon exiting/closing goaccess. e.g., SIGINT - `Ctrl+C`"
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:53:42Z",
        "body": "so If I run it with `--real-time-html` from now on it will autosave on termination.\r\nThank you very much that saved me a lot of hastle."
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-29T00:54:34Z",
        "body": "Happy to help :)\r\n\r\nClosing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2148,
    "title": "X-Forwarded-For field not parsing",
    "created_at": "2021-07-15T13:48:45Z",
    "closed_at": "2021-07-19T22:02:48Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2148",
    "body": "goaccess 1.5.1 macos 11.4\r\n\r\nI am not able to convince goaccess about the X-Forwarded-For field in my logs.  There is nothing special about it:\r\n\r\n```\r\ntest.log:\r\nx.x.x.x - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"y.y.y.y.y\" 0.137 TLSv1.2\r\n```\r\n\r\n```\r\ngoaccess --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" ~h{,\" } %T %^' test.log\r\n```\r\n\r\nThis always shows `x.x.x.x` in the \"Visitor Hostnames and IPs\" (not `y.y.y.y`)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2148/comments",
    "author": "minusf",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-07-15T21:42:17Z",
        "body": "For the given log, e.g.,\r\n\r\n```\r\n192.168.0.1 - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"190.12.12.12\" 0.137 TLSv1.2\r\n192.168.0.1 - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"10.12.12.12, 21.2.212.2\" 0.137 TLSv1.2\r\n```\r\n\r\nThis should work:\r\n\r\n    goaccess access.log --log-format='%^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" ~h{,\" } %T %K' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "minusf",
        "created_at": "2021-07-15T22:44:23Z",
        "body": "so `%h` and `~h` are exclusive?  is this mentioned somewhere in the man page? "
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-17T18:41:51Z",
        "body": "Part of it was in the man page, under the specifiers section. I expanded this to hosts as well.\r\n\r\n> Important\r\n> If multiple time served specifiers or hosts are used at the same time, the first option specified in the format string will take priority over the other specifiers."
      },
      {
        "user": "minusf",
        "created_at": "2021-07-17T19:20:42Z",
        "body": "ok, that helps.  but i am still confused becasue `%h != ~h`, one is `host`, the other is `x-forwarded-for`, they might be both just ip numbers but they are specifying 2 entirely different things..  i see that `%x` is already taken but maybe `~X` would be a less confusing specifier for it?"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-19T21:19:44Z",
        "body": "Good point, the reason it uses `~h` is that whatever is extracted either through `~h` or `%h`, that's what it's going to be put in the hosts panel. "
      },
      {
        "user": "minusf",
        "created_at": "2021-07-19T22:02:48Z",
        "body": "ok, that also kind of makes sense :}  if some of this could be captured in the man page, i think that would be great! i'll close this now if it's fine with you. thank you for the help."
      }
    ]
  },
  {
    "number": 2117,
    "title": "OpenLiteSpeed Common log format not being detected",
    "created_at": "2021-05-21T02:56:02Z",
    "closed_at": "2021-06-12T06:28:42Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2117",
    "body": "Hello and thanks for reading my issue :D \r\n\r\nI've been experiencing some trouble reading my virtual host access log for anylisis and I've scrapped the whole web in search of answers but I could not find a forum for this tool.\r\n\r\nI changed my virtual host log format from `NCSA extended/combined log format` to `Common Log Format (CLF)` since my results didn't show any unique visitors, 404's, time distributions or even http status codes.  I was using this command: `sudo goaccess vhost.access_log --log-format='\"%h %l %u [%d:%T] \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{Host}i\"\"' --date-format=%d/%b/%Y --time-format=%T` When i used NCSA ext/com.\r\n\r\nNow, when trying to parse Common Log Format things get weird, the OpenLiteSpeed documentation shows the exact same expression as the apache documentation which is this one: `\"%h %l %u %t \\\"%r\\\" %>s %b\"` (Note the `\\` used to escape quotations).\r\n\r\nBut when trying to load the new common log format file I get this error:\r\n\r\n```\r\nParsed 10 lines producing the following errors:\r\n\r\nToken 'example.com' doesn't match specifier '%h'\r\nToken 'example.com' doesn't match specifier '%h'\r\n```\r\nMy log file looks like this (CLF):\r\n\r\n```\r\n\"example.com 000.000.000.00 - - [21/May/2021:02:36:14 +0000] \"GET / HTTP/2\" 200 10540\"\r\n```\r\n\r\nI'm using this command: `sudo goaccess vhost.access_log --log-format='\"%h %l %u %t \"%r\" %>s %b\"' --date-format=%d/%b/:Y --time-format=%T` which doesn't work.\r\n\r\nWhat am I doing wrong here? I've checked the documentation and tried a few variants in the log format but no success yet :( is there any way to solve the missing results issue? or am I just wrong in the log format?\r\n\r\nThanks in advance for your response :)\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2117/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-05-21T12:47:40Z",
        "body": "Hello,\r\n\r\nAssuming no quotes around each line, then this should work:\r\n\r\n    sudo goaccess vhost.access_log --log-format='%v %h %^[%d:%t %^] \"%r\" %s %b' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nwith quotes:\r\n\r\n    sudo goaccess vhost.access_log --log-format='\"%v %h %^[%d:%t %^] \"%r\" %s %b\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "ghost",
        "created_at": "2021-05-21T21:27:03Z",
        "body": "The first command worked like a charm. I'm assuming I missed the `%v` parameter and the `%^` as well. Thanks a lot for helping me solve this issue :) , I think I should have read the documentation again to see those two. "
      },
      {
        "user": "allinurl",
        "created_at": "2021-05-21T21:28:39Z",
        "body": "Glad that solved the issue :)\r\n\r\nFeel free to reopen it if needed."
      },
      {
        "user": "ghost",
        "created_at": "2021-06-12T06:24:39Z",
        "body": "My server logs changed (without prior notice, idk if this came with an OLS update) and now look like this:\r\n\r\n`\"<ip-addr> - - [12/Jun/2021:06:10:42 +0000] \"GET /route/ HTTP/1.1\" 301 0\"`\r\n\r\nI've tried modifying the commands above but I get stuck at parsing the date with this error :(\r\n`Token '-' doesn't match specifier '%h'`\r\n\r\nShould I include the `-` 's in the log format?\r\n"
      },
      {
        "user": "ghost",
        "created_at": "2021-06-12T06:28:42Z",
        "body": "Fixed it. Here is the solution if someone else comes around the same problem:\r\n`--log-format='\"%h - - %^[%d:%t %^] \"%r\" %s %b\"' --date-format=%d/%b/%Y --time-format=%T`"
      }
    ]
  },
  {
    "number": 2060,
    "title": "Hostname doesn't match specifier %h",
    "created_at": "2021-03-22T20:04:53Z",
    "closed_at": "2021-04-02T02:41:28Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2060",
    "body": "ppp-mia-30.shadow.net - - [01/Jul/1995:00:00:41 -0400] \"GET /images/NASA-logosmall.gif HTTP/1.0\" 200 786\r\n\r\nToken 'ppp-mia-30.shadow.net' doesn't match specifier '%h'\r\n\r\nIs it possible to read the hostname without it being ipv4 or ipv6? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2060/comments",
    "author": "Alex-C96",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-03-23T13:10:36Z",
        "body": "Please try using `--no-ip-validation`."
      },
      {
        "user": "allinurl",
        "created_at": "2021-04-02T02:41:28Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "Alex-C96",
        "created_at": "2021-04-03T04:31:41Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 2043,
    "title": "report not generated",
    "created_at": "2021-02-25T23:03:38Z",
    "closed_at": "2021-03-16T23:48:09Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2043",
    "body": "      'lo All,\r\nI've installed GoAccess on my  Debian/Apache2 webserver and am having some trouble getting GoAccess to generate output.\r\n\r\n--TheCommand:\r\ngoaccess /var/log/apache2/other_vhost_access.log -o /f1/websites/80_home/html/goaccess/index.html --log-format=VCOMBINED --real-time-html\r\n--TheOutput:\r\nDaemonized GoAccess: 3438\r\n\r\n\r\n...Yet the file:[/f1/websites/80_home/html/goaccess/index.html]  is never created.\r\nThere is no error text.\r\nthere is no existing ~index.html file\r\n\r\nand ps aux | 3438 yields no output either.\r\n\r\n--TheRequest:\r\nCan any of you lend some insight on how to troubleshoot/resolve this?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2043/comments",
    "author": "GrepZen",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-02-26T00:24:37Z",
        "body": "Please don't daemonize the process and check for any errors you may be getting. Also make sure you can write to that path."
      },
      {
        "user": "allinurl",
        "created_at": "2021-03-16T02:55:56Z",
        "body": "Any updates on this?"
      },
      {
        "user": "GrepZen",
        "created_at": "2021-03-16T23:48:09Z",
        "body": "Allinurl  .. two things\r\n1st ... Thank you so much for the follow up on this.  Time had gotten away from me and this reminder helped me close a task. --Thank You!\r\n2nd ... I ran w/o daemonizing and was able to see errors (log file path) that readily lead to solution.  GoAccess is now performing well and displaying beautifully.  Thank you again!"
      }
    ]
  },
  {
    "number": 2000,
    "title": "Default value of keep-last",
    "created_at": "2021-01-17T09:36:46Z",
    "closed_at": "2021-01-19T01:48:15Z",
    "labels": [
      "question",
      "on-disk",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2000",
    "body": "Hello, \r\nwhat is the default value of the **keep-last** parameter, \r\nused in conjunction with **persist = true**?\r\n7 days?\r\ninfinite?\r\n\r\nThank's for your job!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2000/comments",
    "author": "danilort",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-01-18T14:29:55Z",
        "body": "Hi @danilort \r\n\r\nJust see into your conf `/etc/goaccess/goaccess.conf`.\r\nIf it is commented then it is `zero` == `infinite`, i.e. without any limitation.\r\nDo a simple test, with a few requests for each day, and you will be sure of it.\r\nAnd this parameter is independent of the flag `persit`.\r\n\r\nI hope I've helped.\r\n\r\n"
      },
      {
        "user": "danilort",
        "created_at": "2021-01-18T15:22:15Z",
        "body": "Great. \r\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2021-01-19T01:48:15Z",
        "body": "As @0bi-w6n-K3nobi zero is default which is equal to infinity regardless of persist. \r\n\r\nIf you have any other questions, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1948,
    "title": "Goaccess Error occurred at: src/parser.c - read_log - 2730",
    "created_at": "2020-10-27T14:34:22Z",
    "closed_at": "2020-10-28T08:56:43Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1948",
    "body": "Good day!\r\nI am getting an error when executing the command:\r\n\r\n$ zcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log --log-format=COMBINED\r\n\r\nGoAccess - version 1.4 - Oct 19 2020 14:08:20\r\nConfig file: /usr/local/etc/goaccess/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occurred at: src/parser.c - read_log - 2730\r\nUnable to open the specified log file. Permission denied\r\n\r\nI work with DJANGO and I have failed to implement real-time statistics export.\r\nTherefore, I implemented the export of the report through a script, but when the script is executed, the statistics are displayed for one day.  And I need to display statistics since the start of the web server.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1948/comments",
    "author": "andrgayday",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-10-27T21:30:34Z",
        "body": "Hi.\r\nI hope that message is clear. Or not? **`\"...  Permission denied\"`**\r\nYour user need permission for read the `LOG`.\r\n\r\nI should too add character **`-`** for read from `PIPE`. I.E:\r\n\r\n `zcat /var/log/nginx/access.log.*.gz | goaccess`**`-`**`/var/log/nginx/access.log --log-format=COMBINED`"
      },
      {
        "user": "andrgayday",
        "created_at": "2020-10-28T08:56:43Z",
        "body": "Problem solved! I changed the permissions on the log file.\r\nMany thanks!"
      }
    ]
  },
  {
    "number": 1942,
    "title": "Custom log format",
    "created_at": "2020-10-13T14:12:28Z",
    "closed_at": "2020-10-13T15:12:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1942",
    "body": "We use a custom log format that I've been having the hardest time configuring GoAccess to parse. Any help/input would be appreciated.\r\n\r\nhttpd.conf log format;\r\n\r\nLogFormat \"\\\"%{X-Forwarded-For}i\\\" %v %h %l %u %t \\\"%r\\\" %>s %b %D \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" custom\r\n\r\nlog output example;\r\n\r\n\"70.X.X.X, 90.X.X.X\" test.host.com 172.X.X.X - - [11/Oct/2020:03:12:03 +0000] \"POST /api/rest.php HTTP/1.1\" 200 745 229390 \"-\" \"Amazon CloudFront\"\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1942/comments",
    "author": "route-print",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-10-13T14:20:47Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='~h{\", } %v %^ %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "route-print",
        "created_at": "2020-10-13T15:12:54Z",
        "body": "Thanks!, that did the trick."
      }
    ]
  },
  {
    "number": 1836,
    "title": "Error occured at src/parser.c - read_log. But only when run from cron. And yes, I'm using absolute paths.",
    "created_at": "2020-07-05T10:06:58Z",
    "closed_at": "2020-07-11T17:37:07Z",
    "labels": [
      "question",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1836",
    "body": "Hi,\r\nI know this looks like the 50 identical issues I've googled so far, but I have no idea why this doesn't work. The point is, it works when invoked in shell, but doesn't when run from cron. The cron is root-owned, so there should be no permission issues. I use absolute paths, so ENV variables shouldn't be an issue either.\r\n\r\nThis is the problematic line:\r\n```\r\nzcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log{,.1} - -q --log-format=COMBINED -o /var/www/html/foo/bar/report.html >/dev/null\r\n```\r\n\r\nIt works in shell, but not in cron.\r\n\r\n```\r\nParsing... [0] [0/s]\r\nGoAccess - version 1.2 - Jun 19 2017 12:55:29\r\nConfig file: /etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/parser.c - read_log - 2669\r\nUnable to open the specified log file. No such file or directory\r\n```\r\n\r\nThis looks like I misspecified the log paths, but when I paste the command into shell, everything works. I thought it was going to be `$PATH` issue, but I specify absolute paths everywhere. And both `zcat` and `goaccess` are in cron `$PATH` already.\r\n\r\nAny ideas?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1836/comments",
    "author": "SoptikHa2",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-07-08T21:23:56Z",
        "body": "Can you please try without expanding multiple logs?\r\n\r\n    zcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log - -q --log-format=COMBINED -o /var/www/html/foo/bar/report.html\r\n\r\nand  \r\n\r\n     goaccess /var/log/nginx/access.log - -q --log-format=COMBINED -o /var/www/html/foo/bar/report.html\r\n"
      },
      {
        "user": "SoptikHa2",
        "created_at": "2020-07-11T17:37:07Z",
        "body": "Thanks a lot, the issue disappears when I remove the shell expand. I guess it's some shell opt-in feature.\r\n\r\nSorry for inconvenience!"
      },
      {
        "user": "allinurl",
        "created_at": "2020-07-13T21:55:53Z",
        "body": "Glad that solved the issue. Yeah my best guess is that the cron doesn't expand it due to a tty. You can probably run a scripts instead of running goaccess directly.\r\n\r\nClosing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1791,
    "title": "Help with custom log format with tabs",
    "created_at": "2020-05-27T06:07:37Z",
    "closed_at": "2020-06-01T06:56:57Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1791",
    "body": "Hi, I have a custom log that separates data by tab (TSV log format).\r\nLog is a DNS query.\r\n\r\nThis is a snipped of the log\r\n[2020-05-27 14:47:47]\t10.10.1.1\tbadexample.com\tA\tFORWARD\t24ms\t10.10.1.1:53\r\n\r\nThis is my goaccess.conf \r\n\r\n```\r\ntime-format %H:%M:%S\r\ndate-format %Y-%m-%d\r\nlog-format [%d %t] %h %v %U %^ %^ %^ %^\r\n\r\n```\r\nIt works fine when I manually change tab to space, but can't figure out how to get the tab read by goaccess so interprets the log file.\r\n\r\nThis is what I keep getting when trying to run goaccess\r\n\r\nParsed 1 lines producing the following errors:\r\nToken for '%h' specifier is NULL.\r\nFormat Errors - Verify your log/date/time format\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1791/comments",
    "author": "p01acos",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-28T23:19:43Z",
        "body": "You can always use `\\t` as delimiter. e.g., \r\n\r\n    log-format [%d %t]\\t%h\\t%v\\t%U\\t%^"
      },
      {
        "user": "p01acos",
        "created_at": "2020-06-01T06:56:54Z",
        "body": "> log-format [%d %t]\\t%h\\t%v\\t%U\\t%^\r\n\r\nso simple yet so far :|\r\nbloody legend mate, cheers"
      }
    ]
  },
  {
    "number": 1668,
    "title": "Parsing access log date and time in a single variable tab delimited",
    "created_at": "2020-02-12T14:10:42Z",
    "closed_at": "2020-02-13T14:50:40Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1668",
    "body": "Hi all, I'm new to goaccess and I'm trying to my web access log to be inspect:\r\n\r\nthis is my apache log format: \r\n\r\n`LogFormat \"%V\\t%h\\t%{SSL_PROTOCOL}x\\t%{SSL_CIPHER}x\\t%{SSL_CLIENT_S_DN_CN}x\\t%u\\t%{%d/%m/%Y %T %Z}t\\t%{UNIQUE_ID}e\\t%{JSESSIONID}C\\t%H\\t%m\\t%U\\t\\\"%q\\\"\\t%>s\\t%b\\t\\\"%{Referer}i\\\"\\t\\\"%{User-Agent}i\\\"\\t%D\\t%X\\t%I\\t%O\" mycustumlog\r\n`\r\n\r\n\r\nexample output:\r\n\r\n\r\n    www.test.it   192.168.253.176                 -       -       20/01/2020 01:00:47 CET XiTtr38AAAEAAAzn8PkAAABX        7E7E5A44F91C8095E2E6EC57EBD0221E        HTTP/1.1        GET     0       /cms/   \"\"      200     143296  \"-\"     \"Zabbix\"        309722  +       477     147885\r\n\r\n`\r\nI try with:\r\n\r\n`goaccess access.log -o report.html  -p /etc/goaccess/goaccess.conf  --time-format='%H:%M:%S %Z' --date-format='%d/%m/%Y' --log-format='%v\\t%h\\t-\\t-\\t-\\t%d\\t'`\r\n\r\nbut I get:\r\n\r\n```\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '20/01/2020 01:00:47 CET' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\n```\r\nCould anyone help? \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1668/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-02-12T15:14:11Z",
        "body": "For this log:\r\n\r\n```\r\nwww.test.it\t192.168.253.176\t-\t-\t20/01/2020 01:00:47 CET\tXiTtr38AAAEAAAzn8PkAAABX\t7E7E5A44F91C8095E2E6EC57EBD0221E\tHTTP/1.1\tGET\t0\t/cms/\t\"\"\t200\t143296\t\"-\"\t\"Zabbix\"\t309722\t+\t477\t147885\r\n```\r\n\r\nThis should work:\r\n\r\n    goaccess access.log --log-format='%v\\t%h\\t%^\\t%^\\t%d %t %^\\t%^\\t%^\\t%H\\t%m\\t%^\\t%U\\t\"%q\"\\t%%s\\t%b\\t^\"%R\"\\r\"%u\"\\t%D\\t%^' --date-format=%d/%m/%Y --time-format=%T"
      },
      {
        "user": "ghost",
        "created_at": "2020-02-13T08:12:59Z",
        "body": "thank you so much! I add some extra %^ to parse \"-\" chars and now the magic string:\r\n\r\n     goaccess access.log --log-format='%v\\t%h\\t%^\\t%^\\t%^\\t%^\\t%d %t %^\\t%^\\t%^\\t%H\\t%m\\t%^\\t%U\\t\"%q\"\\t%%s\\t%b\\t^\"%R\"\\r\"%u\"\\t%D\\t%^' --date-format=%d/%m/%Y --time-format=%T\r\n\r\nthanks for help! Great software!!!"
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-13T14:50:40Z",
        "body": "Glad that did the job :)"
      }
    ]
  },
  {
    "number": 1655,
    "title": "Unknown browser behind apache reverse proxy",
    "created_at": "2020-01-18T12:16:00Z",
    "closed_at": "2020-01-21T19:23:32Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1655",
    "body": "Hi,\r\n\r\nmy webserver is behind an apache reverse proxy. Therefore my apache LogFormat looks like this:\r\n`LogFormat \"%a %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" proxy`\r\n\r\nOutput:\r\n`192.168.99.1 - - [18/Jan/2020:13:37:36 +0100] \"GET /favicon.ico HTTP/1.1\" 301 232 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0\"`\r\n\r\nIf i choose the \"Common Log Format (CLF)\" in goaccesss.conf, it does work, but shows 100% unknown browsers.\r\nI tried a few other strings without success.\r\n\r\nWhat would be the correct logformat in goaccess.conf?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1655/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-01-21T01:54:36Z",
        "body": "Looks like the COMBINED format. Please try passing\r\n\r\n    goaccess access.log --log-format=COMBINED\r\n\r\nOtherwise, feel free to post a few lines from your access log and I can take a look. Thanks"
      },
      {
        "user": "ghost",
        "created_at": "2020-01-21T19:23:32Z",
        "body": "Thank you, that works! "
      }
    ]
  },
  {
    "number": 1571,
    "title": "macOS 10.15 nginx access_log Token doesn't match specifier '%d",
    "created_at": "2019-10-16T03:09:16Z",
    "closed_at": "2019-10-17T14:48:03Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1571",
    "body": "Hello,\r\n\r\n I keep on getting this error no matter what I do:\r\n\r\n`Token '16/Oct/2019' doesn't match specifier '%d'`\r\n\r\nThe command I am using is:\r\n`goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMMON`\r\n\r\nI tried other methods and it was the same error.example:\r\n`goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"'`\r\n\r\nAn example log file line:\r\n`127.0.0.1 - - [16/Oct/2019:10:43:04 +0800] \"GET /report.html HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36\" \"-\"`\r\n\r\nIn addition,the output of `date ` my terminal is :\r\n`2019\u5e7410\u670816\u65e5 \u661f\u671f\u4e09 11\u65f604\u520636\u79d2 CST`\r\n\r\nThanks in advance ! :)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1571/comments",
    "author": "huxxhua",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-10-17T13:56:21Z",
        "body": "Looks like your access log has english dates while your system locale is set to Chinese. \r\n\r\n    LANG=\"en_US.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'"
      },
      {
        "user": "huxxhua",
        "created_at": "2019-10-17T14:47:56Z",
        "body": "it work!\r\nI added it`LANG=\"en_US.UTF-8\"` in front of the command line.\r\n\r\nThe command I am using is:\r\n`LANG=\"en_US.UTF-8\" bash -c  'goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMMON'`\r\n\r\nMaybe the system language affects the match\r\n\r\nanyway,Thank you very much!"
      }
    ]
  },
  {
    "number": 1536,
    "title": "Trying to exclude a specific user agent (Web Site Monitor)",
    "created_at": "2019-08-20T18:24:35Z",
    "closed_at": "2019-08-24T01:58:24Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1536",
    "body": "I was reading how you had added the ability to add a list of browsers in a text file, and was trying to use this as a way to omit our uptime requests from the log parsing.\r\n\r\nWe use NodePing, so i created a file called browsers.txt, using your demo file and added a line to the top:\r\nNodePing                                          Crawler\r\n\r\nI was using the following command in bash:\r\n\r\n    bash-4.4$ goaccess /cygdrive/e/temp/goaxess/*.log --log-format='%d %t.%^ ~h{,\" } %e %v %^ %m %U %q %s %^ %^ %L \"%u\" %R %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no -o /cygdrive/e/temp/ws_all_report_20190919.html --real-time-html --browsers-file=/cygdrive/e/temp/browsers.txt --ignore-crawlers\r\n\r\nIt still has the same mount of requests over all with or without the last two switches in the command line (I think this is intended to show the total number of requests without filtering the browsers file)\r\n\r\nI am just looking for confirmation that this is the way to execute this type of result\r\n\r\nLet me know what you think",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1536/comments",
    "author": "Gecko483",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-22T01:43:29Z",
        "body": "Please try setting it as `Crawlers` instead of `Crawler`. Also make sure it is tab delimited e.g.,\r\n\r\n    NodePing\\t\\tCrawlers\r\n\r\nthat is, \r\n\r\n    NodePing\t\tCrawlers"
      },
      {
        "user": "Gecko483",
        "created_at": "2019-08-22T15:42:23Z",
        "body": "I added the tab delimiter in between the name and the type instead of spaces.\r\n\r\nI also see that it removes the top requested file based on the browsers.txt file.\r\n\r\nThis is what i was looking for \r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 1445,
    "title": "No Such File or Directory",
    "created_at": "2019-05-02T12:10:21Z",
    "closed_at": "2019-05-02T19:56:41Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1445",
    "body": "\t$ goaccess -p /usr/local/etc/goaccess/goaccess.conf mylog.log-20190502 ~/desktop/alpha.html\r\n\r\n\tGoAccess - version 1.3 - Apr 29 2019 17:12:23\r\n\tConfig file: /usr/local/etc/goaccess/goaccess.conf\r\n\r\n\tFatal error has occurred\r\n\tError occurred at: src/parser.c - read_log - 2728\r\n\tUnable to open the specified log file. No such file or directory\r\n\r\n\t$ ll\r\n\t-rwxr-xr-x   1 rich  admin    21K Oct 15  2018 mylog.log-20181003\r\n\t-rwxr-xr-x@  1 rich  admin   1.1M May  2 07:59 mylog.log-20190502\r\n\r\nFor some reason, the log file cannot be opened.  It's there (last line) and it's copied and pasted so I'm not overlooking it.  \r\n\r\nAnything I should try?  ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1445/comments",
    "author": "daBee",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-05-02T14:38:59Z",
        "body": "Please specify the output flag. e.g.,\r\n\r\n    $ goaccess -p /usr/local/etc/goaccess/goaccess.conf mylog.log-20190502 -o ~/desktop/alpha.html\r\n"
      },
      {
        "user": "daBee",
        "created_at": "2019-05-02T19:56:41Z",
        "body": "That was it.  Not sure how I missed that.  "
      }
    ]
  },
  {
    "number": 1424,
    "title": "syncing logs from elb - live report",
    "created_at": "2019-04-12T15:05:56Z",
    "closed_at": "2019-04-19T10:03:38Z",
    "labels": [
      "question",
      "log-processing",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1424",
    "body": "Hey guys, i just tried GoAccess and it works like a charm once you get to know it.\r\n\r\nIt's not a issue but more of a logical question.\r\n\r\nI am successful in parsing the s3/elb logs that are stored there with s3cmd sync command to EC2. \r\nWhat i am trying to do is having that sync from s3 to GoAccess live - incrementally because sync works that way, only new logs are shipped and i want those new ones added to the report, not all of them.\r\n\r\nIf i put the command for report.html it parses the whole folder, not just the new ones that were copied. \r\nHere is the command : \r\n\r\n`find /tmp/s3/ -name \"*.log\" -exec cat {} \\; | goaccess -a --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html`\r\n\r\nIs there any possibility for goaccess to only parse the new logs in real time because my bucket is dozens of gigabytes ? I tried something with crontab but unsuccessful. \r\nThank you guys.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1424/comments",
    "author": "kenzoawa",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-04-13T14:51:05Z",
        "body": "You could use find and see the latest mod files:\r\n\r\n> find . -cmin +<time>\r\n> find . -cmin -<time>\r\n> find . -cmin  <time>\r\n\r\nFor example, the files with last edition in a maximum of 5 minutes, are given by:\r\n\r\n    find  /tmp/s3/ -cmin -5 -name \"*.log\" -exec cat {} \\; | goaccess -a --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html\r\n\r\n\r\n"
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-15T08:56:01Z",
        "body": "Thank you very much allinurl! \r\nYou are a saver. \r\n\r\nI will try the command and give feedback here."
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-19T10:03:38Z",
        "body": "Works like a charm, thanks allinurl!"
      }
    ]
  },
  {
    "number": 1406,
    "title": "[Solved] Processing logs with goaccess and logrotate  - question.",
    "created_at": "2019-03-14T11:08:03Z",
    "closed_at": "2019-03-14T18:56:35Z",
    "labels": [
      "question",
      "html report",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1406",
    "body": "Hi!\r\n\r\nI am using this command to print real-time html output:\r\ngoaccess /path/to/access.log --log-format=COMBINED -o /path/to/www/root/report.html --real-time-html --real-os --all-static-files --agent-list --http-protocol=yes --http-method=yes --hl-header\r\n\r\nAnd it shows statistics only from one day (current day). There is also files like access.log.12.gz due to logrotate. How can I use all of the data? Also compressed with logrotate.\r\n\r\nThanks in advance!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1406/comments",
    "author": "AreYouLoco",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-03-14T13:51:03Z",
        "body": "Please try using:\r\n\r\n    zcat access.log.*.gz | goaccess access.log --log-format=COMBINED - -o /path/to/www/root/report.html\r\n\r\nAlso note that each active panel has a total of 50 entries in the real-time HTML report instead of the 366 in static mode.  Let me know how that goes."
      },
      {
        "user": "AreYouLoco",
        "created_at": "2019-03-14T18:52:13Z",
        "body": "Yup it works now as expected. Thanks!\r\n\r\nI switched to static pages and your pipe trick and now I can see all the data which is more than disturbing.\r\nWhy people would like to break into my phpmyadmin, why?:D\r\n\r\nIssue marked solved and closed."
      }
    ]
  },
  {
    "number": 1367,
    "title": "How do you extend the number of entries that show within a panel for HTML output?",
    "created_at": "2019-01-29T19:00:17Z",
    "closed_at": "2019-01-29T19:33:27Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1367",
    "body": "I've tried the following to limit the generated HTML panels list to just the \"HOSTS\" panel with the hope that it would expand to include more entries, but no such luck:\r\n\r\n```shell\r\ngrep '29/Jan' other_vhosts_access.log | \\\r\n\tgoaccess \\\r\n\t\t--log-format VCOMMON \\\r\n\t\t--agent-list \\\r\n\t\t--all-static-files \\\r\n\t\t--enable-panel=\"HOSTS\" \\\r\n\t\t--ignore-panel=\"REQUESTS\" \\\r\n\t\t--ignore-panel=\"REQUESTS_STATIC\" \\\r\n\t\t--ignore-panel=\"NOT_FOUND\" \\\r\n\t\t--ignore-panel=\"VISITORS\" \\\r\n\t\t--ignore-panel=\"OS\" \\\r\n\t\t--ignore-panel=\"BROWSERS\" \\\r\n\t\t--ignore-panel=\"VISIT_TIMES\" \\\r\n\t\t--ignore-panel=\"VIRTUAL_HOSTS\" \\\r\n\t\t--ignore-panel=\"REFERRERS\" \\\r\n\t\t--ignore-panel=\"REFERRING_SITES\" \\\r\n\t\t--ignore-panel=\"KEYPHRASES\" \\\r\n\t\t--ignore-panel=\"STATUS_CODES\" \\\r\n\t\t--ignore-panel=\"REMOTE_USER\" \\\r\n\t\t--ignore-panel=\"GEO_LOCATION\" \\\r\n\t\t--with-output-resolver \\\r\n\t\t-o SYSTEM_NAME_HERE-2019-01-29.html\r\n```\r\n\r\nI assume I'm doing something wrong, but the entries in the panel appear to be limited to 7 items.\r\n\r\nWhat I'm really trying to accomplish is either a longer listing of top visitors *or* a grouping of visitors by domain instead of via individual IPs or (in my case) by unique FQDN.\r\n\r\nThanks for your help.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1367/comments",
    "author": "atc0005",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-01-29T19:18:23Z",
        "body": "You can set the number of items through the preferences (HTML report) or through your config file, e.g., \r\n\r\n    html-prefs {\"autoHideTables\":true,\"layout\":\"horizontal\",\"perPage\":15,\"theme\":\"darkPurple\"}\r\n\r\nPlease note you may need to reload the report (Ctrl+Shift+r)"
      },
      {
        "user": "atc0005",
        "created_at": "2019-01-29T19:20:49Z",
        "body": "omg, I am so blind. Thank you for patiently/kindly pointing that out. :)"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-29T19:33:27Z",
        "body": "Glad to hear you were able to spot it :)"
      }
    ]
  },
  {
    "number": 1290,
    "title": "custom log format / additional identifiers",
    "created_at": "2018-11-01T15:36:31Z",
    "closed_at": "2018-11-23T15:49:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1290",
    "body": "i'm trying to make goaccess understand my custom log format. basically it's standard apache, but extended by some fields. i've read parser.c to build my own format, but failed to find the following identifiers:\r\n\r\n\r\n```\r\n 127.0.0.1- - [01/Nov/2018:07:48:51 +0000] \"GET / HTTP/1.1\" 302 120 \"-\" \"Mozilla/5.0\" 616 6347 mod_deflate: In:124 Out:102:82pct 62485 0 - localhost\r\n<---------------- A P A C H E  F O R M A T ----------------------------------------->  %I  %O  mod_deflate: In:%IC Out:%OC:%Cpct   %D %k %s   %v\r\n```\r\n%I received bytes (total)\r\n%O sent bytes (total)\r\n%IC compression input bytes\r\n%OC compresseion output bytes\r\n%C compression ratio\r\n%k keepalive requests\r\n%s status \r\n\r\nhere's the apache log format config:\r\n```\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O mod_deflate: In:%{deflate_in_info}n Out:%{deflate_out_info}n:%{deflate_ratio_info}npct %D %k %X %V\"\r\n```\r\n\r\nin general it would be useful to have a \"ignore\"-identifier, so that we can parse logs, even though some fields are not implemented.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1290/comments",
    "author": "pille",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-11-02T12:09:01Z",
        "body": "Please try the following:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %^ %^ %^ %^ %D %^' --date-format=%d/%b/%Y --time-format=%T\r\n"
      },
      {
        "user": "pille",
        "created_at": "2018-11-02T12:20:42Z",
        "body": "thanks. `%^` was the field i was missing. \r\nfeel free to close if you don't plan on implementing compression ratio report."
      },
      {
        "user": "allinurl",
        "created_at": "2018-11-23T15:49:03Z",
        "body": "Closing this. Please feel free to open a new issue so I can look into the compression ratio panel. Thanks."
      }
    ]
  },
  {
    "number": 1276,
    "title": "Parsing timestamps from Traefik",
    "created_at": "2018-10-22T17:12:15Z",
    "closed_at": "2018-10-22T18:05:11Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1276",
    "body": "Example timestamp `2018-10-12T17:20:36.403088507Z`\r\n\r\n`%T` doesn't seem to be able to parse that sort of precision. I tried a few different methods without success.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1276/comments",
    "author": "ipmb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-22T17:53:21Z",
        "body": "The following format should do it: `2018-10-12T17:20:36.403088507Z` = `%dT%t.%^`"
      },
      {
        "user": "ipmb",
        "created_at": "2018-10-22T18:05:11Z",
        "body": "Perfect... thanks!"
      }
    ]
  },
  {
    "number": 1214,
    "title": "cron problem due to missing path",
    "created_at": "2018-08-23T23:25:12Z",
    "closed_at": "2018-08-27T14:28:46Z",
    "labels": [
      "question",
      "command-line options",
      "other",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1214",
    "body": "I try to run this cron job but goaccess can not creat the report,\r\n*/2 * * * * goaccess access.log -a > report.html \r\nalthough when i run this command from my ssh it works fine\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1214/comments",
    "author": "egy1st",
    "comments": [
      {
        "user": "LoZio",
        "created_at": "2018-08-24T09:34:35Z",
        "body": "Mostly due to missing path entries when run via crond.\r\nChech which is the full path of goaccess:  `which goaccess`\r\nYou'll get something like: `/usr/local/bin/goaccess`\r\nIn your cron line use the full path above instead of just `goaccess`.\r\n`*/2 * * * * /usr/local/bin/goaccess access.log -a > report.html`"
      },
      {
        "user": "egy1st",
        "created_at": "2018-08-24T14:25:45Z",
        "body": "Thank you. it works now"
      }
    ]
  },
  {
    "number": 1205,
    "title": "I find the value of \"unique visitors\" is not right!",
    "created_at": "2018-08-20T09:44:39Z",
    "closed_at": "2018-08-22T11:47:04Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1205",
    "body": "env\uff1a\r\nGoAccess - 1.2\r\nubuntu 14.04\r\n\r\nmy goaccess command:\r\n\r\n```\r\ngoaccess -f /srv/logs/access.log -o report.html \r\n```\r\nThe result of \"unique visitors\" is : '10704\"\r\n\r\nBut if I use shell command:\r\n\r\n```\r\ncat /srv/logs/access.log |awk '{print $1}'|sort|uniq -c|wc -l\r\n````\r\nThe result is : \"5025\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1205/comments",
    "author": "Haitianisgood",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-20T14:29:38Z",
        "body": "Please note that HTTP requests containing the **same IP**, the **same date**, and the **same user agent** are considered a unique visitor. In your case, I'm assuming you are only taking unique IPs. \r\n\r\nThe unique IPs count should be displayed right above the data column in the Visitors Panel. "
      },
      {
        "user": "Haitianisgood",
        "created_at": "2018-08-21T02:42:46Z",
        "body": "Thank you for you reply!\r\nIn my opinion the \"HTTP requests containing the same IP, the same date, and the same user agent are considered a unique visitor\" should be less than unique IPs. Because it have too many restrictions.\r\n\r\nI think one IP requested two or more API should be one unique visitor,is it right?\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-21T11:43:34Z",
        "body": "Not really. Think about a house where all of them go out with the same public IP, but each house member has a different device, e.g., D1 => Chrome, D2 => iPad, D3 => Android Firefox. All of them using the same IP but different agent. Thus IP, Date and Agent = unique visitor."
      },
      {
        "user": "Haitianisgood",
        "created_at": "2018-08-22T02:35:19Z",
        "body": "Thank you very much for you reply again!\r\nWhat you explain is very well!It is real fact!"
      }
    ]
  },
  {
    "number": 1199,
    "title": "[One of those] Format Errors - Verify your log/date/time format",
    "created_at": "2018-08-13T19:31:53Z",
    "closed_at": "2018-08-13T20:15:51Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1199",
    "body": "I'm really struggling with log format. I was told the logs were supposed to be w3c but I guess they aren't.\r\n\r\n```\r\n#Fields: date\ttime\tcs-method\tc-ip\tcs-version\tcs-referrer\tcs-user-agent\tfilesize\tcs-bytes\tsc-bytes\ts-ip\ttime-taken\tsc-status\tcs-uri-query\tcs-uri-stem\tx-byte-range\tcomment\r\n```\r\n\r\nex.\r\n\r\n```\r\n2018-07-10\t11:23:12\tGET\tip.ip.ip.ip\thttps\t-\tXtream-Codes IPTV Panel Pro\t4057980\t159\t4058361\tip.ip.ip.ip\t0.033\t200\t-\t/path/to/file.ext\t-\t-\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1199/comments",
    "author": "asciifaceman",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-13T19:40:34Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='%d\\t%t\\t%m\\t%h\\t%^\\t%R\\t%u\\t%b\\t%^\\t%^\\t%v\\t%T\\t%s\\t%^\\t%U\\t%^' --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "asciifaceman",
        "created_at": "2018-08-13T20:11:56Z",
        "body": "Holy cow @allinurl this looks great.\r\n\r\nI may not understand the log format, but it looks phenomenal once right. It isn't relevant right now, but would it be overly annoying if I opened another issue in the future as the log format might change slightly to capture individual values out of one of these field - or should this one remain open.\r\n\r\nI'm sure you get these a lot and they are quite a burden."
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-13T20:15:51Z",
        "body": "Glad that worked :) Feel free to open a new issue if things change. Closing this."
      }
    ]
  },
  {
    "number": 1183,
    "title": "Piping both outputs to goaccess (multiple pipes)",
    "created_at": "2018-07-26T13:48:22Z",
    "closed_at": "2018-07-27T06:53:55Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1183",
    "body": "Hello,\r\n\r\nI'm quite new to linux, and found myself stuck trying to pipe two things at the same time from the access_log into the goaccess report. \r\n\r\nFor example:\r\n\r\nI'm trying to pipe statistics only for certain url, like this:\r\ngrep -h -i 'example.com' /var/log/httpd/access_log | goaccess -a -o /usr/local/goaccess/testreport.html -\r\n\r\nBut I also want to, at the same time pipe the statistics for only previous day.\r\nI've seen in the documentation something like: \r\nsed -n '/'$(date '+%d\\/%b\\/%Y' -d 'yesterday')'/,$ p' /var/log/httpd/access_log | goaccess -a -o /usr/local/goaccess/testreport.html -\r\n\r\nIs there a good way to combine both of these options so I can generate html output for only example.com url and only for previous day?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1183/comments",
    "author": "fractured",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-26T14:06:14Z",
        "body": "Great question, you can add additional pipes, e.g.,\r\n\r\n    sed -n '/'$(date '+%d/%b/%Y' -d 'yesterday')'/,$ p' /var/log/httpd/access_log | grep -h -i 'example.com' | goaccess -a -o /usr/local/goaccess/testreport.html -"
      },
      {
        "user": "fractured",
        "created_at": "2018-07-27T06:53:55Z",
        "body": "Thank you!\r\nThat worked perfectly. I was not aware I could just add additional pipes, while performing them with different commands."
      }
    ]
  },
  {
    "number": 1181,
    "title": "Help with guicorn log format",
    "created_at": "2018-07-21T23:34:09Z",
    "closed_at": "2018-07-22T00:07:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1181",
    "body": "Hey, \r\n\r\nI've been trying to write a custom log-format for the access log. Got something working, but the numbers in the report don't add up, so I'm guessing I've done something wrong. \r\n\r\nA line from the log:\r\n\r\n`\r\n[2018-07-21 20:00:30] [INFO    ] [gunicorn.access:24588] GET /page/1 HTTP/1.1 - 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36' 200 - 0.055556 127.0.0.1\r\n`\r\n\r\nIn addition to chrome I've also used curl.\r\n\r\nWhat I've been running:\r\n\r\n`\r\ncat webui.log | grep gunicorn.access | goaccess --log-format='[%d %t] [%^] [%^] %^ %r %H - %u %s - %L %h' --date-format=%Y-%m-%d --time-format=%H:%M:%S -  -o ~/Desktop/report2.html\r\n`\r\n\r\nI've got 1000 lines for testing with \r\n924 lines of status 200\r\n32 lines of status 500\r\n44 lines of status 404\r\n\r\n76 lines with failed (500 and 404) \r\n\r\nreport2.html \r\nsays 922 good requests, 78 failed. \r\n\r\nAll browsers are listed as Unknown or Other. The 404 section is empty. OS is unknown. \r\n\r\nHTTP status codes: \r\n912 2xx\r\n8 5xx\r\n404 not listed. \r\n\r\nWhat can I do to get all the data parsed?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1181/comments",
    "author": "dave9191",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-21T23:43:04Z",
        "body": "Give this a shot:\r\n\r\n    goaccess access.log --log-format=\"[%d %t] [%^] [%v] %m %U %H %^ '%u' %s %^ %T %h\" --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "dave9191",
        "created_at": "2018-07-22T00:05:18Z",
        "body": "Amazing, work like a charm. Thank you so much. Burnt so much time on this. "
      }
    ]
  },
  {
    "number": 1155,
    "title": "Report not showing CUM T.S., AVG T.S., ",
    "created_at": "2018-06-21T12:54:01Z",
    "closed_at": "2018-06-21T16:28:21Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1155",
    "body": "Hey,\r\n\r\nWhen I open the report it looks good but missing the AVG T.S, etc.  Based on research guessing Im not picking the correct options but struggling a bit. Lookin for some advice. \r\n\r\n**Running:**\r\ngoaccess.exe apache_alc_access.log -a -o report.html\r\n\r\n**Log format:**\r\n\r\n1.1.1.1 2.2.2.2 - [19/Jun/2018:03:11:40 -0300] \"POST /api/pam/login HTTP/1.1\" 200 1107 472104 \"-\" \"Jakarta Commons-HttpClient/3.1\"\r\n\r\n**usr/local/etc/config is:**\r\ntime-format %T\r\n\r\ndate-format %d/%b/%Y\r\n\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1155/comments",
    "author": "Jameswc5",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-21T16:10:32Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "Jameswc5",
        "created_at": "2018-06-21T16:25:08Z",
        "body": "Perfect! I updated the go-access config file to:\r\n%T\r\n%h %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\r\n%d/%b/%Y\r\n\r\n"
      }
    ]
  },
  {
    "number": 1106,
    "title": "No date format was found on your conf file",
    "created_at": "2018-05-03T01:45:52Z",
    "closed_at": "2018-05-08T16:31:52Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1106",
    "body": "`Fatal error has occurred\r\nError occured at: src/parser.c - parse_log - 2705\r\nNo date format was found on your conf file.`\r\n\r\nVersion 1.2\r\nFreeBSD 11.1\r\n\r\nIn `/usr/local/etc/goaccess.conf`:\r\n\r\n`time-format %H:%M:%S` \r\n\r\nin `~/.goaccessrc`:\r\n\r\n`time-format %T`\r\n`date-format %d/%b/%Y`\r\n`log_format %h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n\r\nSo two time-formats provided, yet I'm getting this error.  ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1106/comments",
    "author": "daBee",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-05-03T02:26:41Z",
        "body": "Can you try specifying these command line options in-line? e.g.,\r\n\r\n    goaccess access.log --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nor can you please try:\r\n\r\n    goaccess access.log -p /usr/local/etc/goaccess.conf  --no-global-config\r\n\r\n"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-03T10:58:08Z",
        "body": "OK the first one worked.  Reworked my script, and this is what comes back:\r\n\r\n`testy.sh: line 12: unexpected EOF while looking for matching `''\r\n`testy.sh: line 16: syntax error: unexpected end of file`\r\n\r\nLine 12:\r\n\r\ngoaccess $src --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname\r\n\r\nSorry, can't Markdown that one.  Not sure how you did that.  "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-03T11:49:21Z",
        "body": "Can you please post your whole script?"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-04T12:22:09Z",
        "body": "`clear\r\necho \"RF_scripts/admin/goaccess/testy.sh\"\r\n\r\nsrc='/var/log/nginx/src='/var/log/nginx/access_pass1.log'\r\nfname='/home/adminuser/goaccess/'$(date -v -1d +%Y-%m-%B_access_pass1.html)\r\necho $src\r\necho $fname\r\n\r\ngoaccess $src  --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname`\r\n\r\nWell, markdown didn't work there either.  "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-08T15:51:46Z",
        "body": "Please check your `src` variable, there's some extra quotes in there... e.g.,\r\n\r\n```\r\nclear\r\necho \"RF_scripts/admin/goaccess/testy.sh\"\r\n\r\ntoday=$(date -v -1d +%Y-%m-%B)\r\nsrc=/var/log/nginx/access_pass1.log\r\nfname=/home/adminuser/goaccess/$today_access_pass1.html\r\necho $src\r\necho $fname\r\n\r\ngoaccess $src --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname\r\n```"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-08T16:31:52Z",
        "body": "Everything is fine now.  Not sure what happened.  The log is fine, but my syntax was different than what I posted here.  "
      }
    ]
  },
  {
    "number": 1069,
    "title": "Redirect Analysis",
    "created_at": "2018-04-03T11:36:31Z",
    "closed_at": "2018-04-08T19:14:17Z",
    "labels": [
      "question",
      "log/date/time format",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1069",
    "body": "Hi,\r\n\r\nwe have a vast amount of http redirects and want to analyse which of the configured redirects is still being used.\r\nWe are using httpd and have a custom log format contains:\r\n\r\n- http host of the request\r\n- http uri of the request\r\n- http referer of the request\r\n- http location of the response\r\n\r\nIs it possible to analyse that with GoAccess?\r\n\r\n\r\nThanks,\r\nRobert",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1069/comments",
    "author": "rkno82",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-03T14:55:41Z",
        "body": "It sounds like goaccess should be able to parse your log without issues. It would be great if you can post a few sample lines from your access log to come up with a possible log-format."
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-08T13:40:24Z",
        "body": "Any updates on this?"
      },
      {
        "user": "rkno82",
        "created_at": "2018-04-08T19:14:17Z",
        "body": "Hi Gerardo,\r\n\r\ncurrently I cannot provide logs as we are still planning.\r\nYour answers enabled me to use GoAccess for the reporting.\r\n\r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 1050,
    "title": "Get monthly records with needing to specify day number.",
    "created_at": "2018-03-22T02:15:26Z",
    "closed_at": "2018-04-10T20:45:36Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1050",
    "body": "If we want to parse only a certain time-frame from DATE a to DATE b, we can do:\r\n`# sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a -`\r\n\r\nHow can I do something similar to this, but just get the records for a month?\r\n\r\nExample: everything in `Feb 2010`, so I don't need to calculate whether it is a leap year or how many days are in the month etc etc.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1050/comments",
    "author": "robertmylne",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-22T02:57:34Z",
        "body": "You could simply do:\r\n\r\n    grep 'Mar\\/2018' /var/log/apache2/access.log | goaccess --log-format=COMBINED -\r\n\r\nor you can play also with `date`, e.g. to get only today's entries,\r\n\r\n    grep `date +\"%d/%b\"` /var/log/apache2/access.log | goaccess --log-format=COMBINED -"
      },
      {
        "user": "robertmylne",
        "created_at": "2018-03-22T03:18:30Z",
        "body": "Perfect thank you :)\r\n\r\nCould I please ask if you have an example for getting data for a single hour as well? (in each format)"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-22T12:23:04Z",
        "body": "Glad to hear that worked:)\r\n\r\nYou can do something like (assuming you have a COMBINED log)\r\n\r\n    awk -F'[: ]' '$5~/06/' /var/log/apache2/access.log | goaccess --log-format=COMBINED -\r\n\r\nThat will match the hour field (fifth) to 06 (6am).\r\n\r\nAnd you can always combine multiple pipes, e.g.,\r\n\r\n    grep 'Mar\\/2018' /var/log/apache2/access.log | awk -F'[: ]' '$5~/06/'  | goaccess --log-format=COMBINED -\r\n\r\nThis should get much easier when #117 is implemented :)"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-10T20:45:21Z",
        "body": "> Is there a way to do it for multiple files at the same time, like in cPanel it has 2 files one for ssl and one for non ssl. So if the domain has been changed it is spread over multiple log files.\r\n\r\nFor multiple files you can simply cat those files and then grep as above. e.g.,\r\n\r\n    cat /var/log/apache2/access.log /var/log/apache2/access-ssl.log | grep 'Mar\\/2018' | awk -F'[: ]' '$5~/06/'  | goaccess --log-format=COMBINED -"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-10T20:45:36Z",
        "body": "Closing this. Feel free to reopen if needed."
      }
    ]
  },
  {
    "number": 1047,
    "title": "goaccess not working with cron and not showing full log",
    "created_at": "2018-03-15T21:09:20Z",
    "closed_at": "2018-03-15T22:30:59Z",
    "labels": [
      "question",
      "other",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1047",
    "body": "hello, I can manually run GoAccess just fine with the command\r\n`sudo goaccess -f /var/log/nginx/access.log -a > /var/www/logs/report.html`\r\n\r\nbut when trying to run the same command in cron I just get an empty output. \r\n`PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\n0 * * * * sudo goaccess -f /var/log/nginx/access.log -a > /var/www/logs/report.html`\r\n\r\nit also seems that the log file goes way further back than GoAccess actually shows, I'd really appreciate it if someone could help :)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1047/comments",
    "author": "AndreasJacobsen",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-15T21:13:36Z",
        "body": "You probably want to add it to root's crontab instead.\r\n\r\n    sudo crontab -e\r\n\r\nand then try adding:\r\n\r\n    goaccess /var/log/nginx/access.log -a -o /var/www/logs/report.html\r\n\r\nOtherwise you could write a bash script with goaccess on it and run the script from the cron. Let me know if that solves the issue."
      },
      {
        "user": "AndreasJacobsen",
        "created_at": "2018-03-15T22:08:16Z",
        "body": "that fixed it, thanks!"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-15T22:30:59Z",
        "body": "Glad to hear that :)"
      }
    ]
  },
  {
    "number": 1027,
    "title": "Caddy log format",
    "created_at": "2018-02-24T09:54:49Z",
    "closed_at": "2018-02-24T15:59:20Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1027",
    "body": "Hi all,\r\ngreat project first of all :+1: \r\nFollowing getting started section, I have issues configuring log format for Caddy server.\r\n\r\nDefault format in `access.log`:\r\n```\r\n11.11.11.11 - - [24/Feb/2018:10:47:27 +0100] \"GET / HTTP/2.0\" 304 0\r\n11.11.11.11 - - [24/Feb/2018:10:47:28 +0100] \"GET /assets/css/main.css HTTP/2.0\" 304 0\r\n```\r\nI've masked IPv4 but it could be IPv6 as well.\r\n\r\nThanks for your support and have a nice day\r\nmidzer",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1027/comments",
    "author": "midzer",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-24T14:29:32Z",
        "body": "Looks like COMMON log format. Please try:\r\n\r\n    goaccess access.log --log-format=COMMON"
      },
      {
        "user": "midzer",
        "created_at": "2018-02-24T15:59:20Z",
        "body": "After upgrading to Official GoAccess Debian & Ubuntu repository, it worked flawlessly with COMMON log format. Thanks @allinurl "
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-24T16:28:13Z",
        "body": "Glad that did the job :)"
      }
    ]
  },
  {
    "number": 1017,
    "title": "Nginx Json custom log format",
    "created_at": "2018-02-16T18:10:18Z",
    "closed_at": "2018-02-16T20:22:24Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1017",
    "body": "I am trying to parse our custom nginx log format with the following setup:\r\n```\r\n{\"server_name\": \"$server_name\", \"server_port\": $server_port, \"server_protocol\": \"$server_protocol\", \"http_host\": \"$http_host\", \"remote_addr\": \"$remote_addr\", \"remote_user\": \"$remote_user\", \"time_local\": \"$time_local\", '\r\n                          '\"request\": \"$request\", \"status\": $status, \"body_bytes_sent\": $body_bytes_sent, \"http_referrer\": \"$http_referer\", '\r\n                          '\"http_user_agent\": \"$http_user_agent\", \"request_time\": \"$request_time\", \"http_client_ip\": \"$http_client_ip\", \"http_x_forwarded_for\" : \"$http_x_forwarded_for\"}\r\n```\r\nExample from nginx log:\r\n```\r\n{\"server_name\":` \"domain.*\", \"server_port\": 80, \"server_protocol\": \"HTTP/1.1\", \"http_host\": \"www.example.com\", \"remote_addr\": \"ip_removed\", \"remote_user\": \"-\", \"time_local\": \"15/Feb/2018:14:26:56 -0500\", \"request\": \"GET /example/test/test HTTP/1.1\", \"status\": 200, \"body_bytes_sent\": 21, \"http_referrer\": \"-\", \"http_user_agent\": \"user agent string\", \"request_time\": \"0.015\", \"http_client_ip\": \"-\", \"http_x_forwarded_for\" : \"ip_removed, ip_removed, ip_removed\"}\r\n```\r\n\r\nCurrent formats trying to use:\r\n```\r\ntime-format %H:%M:%S %z\r\ndate-format %d/%b/%Y\r\nlog-format {\"%^\": \"%v\", \"%^\": %^, \"%^\": \"%H\", \"%^\": \"%^\", \"%^\": \"%^\", \"%^\": \"%d:%t\", \"%^\": \"%m %U %H\", \"%^\": %s, \"%^\": %b, \"%^\": \"%R\", \"%^\": \"%u\", \"%^\": \"%T\", \"%^\": \"%h\", \"%^\" : \"%^\"}\r\n```\r\nAny help would be appreciated.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1017/comments",
    "author": "kmentch",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-16T19:10:45Z",
        "body": "Give this a shot:\r\n\r\n    goaccess access.log --log-format='%^ \"%v\"%^:%^:%^:%^: \"%h\"%^: \"%e\"%^: \"%d:%t %^\"%^: \"%r\"%^: %s, %^: %b, %^: \"%R\"%^: \"%u\"%^: \"%T\" %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "kmentch",
        "created_at": "2018-02-16T20:22:24Z",
        "body": "Awesome, that worked perfect!"
      }
    ]
  },
  {
    "number": 996,
    "title": "Help with Wildfly 8 access log format",
    "created_at": "2018-01-18T22:26:28Z",
    "closed_at": "2018-01-19T12:52:41Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/996",
    "body": "Hello,\r\nI have been dancing around getting **widlfly** access logs parsing correctly.\r\nI get \"Nothing valid to process. Verify your date/time/log format.\"\r\n\r\nFormat used in generating the access log \r\n\r\n    %h %l %u %t \"%r\" %s %b %D\r\n\r\ncheers\r\n\r\n```\r\nSample logs\r\n===========\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/css/poster.css HTTP/1.1\" 200 6626 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/js/poster.js HTTP/1.1\" 200 289 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/images/loading.gif HTTP/1.1\" 200 8533 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"POST /remita/onepage/api/v1/payment.spa HTTP/1.1\" 200 51127 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:33 +0100 \"GET /remita/res/app-resources/dest/onepage-bundle.min.css?v=1.1.12 HTTP/1.1\" 200 79956 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:33 +0100 \"GET /remita/res/app-resources/dest/onepage-payment-bundle.min.js?v=1.1.12 HTTP/1.1\" 200 183220 -\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/996/comments",
    "author": "mujibishola",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-18T22:41:32Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %^ %d:%t %^ \"%r\" %s %b %^' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "mujibishola",
        "created_at": "2018-01-19T07:13:56Z",
        "body": "That was quick.\r\nThanks a lot.Works like a charm!."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-19T12:52:41Z",
        "body": "Glad that worked! Closing this."
      }
    ]
  },
  {
    "number": 990,
    "title": "--daemonize option does not work",
    "created_at": "2018-01-12T10:54:07Z",
    "closed_at": "2018-01-12T17:33:01Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/990",
    "body": "centos:\r\n\r\nthis work: \r\n```\r\ngoaccess access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html \r\n```\r\nthis do not work (--daemonize), aslo no out put:\r\n\r\n```\r\ngoaccess access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html --daemonize\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/990/comments",
    "author": "ccqgithub",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-12T15:15:38Z",
        "body": "Please try using full paths in every command line option. e.g.,\r\n\r\n    goaccess /var/log/nginx/access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html --daemonize"
      },
      {
        "user": "ccqgithub",
        "created_at": "2018-01-12T17:33:01Z",
        "body": "it work! thanks!"
      }
    ]
  },
  {
    "number": 954,
    "title": "Unable to open",
    "created_at": "2017-11-26T07:47:10Z",
    "closed_at": "2017-11-26T16:50:05Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/954",
    "body": "Hi,\r\nI've this issue when i try to create a report.\r\n\r\ngoaccess -f /home/websitename/logs/access_log -a -o  --log-format=COMBINED /home/websitename/htdocs/report.html --real-time-html\r\nParsing... [0] [0/s]\r\nGoAccess - version 1.2 - Oct 29 2017 18:03:51\r\nConfig file: /usr/local/etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/parser.c - read_log - 2669\r\nUnable to open the specified log file. No such file or directory\r\n\r\nFew lines of my log\r\nxx.xx.xx.xx - - [27/Sep/2017:11:24:52 +0200] \"GET /robots.txt HTTP/1.1\" 404 208\r\nxx.xx.xx.xx - - [27/Sep/2017:11:24:53 +0200] \"GET / HTTP/1.1\" 302 -\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/954/comments",
    "author": "ikaroweb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-11-26T14:23:42Z",
        "body": "You need to specify the name of the output log after -o, e.g.,\r\n\r\n    goaccess /home/websitename/logs/access_log -a -o /home/websitename/htdocs/report.html --log-format=COMBINED --real-time-html"
      },
      {
        "user": "ikaroweb",
        "created_at": "2017-11-26T15:00:24Z",
        "body": "Parsed 10 lines producing the following errors:\r\n\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\n\r\nFormat Errors - Verify your log/date/time format\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-26T15:55:53Z",
        "body": "Please use the common log format instead of combined.\r\n\r\n    goaccess /home/websitename/logs/access_log -a -o /home/websitename/htdocs/report.html --log-format=COMMON --real-time-html"
      },
      {
        "user": "ikaroweb",
        "created_at": "2017-11-26T16:50:05Z",
        "body": "Fine, now works thanks :)"
      }
    ]
  },
  {
    "number": 888,
    "title": "Custom nginx log-format and GoAccess",
    "created_at": "2017-09-20T13:19:54Z",
    "closed_at": "2017-09-21T13:45:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/888",
    "body": "    log_format main\r\n              '$time_iso8601|$http_x_forwarded_for|$http_host|$request|'\r\n               '$status|$request_time|$body_bytes_sent|$http_referer|'\r\n               '$upstream_addr|$upstream_response_time'\r\n\r\nlog sample\r\n\r\n    2017-09-19T00:00:04+08:00|192.168.0.9|192.168.0.85:8080|GET /UserSystem/ParkingLeaseInformation/v1_2/getParkingLeaseInformationBylicensePlateNumber.do?licensePlateNumber=%E4%BA%ACNE68N8&leaseParkId=476901 HTTP/1.0|200|0.026|686|-|192.168.0.141:8080|0.024\r\n\r\nthank you\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/888/comments",
    "author": "jingting969",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-20T13:51:48Z",
        "body": "I see you have `$http_x_forwarded_for` in your second field, how are your IPs delimited on that field?"
      },
      {
        "user": "jingting969",
        "created_at": "2017-09-21T01:43:22Z",
        "body": "This IP is real client IP, who call the api. Only one for `$http_x_forwarded_for`.\r\n\r\n```\r\n2017-09-19T18:13:24+08:00|192.168.0.21|192.168.0.85:8080|POST /UserSystem/UserPlate/v2/queryUserByUserPlate.do HTTP/1.0|200|0.012|35|-|192.168.0.140:8080|0.010\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.100|192.168.0.85:8080|POST /BackgroundAppExtend/parkingLocation/V1_1/updateParkEmpty.do HTTP/1.0|200|0.004|71|-|192.168.0.11:8080|0.002\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.101|192.168.0.85:8080|POST /carPark_old/gdExportRecognize/saveGdExportRecognize.shtml HTTP/1.0|200|0.027|177|-|192.168.0.100:8080|0.025\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.21|192.168.0.85:8080|POST /UserSystem/UserPlate/v2/queryUserByUserPlate.do HTTP/1.0|200|0.009|35|-|192.168.0.141:8080|0.007\r\n```\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-09-21T03:21:16Z",
        "body": "Assuming there's only one IP for that field, this should do it:\r\n\r\n    goaccess access.log --log-format=\"%dT%t+%^|%h|%v|%r|%s|%T|%b|%R|%^\" --date-format=W3C --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS"
      },
      {
        "user": "jingting969",
        "created_at": "2017-09-21T05:53:06Z",
        "body": "O le, thank you!\r\n\r\nfrom China"
      }
    ]
  },
  {
    "number": 870,
    "title": "static files with paremeters should not be in the \"requested files\"",
    "created_at": "2017-08-28T11:15:10Z",
    "closed_at": "2017-08-30T13:35:51Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/870",
    "body": "```\r\n> goaccess --version\r\nGoAccess - 1.2.\r\n```\r\n```\r\n> lsb_release -a                                                                                                           \r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.3 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```\r\n\r\nfor example, from my site's recent log, I got:\r\n\r\n```\r\n   2 - Requested Files (URLs)                                                                                                                                                               Total: 366/630\r\n\r\n Hits    h% Vis.    v%   Bandwidth Mtd  Proto    Data\r\n ---- ----- ---- ----- ----------- ---- -------- ----\r\n 316  8.86%   11 0.39%     0.0   B HEAD HTTP/1.1 /\r\n 147  4.12%   80 2.81%    1.33 MiB GET  HTTP/1.1 /\r\n 112  3.14%   30 1.05%  339.14 KiB GET  HTTP/1.1 /feed\r\n 64   1.80%   33 1.16%  245.41 KiB GET  HTTP/1.1 /wp-login.php\r\n 63   1.77%   61 2.14%   35.56 KiB GET  HTTP/1.1 /wp-includes/js/comment-reply.min.js?ver=4.8.1\r\n 61   1.71%   59 2.07%   37.18 KiB GET  HTTP/1.1 /wp-content/themes/twentytwelve/js/navigation.js?ver=20140711\r\n 61   1.71%   59 2.07%   43.09 KiB GET  HTTP/1.1 /wp-includes/js/wp-embed.min.js?ver=4.8.1\r\n```\r\n\r\nThose files like `xxx.js?ver=x.y.z` should not be recognized as requested files, they are actually static files too.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/870/comments",
    "author": "chrisyue",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-08-28T12:10:29Z",
        "body": "Please  use `--all-static-files`"
      },
      {
        "user": "chrisyue",
        "created_at": "2017-08-29T02:49:51Z",
        "body": "@allinurl thanks for the reply, the `--all-static-files` solves the problem.\r\n\r\nhowever, I notice that there is some font files are still recognized as \"requested files\"\r\n\r\n```\r\n > 2 - Requested Files (URLs) \r\n...\r\n 6     1.65%    6 2.64%   11.65 KiB GET  HTTP/1.1 /wp-content/plugins/hermit/assets/fonts/hermiticon.eot?\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-29T17:06:25Z",
        "body": "Please use:\r\n\r\n    goaccess access.log --all-static-files --static-file=.eot\r\n\r\nor uncomment your static extensions from your config file.\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-30T13:35:51Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 798,
    "title": "formatting issue with goaccess and customized haproxy",
    "created_at": "2017-06-07T17:19:55Z",
    "closed_at": "2017-06-07T18:49:40Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/798",
    "body": "Format below is customized and I'm getting some issues trying to read it. Any suggestions ?\r\nSample:\r\n\r\n    Apr 16 03:30:01 localhost haproxy[9830]: [9830] [1492313401.408] 6/6/6/0/2/0/0 0/0/0/3/3 ---- 10.64.57.13:47226 10.64.57.11:80 10.67.28.21:9090 xpress - - \"POST /1.0/apps/asdfasdf/inbox/users/SBBSBB/channels/NorthSouth HTTP/1.1\" 200 apisvr:stgapi01 - {8.123.123.123|sng.example.com} - req_size=391 resp_size=341\r\n\r\nRunning with thef following:\r\n\r\n    goaccess --date-format='%d/%b/%Y' --time-format='%H:%M:%S' -q --log-format='%^  %^ %^:%^:%^ %^ %^[%^]: [%^] [%^] %^/%^/%^/%^/%^/%^/%^ %^/%^/%^/%^/%^ %^ %^:%^ %^:%^ %^:%^ %^ %^ %^ \"%r\" %s %^:%^ %^ {%h|%^} %^ %^ %^' -f haproxy.log\r\n\r\nAny help would be greatly appreciated.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/798/comments",
    "author": "tsauce",
    "comments": [
      {
        "user": "tsauce",
        "created_at": "2017-06-07T17:20:24Z",
        "body": "When i run that command i see:\r\n\r\nA valid date is required."
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-07T18:47:15Z",
        "body": "Please try this, it should do the job:\r\n\r\n    goaccess access.log --log-format='%^[ %^[ %^[%x.%^] %^\"%r\" %s %^ %^{%h|%v} %^=%b %^' --date-format=%s --time-format=%s"
      },
      {
        "user": "tsauce",
        "created_at": "2017-06-07T18:49:38Z",
        "body": "Sweet! This works :) Thanks allinurl\r\n"
      }
    ]
  },
  {
    "number": 796,
    "title": "Unable to parse log v0.9.4 - Nothing valid to process.",
    "created_at": "2017-06-05T15:32:24Z",
    "closed_at": "2017-06-05T15:57:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/796",
    "body": "When im trying to parse the file with html file, im getting this error.\r\n\r\n```\r\nParsing... [1,949] [0/s]\r\nGoAccess - version 0.9.4 - Feb  7 2016 10:13:30\r\nConfig file: /etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/goaccess.c - main - 1033\r\nNothing valid to process.\r\n\r\n```\r\n\r\nAny help please ? \r\n\r\n\r\nThank you ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/796/comments",
    "author": "K0ZL1K",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-05T15:34:51Z",
        "body": "Looks like you have an invalid log/date/time format. I'd recommend upgrading to the latest version, v1.2 - it will display the reason why is unable to process the log."
      },
      {
        "user": "K0ZL1K",
        "created_at": "2017-06-05T15:35:56Z",
        "body": "ok, i will try it ! \r\n\r\nWill let you know after that.\r\n\r\nThank you"
      },
      {
        "user": "K0ZL1K",
        "created_at": "2017-06-05T15:55:07Z",
        "body": "Update solved this problem ! \r\n\r\nThank you for hint. \r\n\r\nHave nice day "
      }
    ]
  },
  {
    "number": 776,
    "title": "shell_exec does not work correctly when using \"awk\" before generating report",
    "created_at": "2017-05-18T08:05:09Z",
    "closed_at": "2017-05-19T02:49:11Z",
    "labels": [
      "question",
      "html report",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/776",
    "body": "Hi Support,\r\n\r\nI'm facing the problem with \"awk\" and \"goaccess\"\r\n\r\n**My PHP script**:\r\n```\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html\"\r\n$output = shell_exec($cmd);\r\n```\r\n\r\n**Error Log**:\r\n\r\n> AH01215: awk: cmd. line:1: (FILENAME=/var/logs/httpd/access_log-20170508 FNR=126) fatal: print to \"standard output\" failed (Broken pipe)\r\n\r\nThis issue only happens when output of \"awk\" is input of \"goaccess\", because when I use \r\nanother \"awk\" instead of \"goaccess\", it still works well. Ex:\r\n\r\n    $cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | awk '{gsub(/[\\/]+/,\"/\",$7); print }'\"\r\n\r\nSo, there is any way to fix this issue? Thank you so much.\r\n\r\nLooking forward to knowing your response.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/776/comments",
    "author": "nhochong",
    "comments": [
      {
        "user": "nhochong",
        "created_at": "2017-05-18T10:48:40Z",
        "body": "Hi Support,\r\n\r\nThank you so much for your contribute.\r\n\r\nI have resolved this issue by myself.\r\n\r\nMy solution: write filtered record to a new file before generating the report from the new file.\r\n\r\nScript:\r\n\r\n```\r\n// Filter logs\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* > /var/logs/httpd/filtered_log\"\r\nshell_exec($cmd);\r\n```\r\n\r\n// Generate report\r\n```\r\n$cmd = \"goaccess /var/logs/httpd/filtered_log -a -o /var/www/html/log/generate_report.html\"\r\nshell_exec($cmd);\r\n```\r\n\r\nLet me know if you have a better solution for this :)\r\n\r\nThanks again."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-18T11:44:11Z",
        "body": "Using\r\n\r\n```\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html\"\r\n$output = shell_exec($cmd);\r\n```\r\n\r\nwhat output do you get? Also please try adding a single dash `-` to let goaccess know it should read from a pipe. e.g., \r\n\r\n    $cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html -\""
      },
      {
        "user": "nhochong",
        "created_at": "2017-05-19T02:49:11Z",
        "body": "Hi Support,\r\n\r\nAmazing, your suggestion ( a single dash) works perfectly. But, seems when running command directly on the server, it still work correctly even with or without a single dash. Anyway, it's my mistake and thank you so much for your help :). I very appreciate it. I will close this question now."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-19T12:06:11Z",
        "body": "@nhochong Glad that worked :) Running it through shell_exec and awk probably does not give you a terminal and thus the dash is needed."
      }
    ]
  },
  {
    "number": 762,
    "title": "Custom log format with XFF and tab/space delimited",
    "created_at": "2017-05-07T05:26:26Z",
    "closed_at": "2017-05-07T17:43:34Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/762",
    "body": "Hi @allinurl \r\n\r\nWhat's the right log format for the following access log. I have tried many but still not worked. \r\n\r\n    [03/May/2017:23:58:18 -0400]\t127.0.0.1\t127.0.0.1\t200\t4876\tGET /appQuery?query=monitorServer HTTP/1.0\t273\t-\t-\r\n\r\nFormat:\r\n\r\n    LogFormat in apache config: \"%t   %{X-Forwarded-For}i %a  %>s %D  %r  %B  %{Referer}i %{User-Agent}i\" combined\r\n\r\nGoaccess verion 1.2\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/762/comments",
    "author": "thushan85",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-07T13:22:25Z",
        "body": "It looks like you have a mix of spaces and tabs delimiting the log. I'd recommend using a consistent format. However, this should do it:\r\n\r\n    goaccess access.log --log-format='[%d:%t %^]\\t~h{\\t}\\t%s\\t%D\\t%m %U %H\\t%b\\t%R\\t%u' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "thushan85",
        "created_at": "2017-05-07T16:11:42Z",
        "body": "Thank you very much @allinurl  It worked...!!!!"
      }
    ]
  },
  {
    "number": 729,
    "title": "How to enable real-time stats starting from today",
    "created_at": "2017-04-10T05:38:07Z",
    "closed_at": "2017-04-10T16:16:01Z",
    "labels": [
      "question",
      "documentation",
      "html report",
      "terminal output",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/729",
    "body": "How i can generate live report from today? if i specify `-f access.log`, it will just read from this file, I need something like this:\r\n\r\n    grep \u2014no-filename $(date +\"%d/%b/%Y\") access.log --real-time-html\r\n\r\nis this possible?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/729/comments",
    "author": "askart",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-04-10T15:22:09Z",
        "body": "It is possible if you are using v1.2. You can run something like: \r\n\r\n    tail -f -n +0 /var/log/apache2/access.log | grep `date +\"%d/%b\"` --line-buffered | goaccess --log-format=VCOMBINED -o report.html --real-time-html"
      },
      {
        "user": "askart",
        "created_at": "2017-04-10T16:16:01Z",
        "body": "thx"
      }
    ]
  },
  {
    "number": 703,
    "title": "goaccess v1.2 does not work at all from a crontab",
    "created_at": "2017-03-27T08:12:40Z",
    "closed_at": "2017-03-27T14:21:04Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/703",
    "body": "Hi,\r\n\r\nsince v1.2 my crontab dont work at all .\r\n\r\nThe log of the crontab display the help of goaccess instead of dealing with my log file\r\n\r\nhere is my crontab \r\n\r\n    0 1 \t* * *  root /bin/zcat /var/log/nginx/service.log.*.gz |/usr/bin/goaccess -g -a -o /path/to/report.html\r\n\r\nwhen I run that by hand it's working fine.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/703/comments",
    "author": "foxmask",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-27T12:11:37Z",
        "body": "Please make sure to use a single dash `-`, e.g.,\r\n\r\n    /bin/zcat /var/log/nginx/service.log.*.gz |/usr/bin/goaccess -g -a -o /path/to/report.html -"
      },
      {
        "user": "foxmask",
        "created_at": "2017-03-27T14:21:04Z",
        "body": "Yes ! Thanks :)"
      }
    ]
  },
  {
    "number": 680,
    "title": "Pipe log to GoAccess not working in cronjob without hyphen",
    "created_at": "2017-03-07T15:24:19Z",
    "closed_at": "2017-03-07T15:51:38Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/680",
    "body": "**In Cronjob:**\r\nIn version 1.1.1 the following call worked in cronjob:\r\n`zgrep -h '\\[07/Mar/2017' /var/log/apache2/access.log.gz |  goaccess --no-progress -q > /path/to/file.html`\r\n\r\nIn version 1.2 this call works only when I insert a hyphen to goaccess:\r\n`zgrep -h '\\[07/Mar/2017' /var/log/apache2/access.log.gz |  goaccess - --no-progress -q > /path/to/file.html`\r\nIf the hyphen is not used, I get the help output (goaccess without args)\r\n\r\n**Terminal**\r\nIn bash terminal both variants work well\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/680/comments",
    "author": "spy1986",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-07T15:30:57Z",
        "body": "Thanks for reporting this. The hyphen is now required in v1.2 if used from the cron. This fixes #647."
      },
      {
        "user": "spy1986",
        "created_at": "2017-03-07T15:46:14Z",
        "body": "Ok, Thanks"
      },
      {
        "user": "TCB13",
        "created_at": "2017-04-01T17:49:59Z",
        "body": "~@allinurl is this supposed to happen even indirectly? I'm using cron to run a bash script that will run `goaccess` and I have this issue... See #711. Thank you!~\r\n\r\n**Nevermind, exactly my issue at #647 and already answered!**"
      }
    ]
  },
  {
    "number": 551,
    "title": "goacces cron job not working",
    "created_at": "2016-10-20T17:14:43Z",
    "closed_at": "2016-10-24T13:42:01Z",
    "labels": [
      "question",
      "html report",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/551",
    "body": "Hello! If i run sh manually, output files was created and updated, but from cron job is not. How cat i fix it?\n\nmy `crontab`:\n\n```\n*/5 * * * * /home/monitoring/go_update.sh >> /home/monitoring/crontab.log\n```\n\nmy `go_update.sh`:\n\n```\n#!/bin/sh\necho \"start\"\nnow=$(date +\"%T\")\necho \"Current time : $now\"\nzcat /home/monitoring/logs-store/localway-prod-portal/localway-prod-portal.*.gz | goaccess -p /home/monitoring/.goaccessrc -a\necho \"finish\"\n```\n\n`cat crontab.log`:\n\n```\nstart\nCurrent time : 20:05:01\nfinish\n```\n\npart of `~/.goaccessrc`:\n\n```\noutput-format /home/monitoring/goaccess/index.html\noutput-format /home/monitoring/goaccess/status.json\n```\n\nThanx a lot!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/551/comments",
    "author": "etomarat",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-20T17:24:00Z",
        "body": "Can you please try using absolute paths, e.g. (assuming goaccess is under: `/usr/bin`):\n\n```\nzcat /home/monitoring/logs-store/localway-prod-portal/localway-prod-portal.*.gz | /usr/bin/goaccess -p /home/monitoring/.goaccessrc -a\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-20T17:25:05Z",
        "body": "Also, make sure the script is executable. \n\n```\nchmod +x /home/monitoring/go_update.sh\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-24T13:42:01Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      },
      {
        "user": "etomarat",
        "created_at": "2016-10-24T14:02:08Z",
        "body": "Thanx! Its work!\n"
      }
    ]
  },
  {
    "number": 533,
    "title": "Puzzled with custom nginx format",
    "created_at": "2016-10-05T16:24:30Z",
    "closed_at": "2016-10-06T13:29:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/533",
    "body": "Hi, I am totally puzzled why I always get \"no valid hits found\"\n\n```\n62.XXX.XXX.XXX - nginxCookie_www=VMgzClZLGttaiR6FAw2BAg==; nginxCookie_session=5deaf50a604c4eb3a651989508a295767d6e5f4a - 05/Oct/2016:06:53:12 +0200 - 200 - \"POST /api/FOO HTTP/1.1\" - \"-\" - \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\" - \"-\"\n```\n\nand as format:\n\n```\n | Log Format - [c] to add/edit format         \n | %h - %^ - %d:%t - %s - %r - %^ - \\\"%u\\\" - %^\n | Date Format - [d] to add/edit format        \n | %d/%b/%Y                                                                              \n | Time Format - [t] to add/edit format        \n | %H:%M:%S %z                                 \n```\n\nI checked and retried and tried and rechecked a lot of variantions on the format strings. Any advice greatly appreciated!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/533/comments",
    "author": "huehnerhose",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-05T16:33:42Z",
        "body": "Can I ask you which field is the size of the response (bytes)? or if you can post your web server's log format would be great. Thanks\n"
      },
      {
        "user": "huehnerhose",
        "created_at": "2016-10-06T06:09:49Z",
        "body": "I am afraid I don't have this field. Is it essential for goaccess to analyze the logs? I didn't see it in the documentation as required. (No doubt it would be a \"nice\" bit of information...)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-06T11:53:57Z",
        "body": "It's not required, but handy :) This should work (feel free to replace `\"%R\"` with `%^` if it's not the referrer):\n\n```\n%h %^ %^ %^ %^ %d:%t %^ %^ %s %^ \"%r\" %^ \"%R\" %^ \"%u\"\n%d/%b/%Y\n%H:%M:%S\n```\n"
      },
      {
        "user": "huehnerhose",
        "created_at": "2016-10-06T12:48:32Z",
        "body": "ah great, this works! \nSo I'll take dashes has to be treated as \"fields\" from that. \n\nThanks!\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-06T13:29:23Z",
        "body": "Glad that worked \u2014 That's right, you could consider dashes as fields. However, it is possible to do some skipping like moving to the next char such as:\n\n```\n%h %^; %^ %^ %d:%t %^ %^ %s %^ \"%r\" %^ \"%R\" %^ \"%u\"\n```\n\nThat assumes your log format has always a `;` at that position.\n"
      }
    ]
  },
  {
    "number": 493,
    "title": "Invalid line in JSON output",
    "created_at": "2016-08-15T11:40:19Z",
    "closed_at": "2016-08-15T23:36:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/493",
    "body": "my JSON outputs have \"Parsing... [102] [0/s]\" in the beginning of the file. Is there anyway to get rid of that.\n(Server Ubuntu 15.04/NGINX)\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/493/comments",
    "author": "mihitha",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-08-15T15:03:39Z",
        "body": "Y may use `--no-progress`. You can find the details on the man page.\n"
      },
      {
        "user": "mihitha",
        "created_at": "2016-08-15T23:36:44Z",
        "body": "It Worked. Thanks a lot for your quick response.\n"
      }
    ]
  },
  {
    "number": 479,
    "title": "What's the meaning of \"Processed Time\"?",
    "created_at": "2016-07-26T10:11:31Z",
    "closed_at": "2016-07-27T01:19:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/479",
    "body": "Hi,\n   about the html file,what's the meaning of \"Processed Time\"?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/479/comments",
    "author": "weiboyiyou",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-07-26T12:19:56Z",
        "body": "The amount of time it took to parse and process the log.\n"
      },
      {
        "user": "weiboyiyou",
        "created_at": "2016-07-27T01:19:42Z",
        "body": "ok,thank you so much.\n"
      }
    ]
  },
  {
    "number": 470,
    "title": "Error parsing log (wrong hostname)",
    "created_at": "2016-07-12T13:21:26Z",
    "closed_at": "2016-07-12T15:02:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/470",
    "body": "Hello. \nI have a problem with the goaccess. While parsing, I get the message:\n\n```\nGoAccess - version 1.0.2 - Jul 11 2016 10:36:18\nConfig file: /usr/local/etc/goaccess.conf\n\nFatal error has occurred\nError occured at: src/goaccess.c - main - 1230\nNothing valid to process. Verify your date/time/log format.\n```\n\nI determined that the problem is this entry\n`ec2-54-206-80-6.ap-southeast-2.compute.amazonaws.com - - [11/Jul/2016:20:36:22 +0200] \"GET / HTTP/1.1\" 200 2282 \"\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\"`\n\nWhen `ec2-54-206-80-6.ap-southeast-2.compute.amazonaws.com` change to a different host address GoAccess working properly.\nAny ideas?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/470/comments",
    "author": "pawelrosada",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-07-12T14:02:28Z",
        "body": "Hello,\n\nGoAccess requires a valid IPv4/6 for the `%h` specifier. If you are resolving the ip upon logging the request, then you would need to leave the IP as it is and set goaccess to resolve it instead.\n"
      },
      {
        "user": "pawelrosada",
        "created_at": "2016-07-12T14:17:07Z",
        "body": "I do not understand what I must do to parse this log :/ Such options should I use ?\n-a? Or I think bad?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-07-12T14:20:54Z",
        "body": "If your log doesn't have a valid IPv4/6, then you can't parse it with goaccess. \n\nIf you want to parse it with goaccess, you will need to disable hostname lookups in your web server config options (assuming that's the case).\n"
      },
      {
        "user": "pawelrosada",
        "created_at": "2016-07-12T15:02:20Z",
        "body": "Ok, now I understand. Thanks for help ;)\n"
      },
      {
        "user": "cmaas",
        "created_at": "2017-05-30T07:44:52Z",
        "body": "@allinurl\r\n> If you want to parse it with goaccess, you will need to disable hostname lookups in your web server config options (assuming that's the case).\r\n\r\nThat is extremely unfortunate for German users. By privacy law, most German hosters disable logging of the IP address and just log a hostname given by the ISP, for example `p5XDA2268.dip0.t-ipconnect.de`. It might be silly, but a German webhoster is basically not allowed to log the actual IP address of website visitors.\r\n\r\nAny chance to make GoAccess' `%h` match a non-IP hostname in the future?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-30T11:40:33Z",
        "body": "@cmaas Interesting. Before I make some changes, do you know what's displayed in the log when unable to resolve the IP? I'm curious about this so goaccess can associate somehow the client with a date/time and the user agent."
      },
      {
        "user": "cmaas",
        "created_at": "2017-05-30T11:55:23Z",
        "body": "@allinurl From what I see in my logs: It seems to default to IPv4 addresses apparently, if there's no hostname. I also looked into this a bit more. It's not at easy as I thought it was. Logging the hostname instead of the IP is one way to semi-anonymize visitors. But apparently, many services just set parts of the IP to 0, like so `46.124.0.0`. This makes identification of unique visitors probably difficult or almost impossible.\r\n\r\nThe question would be: Say, there's only a hostname, why does GoAccess require an actual IP address instead of just a string?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-04T17:40:07Z",
        "body": "Was looking at this, and I think it would be safe to have some option such as `--permissive-clients`which would allow a string as client instead of a valid IP. \r\n\r\nThere's no reason as to why goaccess uses an IP other than to identify unique visitors. Though, if we add this `--permissive-clients` option, then it's possible that some of the unique counts won't be as accurate since two clients can be on the same range, e.g., 46.124.0.0 = 46.124.12.12, 46.124.10.3."
      },
      {
        "user": "maltris",
        "created_at": "2024-05-15T17:47:35Z",
        "body": "@allinurl I was searching to parse logs that have no IP information at all. And while there could be a workaround to just add any valid ip to the logs, that feature would be actually really cool to have. "
      },
      {
        "user": "allinurl",
        "created_at": "2024-05-15T23:12:50Z",
        "body": "@maltris, could you please share what your log looks like? I'm curious to see."
      }
    ]
  },
  {
    "number": 382,
    "title": "Avoiding special run to initialize on-disk store?",
    "created_at": "2016-03-01T15:32:56Z",
    "closed_at": "2016-03-07T14:35:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/382",
    "body": "If I understand correctly, right now this is needed for incremental parsing:\n\n```\ngoaccess -f first.log --keep-db-files\n```\n\nFollowed by:\n\n```\ngoaccess -f next.log --load-from-disk --keep-db-files\ngoaccess -f another.log --load-from-disk --keep-db-files\n```\n\nIs there a way to avoid the first invocation, and just have the store initialized if it doesn't exist already?\n\nIf not, is this a reasonable way of initializing the store?\n\n```\ngoaccess -f /dev/null --db-path=/path/to/db  --keep-db-files\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/382/comments",
    "author": "bard",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-03-01T16:00:10Z",
        "body": "I'm not sure I follow the use case, however, you should be able to do the following against the `first.log`\n\n```\ngoaccess -f first.log --load-from-disk --keep-db-files\n```\n\nIf you just want to initialize the store, you could run goaccess as you posted above.\n\n```\ngoaccess -f /dev/null --keep-db-files\n```\n\nJust make sure you have a valid date/time/format in your config file so it won't complain about it.\n"
      },
      {
        "user": "bard",
        "created_at": "2016-03-03T19:57:05Z",
        "body": "> I'm not sure I follow the use case, however, you should be able to do the following against the first.log\n> \n> ```\n> goaccess -f first.log --load-from-disk --keep-db-files\n> ```\n\nWith `first.log` I meant to say that this would be the first time that goaccess is run, so db files wouldn't exist, and if I understand the man page correctly, they need to exist before goaccess can be invoked with `--load-from-disk`, no?\n\n```\n       --load-from-disk\n              Load previously stored data from disk. Database files need to exist. See keep-db-files.\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-03T20:03:56Z",
        "body": "You can run goaccess for the first with `--load-from-disk`. e.g.,\n\n```\ngoaccess -f first.log --load-from-disk --keep-db-files\n```\n\nIn fact, you can run goaccess as:\n\n```\ngoaccess -f first.log\n```\n\nIt will create the database files even if they don't exist. Passing `--load-from-disk` for the first time, it's like a no-op.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-07T14:35:15Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      },
      {
        "user": "bard",
        "created_at": "2016-03-09T17:01:18Z",
        "body": "Thank you! It works as you described. Perhaps it's worth checking that man page entry for ambiguity. Then again, if I'm the only one who's misunderstood, PEBKAC. :)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-10T00:20:23Z",
        "body": "Thanks. I have updated the man page and the site as well.\n"
      }
    ]
  },
  {
    "number": 309,
    "title": "Configuring and compiling GoAccess on FreeBSD 10.1",
    "created_at": "2015-10-04T13:00:23Z",
    "closed_at": "2015-10-04T19:40:34Z",
    "labels": [
      "question",
      "build"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/309",
    "body": "Hello guys. I am running Freebsd 10.1. I am trying to compile Goaccess with geoIp support.\nWhen I do the configure with geoIP I get:\n\n```\nchecking for GeoIP_new in -lGeoIP... no\nconfigure: error: *** Missing development files for the GeoIP library\n```\n\nI have the geoip port installed (net/GeoIP)\n\n```\nroot@e5-2620v3x2:/tmp/goaccess-0.9.4 # /usr/local/bin/geoiplookup -f /usr/local/share/GeoIP/GeoLiteCity.dat 8.8.8.8\nGeoIP City Edition, Rev 1: US, CA, California, Mountain View, 94040, 37.386002, -122.083801, 807, 650\n```\n\nCan someone please tell me how to make it work with geoip ?\nIf I install the goaccess port from freebsd it's version 0.8.5 and it doesn't have geoip support\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/309/comments",
    "author": "dorin21id",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-04T14:58:34Z",
        "body": "Try the following:\n\n```\n# pkg install GeoIP glib pkgconf\n# /usr/local/bin/geoipupdate.sh\n# setenv LDFLAGS -L/usr/local/lib\n# ./configure --enable-geoip\n# make\n# make install\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:15:27Z",
        "body": "Just configured and compiled in FreeBSD 10.1 and the steps above worked fine.\n"
      },
      {
        "user": "dorin21id",
        "created_at": "2015-10-04T19:30:10Z",
        "body": "Damn it. Still the same :( \n\n```\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# /usr/local/bin/geoipupdate.sh\nFetching GeoIP.dat and GeoIPv6.dat...\n/usr/local/share/GeoIP/GeoIPupdate.4KwoRT/GeoI100% of  441 kB  840 kBps 00m01s\n/usr/local/share/GeoIP/GeoIPupdate.pPQiNn/GeoI100% of  712 kB  836 kBps 00m01s\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# set env LDFLAGS -L/usr/local/lib\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# ./configure --enable-geoip\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes \nchecking for a thread-safe mkdir -p... ./install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... nawk\nchecking whether make sets $(MAKE)... yes \nchecking for gcc... no\nchecking for cc... cc\nchecking whether the C compiler works... yes \nchecking for C compiler default output file name... a.out\nchecking for suffix of executables...\nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes \nchecking whether cc accepts -g... yes \nchecking for cc option to accept ISO C89... none needed\nchecking for style of include used by make... GNU \nchecking dependency style of cc... gcc3\nchecking whether cc understands -c and -o together... yes \nchecking for pthread_create in -lpthread... yes \nchecking build system type... x86_64-unknown-freebsd10.1\nchecking host system type... x86_64-unknown-freebsd10.1\nchecking whether to build with rdynamic for GNU ld... yes \nchecking for GeoIP_new in -lGeoIP... no\nconfigure: error: *** Missing development files for the GeoIP library\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]#\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:33:33Z",
        "body": "Make sure is `setenv LDFLAGS -L/usr/local/lib` and not `set env...`\n"
      },
      {
        "user": "dorin21id",
        "created_at": "2015-10-04T19:38:03Z",
        "body": "It is working now. THANK YOU VERY VERY MUCH !\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:40:34Z",
        "body": "Glad that worked :)\n"
      }
    ]
  },
  {
    "number": 265,
    "title": "Separate iOS from Macintosh devices",
    "created_at": "2015-07-02T11:22:35Z",
    "closed_at": "2015-07-06T11:02:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/265",
    "body": "I know that they're both Apple devices, but in my opinion it makes little sense to group them as one big category. Android and Linux are separate, so it would seem reasonable to not include Apple touch devices in the Mac group.\n\nIt's less about the rendering capabilities of the devices (which would be almost identical) but about the desktop / mobile segmentation.\n\nMaybe instead add a section with a desktop / mobile ratio?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/265/comments",
    "author": "Csardelacal",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-07-02T11:58:47Z",
        "body": "What version are you using? The two were split in v0.9.1\n"
      },
      {
        "user": "Csardelacal",
        "created_at": "2015-07-06T11:02:54Z",
        "body": "Yeah, seems the machine ran automatic updates during the weekend and the issue is gone. I am running 0.9.1 right now and it seems to work perfectly fine.\n\nThank you very much again for the great job you're doing with goaccess, and I'll stay on the hunt for new bugs.\n"
      }
    ]
  },
  {
    "number": 208,
    "title": "Log format config help",
    "created_at": "2015-01-21T00:06:36Z",
    "closed_at": "2015-01-21T04:13:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/208",
    "body": "I'm just playing with goaccess for a simple home server that I have, but I can't seem to get the log format configuration to recognize my log.  I'm using gunicorn behind an nginx proxy, which forwards the real IP ahead.  A sample entry in my log (the first IP is always 127.0.0.1 as that is nginx forwarding the request to gunicorn):\n\ngunicorn log format: \n\n```\n%(h)s %(l)s %(u)s %(t)s \u201c%(r)s\u201d %(s)s %(b)s \u201c%(f)s\u201d \u201c%(a)s\u201d \"%({X-Real-IP}i)s\"\n```\n\n```\n127.0.0.1 - - [16/Jan/2015:14:30:15 -0800] \"GET /bars/ HTTP/1.0\" 200 2660 \"-\" \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36\" \"192.168.1.100\"\n```\n\n> %^ %^ %^ [%d:%^] \"%r\" %s %b %^ \"%u\" \"%h\"\n\nThat is the formatting I came up with, but it goaccess can't find any entries.  Any ideas?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/208/comments",
    "author": "bwainstock",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-01-21T00:45:32Z",
        "body": "Barry, the following should do it:\n\n```\nlog-format %^[%d:%^] \"%r\" %s %b \"%R\" \"%u\" \"%h\"\ndate-format %d/%b/%Y\n```\n\nLet me know how that goes. Thanks\n"
      },
      {
        "user": "bwainstock",
        "created_at": "2015-01-21T01:18:12Z",
        "body": "Thanks for the quick reply.\n\n```\nNo valid hits.\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-01-21T01:21:58Z",
        "body": "It does parse the sample log you posted above. Are you using v0.8.5? This is how I ran it:\n\n```\ngoaccess -f log --log-format='%^[%d:%^] \"%r\" %s %b \"%R\" \"%u\" \"%h\"' --date-format='%d/%b/%Y'\n```\n"
      },
      {
        "user": "bwainstock",
        "created_at": "2015-01-21T04:13:45Z",
        "body": "Damn!  There were a few lines at the beginning of my log that didn't fit the format.  Taking them out of the file fixed the \"No valid hits\" issue.  Everything works now.  Thanks.\n"
      }
    ]
  },
  {
    "number": 5,
    "title": "can't parse custom logs",
    "created_at": "2013-08-05T21:06:50Z",
    "closed_at": "2013-08-07T13:22:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/5",
    "body": "I'm trying to get goaccess working. Already take some time on docs and examples but without success.\n\nBasically i have log lines like:\n\n```\n10031488_71334 xpto.domain.com 88.103.999.999 - - [16/Jun/2013:15:03:26 +0000] \"GET / HTTP/1.1\" 500 5624 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" -\n```\n\nand already compile goaccess and create a conf file:\n\n```\ncat ~/.goaccessrc\ndate_format %d/%b/%Y:%T %z\nlog_format %^ %^ %h - - [$d] \"%r\" %s %b \"%R\" \"%u\" %^\n```\n\nThen i got:\n\n```\n./goaccess -a -f miniout.log\nGoAccess - version 0.6 - Aug  5 2013 20:20:16\nAn error has occurred\nError occured at: goaccess.c - render_screens - 358\nMessage: Nothing valid to process.\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/5/comments",
    "author": "abgit",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2013-08-05T21:31:03Z",
        "body": "The following should do it. Just make sure you have a valid IP. (88.103.999.999 won't let you parse the log)\n\nlog_format %^ %^ %h %^[%d:%^] \"%r\" %s %b \"%R\" \"%u\"\ndate_format %d/%b/%Y\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-05T21:44:25Z",
        "body": "Now it works as expected. Thanks.\n- about valid ip: 88.103.999.999 was just a obuscation. valid ip's are always used;\n- btw, if ip is not valid, goaccess aborts parsing or just ignores log entry with invalid ip?\n- just an idea that can be usefull to others: this log format is the one used by rackspace. because you have amazon-couldfront log format option in log format configuration wizard, maybe you could add this rackspace-akamai format too :)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2013-08-05T21:48:09Z",
        "body": "@abgit goaccess will ignore the entry and take it as an invalid request. \nI can add the Rackspace format too, do you know if they have some documentation about this that I can refer to?\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-06T08:59:44Z",
        "body": "I don't find docs about log format but i know that rackspace has 2 log formats because i'm using their services from some time.\n- rackspace loadbalancers log:\n  10031488_71334 xpto.domain.com 88.103.999.999 - - [16/Jun/2013:15:03:26 +0000] \"GET / HTTP/1.1\" 500 5624 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" 10.201.201.5:80\n- rackspace cdn log:\n  5.3.56.7 - - [18/Jun/2013:19:50:09 +0000] \"GET /1123123a07d61231233a-8d685f5f11665a311231230a1cc93333.r66.cf6.rackcdn.com/ HTTP/1.1\" 404 363 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" \"-\"\n\nBalancer log format preprends balancerid and domain and at end adds internal httpserver node ip and port, rackspace cdn sounds like standard format.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2013-08-07T13:16:45Z",
        "body": "Seems like the CDN can be parsed using the NCSA Combined Log Format. I'll add the Load Balancer format to the predefined options.\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-07T13:22:10Z",
        "body": "that's nice. rackspace loadbalancer format can be useful to others :)\nthanks\n"
      }
    ]
  }
]