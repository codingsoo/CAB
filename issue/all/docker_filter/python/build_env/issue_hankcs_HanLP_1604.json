{
  "number": 1604,
  "title": "\u81ea\u5b9a\u4e49\u8bcd\u5178\u5bf9KBeamArcEagerDependencyParser\u65e0\u6548",
  "created_at": "2021-01-20T08:48:19Z",
  "closed_at": "2021-01-20T15:42:36Z",
  "labels": [
    "question"
  ],
  "url": "https://github.com/hankcs/HanLP/issues/1604",
  "body": "<!--\r\n\u63d0\u95ee\u8bf7\u4e0a\u8bba\u575b\uff0c\u4e0d\u8981\u53d1\u8fd9\u91cc\uff01\r\n\u63d0\u95ee\u8bf7\u4e0a\u8bba\u575b\uff0c\u4e0d\u8981\u53d1\u8fd9\u91cc\uff01\r\n\u63d0\u95ee\u8bf7\u4e0a\u8bba\u575b\uff0c\u4e0d\u8981\u53d1\u8fd9\u91cc\uff01\r\n\r\n\u4ee5\u4e0b\u5fc5\u586b\uff0c\u5426\u5219\u6055\u4e0d\u53d7\u7406\u3002\r\n-->\r\n\r\n**Describe the bug**\r\n\u6dfb\u52a0\u65b0\u8bcd\u8fdb\u5165\u81ea\u5b9a\u4e49\u8bcd\u5178\u540e\uff0cKBeamArcEagerDependencyParser\u4ecd\u7136\u65e0\u6cd5\u5bf9\u8be5\u8bcd\u8fdb\u884c\u6b63\u786e\u5206\u8bcd\u3002\r\n\r\n**Code to reproduce the issue**\r\n\u6dfb\u52a0\"\u7533\u8bf7\u7b14 n 100\"\u8fdb\u5165\u81ea\u5b9a\u4e49\u8bcd\u5178\r\n```scala\r\nval parser = new KBeamArcEagerDependencyParser()\r\nparser.parse(\"\u53c8\u6709\u65b0\u7684\u7533\u8bf7\u7b14\u53ef\u4ee5\u62ff\u4e86\")\r\n```\r\n```\r\n1      \u53c8      \u53c8      A       AD      _       2       advmod  _       _\r\n2       \u6709      \u6709      V       VE      _       0       ROOT    _       _\r\n3       \u65b0      \u65b0      V       VA      _       6       rcmod   _       _\r\n4       \u7684      \u7684      D       DEC     _       3       cpm     _       _\r\n5       \u7533\u8bf7    \u7533\u8bf7    N       NN      _       6       nn      _       _\r\n6       \u7b14      \u7b14      N       NN      _       8       nsubj   _       _\r\n7       \u53ef\u4ee5    \u53ef\u4ee5    V       VV      _       8       mmod    _       _\r\n8       \u62ff      \u62ff      V       VV      _       2       dep     _       _\r\n9       \u4e86      \u4e86      S       SP      _       2       dep     _       _\r\n```\r\n\r\n**Describe the current behavior**\r\n\u5373\u4f7f\u6dfb\u52a0\u4e86\u65b0\u8bcd\uff0c\u4ecd\u7136\u65e0\u6cd5\u5bf9\u65b0\u8bcd\u8fdb\u884c\u6b63\u786e\u5206\u8bcd\uff0c\u800c\u53e6\u4e00\u4e2a\u63a5\u53e3HanLP.parseDependency\u53ef\u4ee5\u6839\u636e\u65b0\u52a0\u5165\u7684\u8bcd\u8fdb\u884c\u6b63\u786e\u5206\u8bcd\r\n\r\n**Expected behavior**\r\n\u671f\u5f85\u80fd\u901a\u8fc7\u52a0\u5165\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0cKBeamArcEagerDependencyParser\u80fd\u591f\u5148\u6b63\u786e\u5206\u8bcd\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u8fd4\u56de\u6b63\u786e\u7ed3\u679c\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):Linux\r\n- Scala version:2.12.2\r\n- HanLP version:1.7.8\r\n\r\n* [x] I've completed this form and searched the web for solutions.\r\n<!-- \u53d1\u8868\u524d\u5148\u641c\u7d22\uff0c\u6b64\u5904\u4e00\u5b9a\u8981\u52fe\u9009\uff01 -->\r\n<!-- \u53d1\u8868\u524d\u5148\u641c\u7d22\uff0c\u6b64\u5904\u4e00\u5b9a\u8981\u52fe\u9009\uff01 -->\r\n<!-- \u53d1\u8868\u524d\u5148\u641c\u7d22\uff0c\u6b64\u5904\u4e00\u5b9a\u8981\u52fe\u9009\uff01 -->",
  "comments_url": "https://api.github.com/repos/hankcs/HanLP/issues/1604/comments",
  "author": "jimmy-walker",
  "comments": [
    {
      "user": "hankcs",
      "created_at": "2021-01-20T15:42:36Z",
      "body": "Hi\uff0cKBeamArcEagerDependencyParser\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\u662f\u9ed8\u8ba4\u5173\u95ed\u7684\uff0c\u4e3a\u4e86\u5728CTB\u4e0a\u9762\u8dd1\u5206\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u5f00\u542f\uff1a\r\n\r\n```java\r\n1\t\u53c8\t\u53c8\tA\tAD\t_\t2\tadvmod\t_\t_\r\n2\t\u6709\t\u6709\tV\tVE\t_\t0\tROOT\t_\t_\r\n3\t\u65b0\t\u65b0\tV\tVA\t_\t5\trcmod\t_\t_\r\n4\t\u7684\t\u7684\tD\tDEC\t_\t3\tcpm\t_\t_\r\n5\t\u7533\u8bf7\u7b14\t\u7533\u8bf7\u7b14\tn\tnz\t_\t7\tnsubj\t_\t_\r\n6\t\u53ef\u4ee5\t\u53ef\u4ee5\tV\tVV\t_\t7\tmmod\t_\t_\r\n7\t\u62ff\t\u62ff\tV\tVV\t_\t2\tdep\t_\t_\r\n8\t\u4e86\t\u4e86\tA\tAS\t_\t7\tasp\t_\t_\r\n9\t\u3002\t\u3002\tP\tPU\t_\t2\tpunct\t_\t_\r\n```"
    },
    {
      "user": "jimmy-walker",
      "created_at": "2021-01-21T02:49:53Z",
      "body": "> Hi\uff0cKBeamArcEagerDependencyParser\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\u662f\u9ed8\u8ba4\u5173\u95ed\u7684\uff0c\u4e3a\u4e86\u5728CTB\u4e0a\u9762\u8dd1\u5206\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u5f00\u542f\uff1a\r\n> \r\n> ```java\r\n> 1\t\u53c8\t\u53c8\tA\tAD\t_\t2\tadvmod\t_\t_\r\n> 2\t\u6709\t\u6709\tV\tVE\t_\t0\tROOT\t_\t_\r\n> 3\t\u65b0\t\u65b0\tV\tVA\t_\t5\trcmod\t_\t_\r\n> 4\t\u7684\t\u7684\tD\tDEC\t_\t3\tcpm\t_\t_\r\n> 5\t\u7533\u8bf7\u7b14\t\u7533\u8bf7\u7b14\tn\tnz\t_\t7\tnsubj\t_\t_\r\n> 6\t\u53ef\u4ee5\t\u53ef\u4ee5\tV\tVV\t_\t7\tmmod\t_\t_\r\n> 7\t\u62ff\t\u62ff\tV\tVV\t_\t2\tdep\t_\t_\r\n> 8\t\u4e86\t\u4e86\tA\tAS\t_\t7\tasp\t_\t_\r\n> 9\t\u3002\t\u3002\tP\tPU\t_\t2\tpunct\t_\t_\r\n> ```\r\n\r\n@hankcs \u611f\u8c22\u60a8\u7684\u56de\u590d\u3002\u6211\u6309\u7167\u65b9\u6cd5\u5f00\u542f\u4e86\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u4f46\u53d1\u73b0\u6709\u4e00\u4e2a\u8bcd\u603b\u662f\u88ab\u5207\u9519\u3002\u8bf7\u95ee\u8fd9\u6709\u4ec0\u4e48\u529e\u6cd5\u5417\uff1f\r\n\u6211\u8bbe\u7f6e\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u4ee3\u66ff\u4e86\u9ed8\u8ba4\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\uff1a\r\n```\r\n\u4ee3\u8868\u4f5c NN 1000\r\n\u00b7 PU 1000\r\n```\r\n\u4f46\u662f\u5728KBeamArcEagerDependencyParser\u4e0b\uff0c\u59cb\u7ec8\u88ab\u5207\u5206\u4e3a\"\u4f5c\u00b7 \"\uff0c\u65e0\u8bba\u6211\u5728\u81ea\u5b9a\u4e49\u8bcd\u5178\u4e2d\u8bbe\u7f6e\u591a\u5927\u7684\u8bcd\u9891\uff0c\u90fd\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8bf7\u95ee\u8fd9\u4e2a\u5e94\u8be5\u5982\u4f55\u6539\u6b63\u5462\uff1f\r\n\r\n```java\r\n        IDependencyParser parser = new KBeamArcEagerDependencyParser();\r\n        System.out.printf(parser.parse(\"\u8fd9\u662f\u6211\u7684\u4ee3\u8868\u4f5c\").toString());\r\n        System.out.printf(parser.parse(\"\u8fd9\u662f\u6211\u7684\u4ee3\u8868\u4f5c\u00b7\").toString());\r\n```\r\n\r\n```\r\n1   \u8fd9   \u8fd9   P   PN  _   2   top _   _\r\n2   \u662f   \u662f   V   VC  _   0   ROOT    _   _\r\n3   \u6211   \u6211   P   PN  _   5   assmod  _   _\r\n4   \u7684   \u7684   D   DEG _   3   assm    _   _\r\n5   \u4ee3\u8868\u4f5c \u4ee3\u8868\u4f5c N   NN  _   2   attr    _   _\r\n\r\n1   \u8fd9   \u8fd9   P   PN  _   2   top _   _\r\n2   \u662f   \u662f   V   VC  _   0   ROOT    _   _\r\n3   \u6211   \u6211   P   PN  _   5   assmod  _   _\r\n4   \u7684   \u7684   D   DEG _   3   assm    _   _\r\n5   \u4ee3\u8868  \u4ee3\u8868  N   NN  _   6   nsubj   _   _\r\n6   \u4f5c\u00b7  \u4f5c\u00b7  V   VV  _   2   ccomp   _   _\r\n```\r\n"
    },
    {
      "user": "hankcs",
      "created_at": "2021-01-21T02:55:55Z",
      "body": "\u4f60\u53ef\u4ee5\u628a\u00b7\u52a0\u5230\u8bcd\u5178\u91cc\u7136\u540eenableCustomDictionaryForcing\uff0c\u4e5f\u53ef\u4ee5CharTable['\u00b7']='\u3002'"
    },
    {
      "user": "jimmy-walker",
      "created_at": "2021-01-21T02:57:28Z",
      "body": "> \u4f60\u53ef\u4ee5\u628a\u00b7\u52a0\u5230\u8bcd\u5178\u91cc\u7136\u540eenableCustomDictionaryForcing\uff0c\u4e5f\u53ef\u4ee5CharTable['\u00b7']='\u3002'\r\n\r\n\u8c22\u8c22\u4f60\u3002\u6211\u5728\u770b\u6e90\u7801\u65f6\u770b\u5230\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u611f\u8c22\u3002"
    },
    {
      "user": "seabiscuityj",
      "created_at": "2021-02-19T14:43:24Z",
      "body": "> > Hi\uff0cKBeamArcEagerDependencyParser\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\u662f\u9ed8\u8ba4\u5173\u95ed\u7684\uff0c\u4e3a\u4e86\u5728CTB\u4e0a\u9762\u8dd1\u5206\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u5f00\u542f\uff1a\r\n> > ```java\r\n> > 1\t\u53c8\t\u53c8\tA\tAD\t_\t2\tadvmod\t_\t_\r\n> > 2\t\u6709\t\u6709\tV\tVE\t_\t0\tROOT\t_\t_\r\n> > 3\t\u65b0\t\u65b0\tV\tVA\t_\t5\trcmod\t_\t_\r\n> > 4\t\u7684\t\u7684\tD\tDEC\t_\t3\tcpm\t_\t_\r\n> > 5\t\u7533\u8bf7\u7b14\t\u7533\u8bf7\u7b14\tn\tnz\t_\t7\tnsubj\t_\t_\r\n> > 6\t\u53ef\u4ee5\t\u53ef\u4ee5\tV\tVV\t_\t7\tmmod\t_\t_\r\n> > 7\t\u62ff\t\u62ff\tV\tVV\t_\t2\tdep\t_\t_\r\n> > 8\t\u4e86\t\u4e86\tA\tAS\t_\t7\tasp\t_\t_\r\n> > 9\t\u3002\t\u3002\tP\tPU\t_\t2\tpunct\t_\t_\r\n> > ```\r\n> \r\n> @hankcs \u611f\u8c22\u60a8\u7684\u56de\u590d\u3002\u6211\u6309\u7167\u65b9\u6cd5\u5f00\u542f\u4e86\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u4f46\u53d1\u73b0\u6709\u4e00\u4e2a\u8bcd\u603b\u662f\u88ab\u5207\u9519\u3002\u8bf7\u95ee\u8fd9\u6709\u4ec0\u4e48\u529e\u6cd5\u5417\uff1f\r\n> \u6211\u8bbe\u7f6e\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u4ee3\u66ff\u4e86\u9ed8\u8ba4\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\uff1a\r\n> \r\n> ```\r\n> \u4ee3\u8868\u4f5c NN 1000\r\n> \u00b7 PU 1000\r\n> ```\r\n> \r\n> \u4f46\u662f\u5728KBeamArcEagerDependencyParser\u4e0b\uff0c\u59cb\u7ec8\u88ab\u5207\u5206\u4e3a\"\u4f5c\u00b7 \"\uff0c\u65e0\u8bba\u6211\u5728\u81ea\u5b9a\u4e49\u8bcd\u5178\u4e2d\u8bbe\u7f6e\u591a\u5927\u7684\u8bcd\u9891\uff0c\u90fd\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8bf7\u95ee\u8fd9\u4e2a\u5e94\u8be5\u5982\u4f55\u6539\u6b63\u5462\uff1f\r\n> \r\n> ```java\r\n>         IDependencyParser parser = new KBeamArcEagerDependencyParser();\r\n>         System.out.printf(parser.parse(\"\u8fd9\u662f\u6211\u7684\u4ee3\u8868\u4f5c\").toString());\r\n>         System.out.printf(parser.parse(\"\u8fd9\u662f\u6211\u7684\u4ee3\u8868\u4f5c\u00b7\").toString());\r\n> ```\r\n> \r\n> ```\r\n> 1   \u8fd9   \u8fd9   P   PN  _   2   top _   _\r\n> 2   \u662f   \u662f   V   VC  _   0   ROOT    _   _\r\n> 3   \u6211   \u6211   P   PN  _   5   assmod  _   _\r\n> 4   \u7684   \u7684   D   DEG _   3   assm    _   _\r\n> 5   \u4ee3\u8868\u4f5c \u4ee3\u8868\u4f5c N   NN  _   2   attr    _   _\r\n> \r\n> 1   \u8fd9   \u8fd9   P   PN  _   2   top _   _\r\n> 2   \u662f   \u662f   V   VC  _   0   ROOT    _   _\r\n> 3   \u6211   \u6211   P   PN  _   5   assmod  _   _\r\n> 4   \u7684   \u7684   D   DEG _   3   assm    _   _\r\n> 5   \u4ee3\u8868  \u4ee3\u8868  N   NN  _   6   nsubj   _   _\r\n> 6   \u4f5c\u00b7  \u4f5c\u00b7  V   VV  _   2   ccomp   _   _\r\n> ```\r\n\r\n\u8bf7\u95ee\u8be5\u600e\u4e48\u5f00\u542fKBeamArcEagerDependencyParser\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\uff1f"
    },
    {
      "user": "jimmy-walker",
      "created_at": "2021-02-20T07:58:05Z",
      "body": "@seabiscuityj  \u53ef\u4ee5\u4fee\u6539KBeamArcEagerDependencyParser.java\u4e2d\u7684\u6e90\u7801\r\n```java\r\nenableCustomDictionaryForcing(true)\r\n```"
    },
    {
      "user": "seabiscuityj",
      "created_at": "2021-02-21T05:54:30Z",
      "body": "> @seabiscuityj \u53ef\u4ee5\u4fee\u6539KBeamArcEagerDependencyParser.java\u4e2d\u7684\u6e90\u7801\r\n> \r\n> ```java\r\n> enableCustomDictionaryForcing(true)\r\n> ```\r\n\r\n\u8c22\u8c22\u56de\u590d\uff0c\u6309\u7167\u5efa\u8bae\u91cd\u65b0\u8bad\u7ec3\u4e86\u6a21\u578b\u3002\r\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff0c\u6211\u5728\u7528NeuralNetworkDependencyParser\u8fdb\u884c\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u7684\u65f6\u5019\uff0c\u603b\u662f\u63d0\u793a\u7a7a\u6307\u9488\u5f02\u5e38\u3002\r\n\r\n\u6211\u7684\u505a\u6cd5\u662f\uff1a\u8fd0\u884cch13\u4e0b\u7684DemoNeuralParser\uff0c\u5c31\u62a5\u9519\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u4e0d\u77e5\u9053\u662f\u54ea\u513f\u51fa\u95ee\u9898\uff1f\u671f\u5f85\u60a8\u7684\u56de\u7b54\u3002\r\n\r\n\u6211\u7684\u7248\u672c\u662fHanLP1.8.0\uff0c\u6309\u7167\u63d0\u793a\u4e0b\u8f7d\u4e86\u6570\u636e\u5305data\uff0cNNParserModel.txt.bin\u7684\u5b58\u653e\u8def\u5f84\u5c31\u662f\u6e90\u7801\u4e2d\u7684NNParserModelPath\u6307\u5411\u7684\"data/model/dependency/NNParserModel.txt\"\u3002"
    },
    {
      "user": "jimmy-walker",
      "created_at": "2021-02-22T07:44:18Z",
      "body": "> > @seabiscuityj \u53ef\u4ee5\u4fee\u6539KBeamArcEagerDependencyParser.java\u4e2d\u7684\u6e90\u7801\r\n> > ```java\r\n> > enableCustomDictionaryForcing(true)\r\n> > ```\r\n> \r\n> \u8c22\u8c22\u56de\u590d\uff0c\u6309\u7167\u5efa\u8bae\u91cd\u65b0\u8bad\u7ec3\u4e86\u6a21\u578b\u3002\r\n> \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff0c\u6211\u5728\u7528NeuralNetworkDependencyParser\u8fdb\u884c\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u7684\u65f6\u5019\uff0c\u603b\u662f\u63d0\u793a\u7a7a\u6307\u9488\u5f02\u5e38\u3002\r\n> \r\n> \u6211\u7684\u505a\u6cd5\u662f\uff1a\u8fd0\u884cch13\u4e0b\u7684DemoNeuralParser\uff0c\u5c31\u62a5\u9519\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u4e0d\u77e5\u9053\u662f\u54ea\u513f\u51fa\u95ee\u9898\uff1f\u671f\u5f85\u60a8\u7684\u56de\u7b54\u3002\r\n> \r\n> \u6211\u7684\u7248\u672c\u662fHanLP1.8.0\uff0c\u6309\u7167\u63d0\u793a\u4e0b\u8f7d\u4e86\u6570\u636e\u5305data\uff0cNNParserModel.txt.bin\u7684\u5b58\u653e\u8def\u5f84\u5c31\u662f\u6e90\u7801\u4e2d\u7684NNParserModelPath\u6307\u5411\u7684\"data/model/dependency/NNParserModel.txt\"\u3002\r\n\r\nsorry\uff0c\u8fd9\u4e2a\u60c5\u51b5\u6211\u6ca1\u9047\u5230\u8fc7\uff0c\u6216\u8bb8\u4f60\u53ef\u4ee5\u65b0\u5f00\u4e2a\u8d34@\u4e0b\u4f5c\u8005\u3002"
    },
    {
      "user": "seabiscuityj",
      "created_at": "2021-02-23T02:07:12Z",
      "body": "> > > @seabiscuityj \u53ef\u4ee5\u4fee\u6539KBeamArcEagerDependencyParser.java\u4e2d\u7684\u6e90\u7801\r\n> > > ```java\r\n> > > enableCustomDictionaryForcing(true)\r\n> > > ```\r\n> > \r\n> > \r\n> > \u8c22\u8c22\u56de\u590d\uff0c\u6309\u7167\u5efa\u8bae\u91cd\u65b0\u8bad\u7ec3\u4e86\u6a21\u578b\u3002\r\n> > \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff0c\u6211\u5728\u7528NeuralNetworkDependencyParser\u8fdb\u884c\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u7684\u65f6\u5019\uff0c\u603b\u662f\u63d0\u793a\u7a7a\u6307\u9488\u5f02\u5e38\u3002\r\n> > \u6211\u7684\u505a\u6cd5\u662f\uff1a\u8fd0\u884cch13\u4e0b\u7684DemoNeuralParser\uff0c\u5c31\u62a5\u9519\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u4e0d\u77e5\u9053\u662f\u54ea\u513f\u51fa\u95ee\u9898\uff1f\u671f\u5f85\u60a8\u7684\u56de\u7b54\u3002\r\n> > \u6211\u7684\u7248\u672c\u662fHanLP1.8.0\uff0c\u6309\u7167\u63d0\u793a\u4e0b\u8f7d\u4e86\u6570\u636e\u5305data\uff0cNNParserModel.txt.bin\u7684\u5b58\u653e\u8def\u5f84\u5c31\u662f\u6e90\u7801\u4e2d\u7684NNParserModelPath\u6307\u5411\u7684\"data/model/dependency/NNParserModel.txt\"\u3002\r\n> \r\n> sorry\uff0c\u8fd9\u4e2a\u60c5\u51b5\u6211\u6ca1\u9047\u5230\u8fc7\uff0c\u6216\u8bb8\u4f60\u53ef\u4ee5\u65b0\u5f00\u4e2a\u8d34@\u4e0b\u4f5c\u8005\u3002\r\n\r\n\u975e\u5e38\u611f\u8c22\u60a8\u7684\u56de\u590d\uff01\u4f5c\u8005\u4f3c\u4e4e\u662f\u5efa\u8bae\u65b0\u7684issue\u653e\u5230\u8bba\u575b\u4e0a\u63d0\uff0c\u6211\u5728\u8774\u8776\u6548\u5e94\u8bba\u575b\u4e0a\u53d1\u8fc7\u5e16\u5b50\u4f46\u662f\u8fd8\u6ca1\u6709\u56de\u590d\u3002\u8bf7\u95ee\u80fd\u5e2e\u6211\u770b\u4e00\u4e0b\u5417\uff1f @hankcs\n\n---\n\n> > > @seabiscuityj \u53ef\u4ee5\u4fee\u6539KBeamArcEagerDependencyParser.java\u4e2d\u7684\u6e90\u7801\r\n> > > ```java\r\n> > > enableCustomDictionaryForcing(true)\r\n> > > ```\r\n> > \r\n> > \r\n> > \u8c22\u8c22\u56de\u590d\uff0c\u6309\u7167\u5efa\u8bae\u91cd\u65b0\u8bad\u7ec3\u4e86\u6a21\u578b\u3002\r\n> > \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff0c\u6211\u5728\u7528NeuralNetworkDependencyParser\u8fdb\u884c\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u7684\u65f6\u5019\uff0c\u603b\u662f\u63d0\u793a\u7a7a\u6307\u9488\u5f02\u5e38\u3002\r\n> > \u6211\u7684\u505a\u6cd5\u662f\uff1a\u8fd0\u884cch13\u4e0b\u7684DemoNeuralParser\uff0c\u5c31\u62a5\u9519\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u4e0d\u77e5\u9053\u662f\u54ea\u513f\u51fa\u95ee\u9898\uff1f\u671f\u5f85\u60a8\u7684\u56de\u7b54\u3002\r\n> > \u6211\u7684\u7248\u672c\u662fHanLP1.8.0\uff0c\u6309\u7167\u63d0\u793a\u4e0b\u8f7d\u4e86\u6570\u636e\u5305data\uff0cNNParserModel.txt.bin\u7684\u5b58\u653e\u8def\u5f84\u5c31\u662f\u6e90\u7801\u4e2d\u7684NNParserModelPath\u6307\u5411\u7684\"data/model/dependency/NNParserModel.txt\"\u3002\r\n> \r\n> sorry\uff0c\u8fd9\u4e2a\u60c5\u51b5\u6211\u6ca1\u9047\u5230\u8fc7\uff0c\u6216\u8bb8\u4f60\u53ef\u4ee5\u65b0\u5f00\u4e2a\u8d34@\u4e0b\u4f5c\u8005\u3002\r\n\r\n\u8fd8\u6709\u51e0\u70b9\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff1a\r\n1. \u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff0c\u662fportable\u5417\uff1f\r\n2. \u6709\u624b\u52a8\u4e0b\u8f7d\u6570\u636e\u5305data\u5417\uff1f\r\n3. hanlp.properties\u8fd9\u4efd\u6587\u4ef6\u653e\u5728\u4ec0\u4e48\u8def\u5f84\u4e0b\uff1f\uff08\u6211\u662fclone\u5230\u672c\u5730\uff0c\u5c06hanlp.properties\u653e\u5728src\u76ee\u5f55\u4e0b\uff0c\u5728\u6587\u4ef6\u91cc\u9762\u914d\u7f6e\u4e86root\u8def\u5f84\u4e3adata\u6570\u636e\u5305\u7684\u7236\u76ee\u5f55\uff09"
    },
    {
      "user": "jimmy-walker",
      "created_at": "2021-02-23T03:03:59Z",
      "body": "> > > > @seabiscuityj \u53ef\u4ee5\u4fee\u6539KBeamArcEagerDependencyParser.java\u4e2d\u7684\u6e90\u7801\r\n> > > > ```java\r\n> > > > enableCustomDictionaryForcing(true)\r\n> > > > ```\r\n> > > \r\n> > > \r\n> > > \u8c22\u8c22\u56de\u590d\uff0c\u6309\u7167\u5efa\u8bae\u91cd\u65b0\u8bad\u7ec3\u4e86\u6a21\u578b\u3002\r\n> > > \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff0c\u6211\u5728\u7528NeuralNetworkDependencyParser\u8fdb\u884c\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u7684\u65f6\u5019\uff0c\u603b\u662f\u63d0\u793a\u7a7a\u6307\u9488\u5f02\u5e38\u3002\r\n> > > \u6211\u7684\u505a\u6cd5\u662f\uff1a\u8fd0\u884cch13\u4e0b\u7684DemoNeuralParser\uff0c\u5c31\u62a5\u9519\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u4e0d\u77e5\u9053\u662f\u54ea\u513f\u51fa\u95ee\u9898\uff1f\u671f\u5f85\u60a8\u7684\u56de\u7b54\u3002\r\n> > > \u6211\u7684\u7248\u672c\u662fHanLP1.8.0\uff0c\u6309\u7167\u63d0\u793a\u4e0b\u8f7d\u4e86\u6570\u636e\u5305data\uff0cNNParserModel.txt.bin\u7684\u5b58\u653e\u8def\u5f84\u5c31\u662f\u6e90\u7801\u4e2d\u7684NNParserModelPath\u6307\u5411\u7684\"data/model/dependency/NNParserModel.txt\"\u3002\r\n> > \r\n> > \r\n> > sorry\uff0c\u8fd9\u4e2a\u60c5\u51b5\u6211\u6ca1\u9047\u5230\u8fc7\uff0c\u6216\u8bb8\u4f60\u53ef\u4ee5\u65b0\u5f00\u4e2a\u8d34@\u4e0b\u4f5c\u8005\u3002\r\n> \r\n> \u8fd8\u6709\u51e0\u70b9\u95ee\u9898\u60f3\u8bf7\u6559\u60a8\uff1a\r\n> \r\n> 1. \u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u7248\u672c\uff0c\u662fportable\u5417\uff1f\r\n> 2. \u6709\u624b\u52a8\u4e0b\u8f7d\u6570\u636e\u5305data\u5417\uff1f\r\n> 3. hanlp.properties\u8fd9\u4efd\u6587\u4ef6\u653e\u5728\u4ec0\u4e48\u8def\u5f84\u4e0b\uff1f\uff08\u6211\u662fclone\u5230\u672c\u5730\uff0c\u5c06hanlp.properties\u653e\u5728src\u76ee\u5f55\u4e0b\uff0c\u5728\u6587\u4ef6\u91cc\u9762\u914d\u7f6e\u4e86root\u8def\u5f84\u4e3adata\u6570\u636e\u5305\u7684\u7236\u76ee\u5f55\uff09\r\n\r\n1.\u6211\u662f\u4e0b\u8f7d\u6e90\u4ee3\u7801\uff0c\u81ea\u5df1\u7f16\u8bd1\u7684\uff0c\u6ca1\u7528portable\u3002\u7248\u672c\u662f1.7.8\u3002\r\n2.\u624b\u52a8\u4e0b\u8f7d\u4e86\u6570\u636e\u5305\u3002\r\n3.hanlp.properties\u653e\u5728\u4e86target/classes\u76ee\u5f55\u4e0b\u3002"
    }
  ],
  "satisfaction_conditions": [
    "Enable custom dictionary support in KBeamArcEagerDependencyParser",
    "Handle special characters/punctuation in custom dictionary entries",
    "Maintain dependency parsing accuracy while using custom dictionary",
    "Provide configuration method that persists across instances",
    "Ensure tokenization precedes dependency parsing"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-03-21 18:05:43"
  },
  "git_commit_info": {
    "sha": "719af901d786c2b25a1ccced28fdd60618483dc3",
    "date": "2017-04-20T15:17:19Z",
    "message": "Merge pull request #482 from mudsu/master\n\n\u4fee\u6b63\u4e00\u4e2a\u62fc\u97f3",
    "author": "hankcs"
  },
  "repository_info": {
    "structure": {
      "name": "/",
      "path": "",
      "type": "directory",
      "contents": [
        {
          "name": ".gitignore",
          "path": ".gitignore",
          "type": "file",
          "size": 596
        },
        {
          "name": "LICENSE",
          "path": "LICENSE",
          "type": "file",
          "size": 11336
        },
        {
          "name": "README.md",
          "path": "README.md",
          "type": "file",
          "size": 37243
        },
        {
          "name": "data",
          "path": "data",
          "type": "directory",
          "contents": [
            {
              "name": "dictionary",
              "path": "data/dictionary",
              "type": "directory",
              "contents": [
                {
                  "name": "CoreNatureDictionary.mini.txt",
                  "path": "data/dictionary/CoreNatureDictionary.mini.txt",
                  "type": "file",
                  "size": 1134836
                },
                {
                  "name": "CoreNatureDictionary.ngram.mini.txt",
                  "path": "data/dictionary/CoreNatureDictionary.ngram.mini.txt",
                  "type": "file",
                  "size": 6083120
                },
                {
                  "name": "CoreNatureDictionary.ngram.txt",
                  "path": "data/dictionary/CoreNatureDictionary.ngram.txt",
                  "type": "file",
                  "size": 45691369
                },
                {
                  "name": "CoreNatureDictionary.tr.txt",
                  "path": "data/dictionary/CoreNatureDictionary.tr.txt",
                  "type": "file",
                  "size": 35398
                },
                {
                  "name": "CoreNatureDictionary.txt",
                  "path": "data/dictionary/CoreNatureDictionary.txt",
                  "type": "file",
                  "size": 2162996
                },
                {
                  "name": "custom",
                  "path": "data/dictionary/custom",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "CustomDictionary.txt",
                      "path": "data/dictionary/custom/CustomDictionary.txt",
                      "type": "file",
                      "size": 43289
                    },
                    {
                      "name": "\u4e0a\u6d77\u5730\u540d.txt",
                      "path": "data/dictionary/custom/\u4e0a\u6d77\u5730\u540d.txt",
                      "type": "file",
                      "size": 297405
                    },
                    {
                      "name": "\u4eba\u540d\u8bcd\u5178.txt",
                      "path": "data/dictionary/custom/\u4eba\u540d\u8bcd\u5178.txt",
                      "type": "file",
                      "size": 778525
                    },
                    {
                      "name": "\u5168\u56fd\u5730\u540d\u5927\u5168.txt",
                      "path": "data/dictionary/custom/\u5168\u56fd\u5730\u540d\u5927\u5168.txt",
                      "type": "file",
                      "size": 1174074
                    },
                    {
                      "name": "\u673a\u6784\u540d\u8bcd\u5178.txt",
                      "path": "data/dictionary/custom/\u673a\u6784\u540d\u8bcd\u5178.txt",
                      "type": "file",
                      "size": 907824
                    },
                    {
                      "name": "\u73b0\u4ee3\u6c49\u8bed\u8865\u5145\u8bcd\u5e93.txt",
                      "path": "data/dictionary/custom/\u73b0\u4ee3\u6c49\u8bed\u8865\u5145\u8bcd\u5e93.txt",
                      "type": "file",
                      "size": 3370770
                    }
                  ]
                },
                {
                  "name": "organization",
                  "path": "data/dictionary/organization",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "nt.tr.txt",
                      "path": "data/dictionary/organization/nt.tr.txt",
                      "type": "file",
                      "size": 888
                    },
                    {
                      "name": "nt.txt",
                      "path": "data/dictionary/organization/nt.txt",
                      "type": "file",
                      "size": 262312
                    }
                  ]
                },
                {
                  "name": "other",
                  "path": "data/dictionary/other",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "CharTable.txt",
                      "path": "data/dictionary/other/CharTable.txt",
                      "type": "file",
                      "size": 38481
                    }
                  ]
                },
                {
                  "name": "person",
                  "path": "data/dictionary/person",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "nr.tr.txt",
                      "path": "data/dictionary/person/nr.tr.txt",
                      "type": "file",
                      "size": 671
                    },
                    {
                      "name": "nr.txt",
                      "path": "data/dictionary/person/nr.txt",
                      "type": "file",
                      "size": 300833
                    },
                    {
                      "name": "nrf.txt",
                      "path": "data/dictionary/person/nrf.txt",
                      "type": "file",
                      "size": 161165
                    },
                    {
                      "name": "nrj.txt",
                      "path": "data/dictionary/person/nrj.txt",
                      "type": "file",
                      "size": 329864
                    }
                  ]
                },
                {
                  "name": "pinyin",
                  "path": "data/dictionary/pinyin",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "SYTDictionary.txt",
                      "path": "data/dictionary/pinyin/SYTDictionary.txt",
                      "type": "file",
                      "size": 18102
                    },
                    {
                      "name": "pinyin.txt",
                      "path": "data/dictionary/pinyin/pinyin.txt",
                      "type": "file",
                      "size": 463057
                    }
                  ]
                },
                {
                  "name": "place",
                  "path": "data/dictionary/place",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "ns.tr.txt",
                      "path": "data/dictionary/place/ns.tr.txt",
                      "type": "file",
                      "size": 381
                    },
                    {
                      "name": "ns.txt",
                      "path": "data/dictionary/place/ns.txt",
                      "type": "file",
                      "size": 251744
                    }
                  ]
                },
                {
                  "name": "stopwords.txt",
                  "path": "data/dictionary/stopwords.txt",
                  "type": "file",
                  "size": 7386
                },
                {
                  "name": "synonym",
                  "path": "data/dictionary/synonym",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "CoreSynonym.txt",
                      "path": "data/dictionary/synonym/CoreSynonym.txt",
                      "type": "file",
                      "size": 892620
                    }
                  ]
                },
                {
                  "name": "tc",
                  "path": "data/dictionary/tc",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "s2t.txt",
                      "path": "data/dictionary/tc/s2t.txt",
                      "type": "file",
                      "size": 1034624
                    },
                    {
                      "name": "t2hk.txt",
                      "path": "data/dictionary/tc/t2hk.txt",
                      "type": "file",
                      "size": 822
                    },
                    {
                      "name": "t2s.txt",
                      "path": "data/dictionary/tc/t2s.txt",
                      "type": "file",
                      "size": 133321
                    },
                    {
                      "name": "t2tw.txt",
                      "path": "data/dictionary/tc/t2tw.txt",
                      "type": "file",
                      "size": 9739
                    }
                  ]
                }
              ]
            },
            {
              "name": "model",
              "path": "data/model",
              "type": "directory",
              "contents": [
                {
                  "name": "README.txt",
                  "path": "data/model/README.txt",
                  "type": "file",
                  "size": 485
                }
              ]
            }
          ]
        },
        {
          "name": "pom.xml",
          "path": "pom.xml",
          "type": "file",
          "size": 4702
        },
        {
          "name": "src",
          "path": "src",
          "type": "directory",
          "contents": [
            {
              "name": "main",
              "path": "src/main",
              "type": "directory",
              "contents": [
                {
                  "name": "java",
                  "path": "src/main/java",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "com",
                      "path": "src/main/java/com",
                      "type": "directory",
                      "contents": [
                        {
                          "name": "hankcs",
                          "path": "src/main/java/com/hankcs",
                          "type": "directory",
                          "truncated": true
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "test",
              "path": "src/test",
              "type": "directory",
              "contents": [
                {
                  "name": "java",
                  "path": "src/test/java",
                  "type": "directory",
                  "contents": [
                    {
                      "name": "com",
                      "path": "src/test/java/com",
                      "type": "directory",
                      "contents": [
                        {
                          "name": "hankcs",
                          "path": "src/test/java/com/hankcs",
                          "type": "directory",
                          "truncated": true
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "structure_summary": "/\n    \u251c\u2500\u2500 data/\n    \u2502   \u251c\u2500\u2500 dictionary/\n    \u2502   \u2502   \u251c\u2500\u2500 custom/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 CustomDictionary.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 \u4e0a\u6d77\u5730\u540d.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 \u4eba\u540d\u8bcd\u5178.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 \u5168\u56fd\u5730\u540d\u5927\u5168.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 \u673a\u6784\u540d\u8bcd\u5178.txt\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 \u73b0\u4ee3\u6c49\u8bed\u8865\u5145\u8bcd\u5e93.txt\n    \u2502   \u2502   \u251c\u2500\u2500 organization/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 nt.tr.txt\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 nt.txt\n    \u2502   \u2502   \u251c\u2500\u2500 other/\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 CharTable.txt\n    \u2502   \u2502   \u251c\u2500\u2500 person/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 nr.tr.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 nr.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 nrf.txt\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 nrj.txt\n    \u2502   \u2502   \u251c\u2500\u2500 pinyin/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 pinyin.txt\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 SYTDictionary.txt\n    \u2502   \u2502   \u251c\u2500\u2500 place/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 ns.tr.txt\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 ns.txt\n    \u2502   \u2502   \u251c\u2500\u2500 synonym/\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 CoreSynonym.txt\n    \u2502   \u2502   \u251c\u2500\u2500 tc/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 s2t.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 t2hk.txt\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 t2s.txt\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 t2tw.txt\n    \u2502   \u2502   \u251c\u2500\u2500 CoreNatureDictionary.mini.txt\n    \u2502   \u2502   \u251c\u2500\u2500 CoreNatureDictionary.ngram.mini.txt\n    \u2502   \u2502   \u251c\u2500\u2500 CoreNatureDictionary.ngram.txt\n    \u2502   \u2502   \u251c\u2500\u2500 CoreNatureDictionary.tr.txt\n    \u2502   \u2502   \u251c\u2500\u2500 CoreNatureDictionary.txt\n    \u2502   \u2502   \u2514\u2500\u2500 stopwords.txt\n    \u2502   \u2514\u2500\u2500 model/\n    \u2502       \u2514\u2500\u2500 README.txt\n    \u251c\u2500\u2500 src/\n    \u2502   \u251c\u2500\u2500 main/\n    \u2502   \u2502   \u2514\u2500\u2500 java/\n    \u2502   \u2502       \u2514\u2500\u2500 com/\n    \u2502   \u2502           \u2514\u2500\u2500 hankcs/\n    \u2502   \u2502               ... (directory truncated)\n    \u2502   \u2514\u2500\u2500 test/\n    \u2502       \u2514\u2500\u2500 java/\n    \u2502           \u2514\u2500\u2500 com/\n    \u2502               \u2514\u2500\u2500 hankcs/\n    \u2502                   ... (directory truncated)\n    \u251c\u2500\u2500 .gitignore",
    "readme": "HanLP: Han Language Processing\n=====\n\n\u6c49\u8bed\u8a00\u5904\u7406\u5305\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.hankcs/hanlp/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.hankcs/hanlp/)\n[![GitHub release](https://img.shields.io/github/release/hankcs/HanLP.svg)](https://github.com/hankcs/hanlp/releases)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n\n------\n\n**HanLP**\u662f\u7531\u4e00\u7cfb\u5217\u6a21\u578b\u4e0e\u7b97\u6cd5\u7ec4\u6210\u7684Java\u5de5\u5177\u5305\uff0c\u76ee\u6807\u662f\u666e\u53ca\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5e94\u7528\u3002**HanLP**\u5177\u5907\u529f\u80fd\u5b8c\u5584\u3001\u6027\u80fd\u9ad8\u6548\u3001\u67b6\u6784\u6e05\u6670\u3001\u8bed\u6599\u65f6\u65b0\u3001\u53ef\u81ea\u5b9a\u4e49\u7684\u7279\u70b9\u3002\n\n**HanLP**\u63d0\u4f9b\u4e0b\u5217\u529f\u80fd\uff1a\n\n> * \u4e2d\u6587\u5206\u8bcd\n  * \u6700\u77ed\u8def\u5206\u8bcd\n  * N-\u6700\u77ed\u8def\u5206\u8bcd\n  * CRF\u5206\u8bcd\n  * \u7d22\u5f15\u5206\u8bcd\n  * \u6781\u901f\u8bcd\u5178\u5206\u8bcd\n  * \u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\n> * \u8bcd\u6027\u6807\u6ce8\n> * \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\n  * \u4e2d\u56fd\u4eba\u540d\u8bc6\u522b\n  * \u97f3\u8bd1\u4eba\u540d\u8bc6\u522b\n  * \u65e5\u672c\u4eba\u540d\u8bc6\u522b\n  * \u5730\u540d\u8bc6\u522b\n  * \u5b9e\u4f53\u673a\u6784\u540d\u8bc6\u522b\n> * \u5173\u952e\u8bcd\u63d0\u53d6\n  * TextRank\u5173\u952e\u8bcd\u63d0\u53d6\n> * \u81ea\u52a8\u6458\u8981\n  * TextRank\u81ea\u52a8\u6458\u8981\n> * \u77ed\u8bed\u63d0\u53d6\n  * \u57fa\u4e8e\u4e92\u4fe1\u606f\u548c\u5de6\u53f3\u4fe1\u606f\u71b5\u7684\u77ed\u8bed\u63d0\u53d6\n> * \u62fc\u97f3\u8f6c\u6362\n  * \u591a\u97f3\u5b57\n  * \u58f0\u6bcd\n  * \u97f5\u6bcd\n  * \u58f0\u8c03\n> * \u7b80\u7e41\u8f6c\u6362\n  * \u7e41\u4f53\u4e2d\u6587\u5206\u8bcd\n  * \u7b80\u7e41\u5206\u6b67\u8bcd\uff08\u7b80\u4f53\u3001\u7e41\u4f53\u3001\u81fa\u7063\u6b63\u9ad4\u3001\u9999\u6e2f\u7e41\u9ad4\uff09\n> * \u6587\u672c\u63a8\u8350\n  * \u8bed\u4e49\u63a8\u8350\n  * \u62fc\u97f3\u63a8\u8350\n  * \u5b57\u8bcd\u63a8\u8350\n> * \u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\n  * \u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u9ad8\u6027\u80fd\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u5668\n  * MaxEnt\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\n  * CRF\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\n> * \u8bed\u6599\u5e93\u5de5\u5177\n  * \u5206\u8bcd\u8bed\u6599\u9884\u5904\u7406\n  * \u8bcd\u9891\u8bcd\u6027\u8bcd\u5178\u5236\u4f5c\n  * BiGram\u7edf\u8ba1\n  * \u8bcd\u5171\u73b0\u7edf\u8ba1\n  * CoNLL\u8bed\u6599\u9884\u5904\u7406\n  * CoNLL UA/LA/DA\u8bc4\u6d4b\u5de5\u5177\n\n\n\u5728\u63d0\u4f9b\u4e30\u5bcc\u529f\u80fd\u7684\u540c\u65f6\uff0c**HanLP**\u5185\u90e8\u6a21\u5757\u575a\u6301\u4f4e\u8026\u5408\u3001\u6a21\u578b\u575a\u6301\u60f0\u6027\u52a0\u8f7d\u3001\u670d\u52a1\u575a\u6301\u9759\u6001\u63d0\u4f9b\u3001\u8bcd\u5178\u575a\u6301\u660e\u6587\u53d1\u5e03\uff0c\u4f7f\u7528\u975e\u5e38\u65b9\u4fbf\uff0c\u540c\u65f6\u81ea\u5e26\u4e00\u4e9b\u8bed\u6599\u5904\u7406\u5de5\u5177\uff0c\u5e2e\u52a9\u7528\u6237\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002\n\n------\n\n## \u9879\u76ee\u4e3b\u9875\n\nHanLP\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/hankcs/HanLP/releases\n\nSolr\u3001Lucene\u63d2\u4ef6\uff1ahttps://github.com/hankcs/hanlp-solr-plugin\n\n\u66f4\u591a\u7ec6\u8282\uff1ahttps://github.com/hankcs/HanLP/wiki\n\n------\n\n## \u4e0b\u8f7d\u4e0e\u914d\u7f6e\n\n### \u65b9\u5f0f\u4e00\u3001Maven\n\n\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\uff0c\u7279\u63d0\u4f9b\u5185\u7f6e\u4e86\u6570\u636e\u5305\u7684Portable\u7248\uff0c\u53ea\u9700\u5728pom.xml\u52a0\u5165\uff1a\n\n```\n<dependency>\n    <groupId>com.hankcs</groupId>\n    <artifactId>hanlp</artifactId>\n    <version>portable-1.3.2</version>\n</dependency>\n```\n\n\u96f6\u914d\u7f6e\uff0c\u5373\u53ef\u4f7f\u7528\u57fa\u672c\u529f\u80fd\uff08\u9664CRF\u5206\u8bcd\u3001\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u5916\u7684\u5168\u90e8\u529f\u80fd\uff09\u3002\u5982\u679c\u7528\u6237\u6709\u81ea\u5b9a\u4e49\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u53c2\u8003\u65b9\u5f0f\u4e8c\uff0c\u4f7f\u7528hanlp.properties\u8fdb\u884c\u914d\u7f6e\u3002\n\n### \u65b9\u5f0f\u4e8c\u3001\u4e0b\u8f7djar\u3001data\u3001hanlp.properties\n\n**HanLP**\u5c06\u6570\u636e\u4e0e\u7a0b\u5e8f\u5206\u79bb\uff0c\u7ed9\u4e88\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u81ea\u7531\u3002\n\n#### 1\u3001\u4e0b\u8f7djar\n\n[hanlp.jar](https://github.com/hankcs/HanLP/releases)\n\n#### 2\u3001\u4e0b\u8f7ddata\n\n| \u6570\u636e\u5305        | \u529f\u80fd   |  \u4f53\u79ef\uff08MB\uff09  |\n| --------   | -----:  | :----:  |\n| [data.zip](https://github.com/hankcs/HanLP/releases)     | \u5168\u90e8 |   255     |\n\u4e0b\u8f7d\u540e\u89e3\u538b\u5230\u4efb\u610f\u76ee\u5f55\uff0c\u63a5\u4e0b\u6765\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u544a\u8bc9HanLP\u6570\u636e\u5305\u7684\u4f4d\u7f6e\u3002\n\n**HanLP**\u4e2d\u7684\u6570\u636e\u5206\u4e3a*\u8bcd\u5178*\u548c*\u6a21\u578b*\uff0c\u5176\u4e2d*\u8bcd\u5178*\u662f\u8bcd\u6cd5\u5206\u6790\u5fc5\u9700\u7684\uff0c*\u6a21\u578b*\u662f\u53e5\u6cd5\u5206\u6790\u5fc5\u9700\u7684\u3002\n\n    data\n    \u2502\n    \u251c\u2500dictionary\n    \u2514\u2500model\n\n\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u589e\u5220\u66ff\u6362\uff0c\u5982\u679c\u4e0d\u9700\u8981\u53e5\u6cd5\u5206\u6790\u529f\u80fd\u7684\u8bdd\uff0c\u968f\u65f6\u53ef\u4ee5\u5220\u9664model\u6587\u4ef6\u5939\u3002\n- \u6a21\u578b\u8ddf\u8bcd\u5178\u6ca1\u6709\u7edd\u5bf9\u7684\u533a\u522b\uff0c\u9690\u9a6c\u6a21\u578b\u88ab\u505a\u6210\u4eba\u4eba\u90fd\u53ef\u4ee5\u7f16\u8f91\u7684\u8bcd\u5178\u5f62\u5f0f\uff0c\u4e0d\u4ee3\u8868\u5b83\u4e0d\u662f\u6a21\u578b\u3002\n- GitHub\u4ee3\u7801\u5e93\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86data.zip\u4e2d\u7684\u8bcd\u5178\uff0c\u76f4\u63a5\u7f16\u8bd1\u8fd0\u884c\u81ea\u52a8\u7f13\u5b58\u5373\u53ef\uff1b\u6a21\u578b\u5219\u9700\u8981\u989d\u5916\u4e0b\u8f7d\u3002\n\n#### 3\u3001\u914d\u7f6e\u6587\u4ef6\n\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6:[hanlp.properties](https://github.com/hankcs/HanLP/releases)\n\u5728GitHub\u7684\u53d1\u5e03\u9875\u4e2d\uff0c```hanlp.properties```\u4e00\u822c\u548c```jar```\u6253\u5305\u5728\u540c\u4e00\u4e2a```zip```\u5305\u4e2d\u3002\n\n\u914d\u7f6e\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u544a\u8bc9HanLP\u6570\u636e\u5305\u7684\u4f4d\u7f6e\uff0c\u53ea\u9700\u4fee\u6539\u7b2c\u4e00\u884c\n\n    root=usr/home/HanLP/\n\n\u4e3adata\u7684**\u7236\u76ee\u5f55**\u5373\u53ef\uff0c\u6bd4\u5982data\u76ee\u5f55\u662f`/Users/hankcs/Documents/data`\uff0c\u90a3\u4e48`root=/Users/hankcs/Documents/` \u3002\n\n- \u5982\u679c\u9009\u7528mini\u8bcd\u5178\u7684\u8bdd\uff0c\u5219\u9700\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff1a\n```\nCoreDictionaryPath=data/dictionary/CoreNatureDictionary.mini.txt\nBiGramDictionaryPath=data/dictionary/CoreNatureDictionary.ngram.mini.txt\n```\n\n\u6700\u540e\u5c06HanLP.properties\u653e\u5165classpath\u5373\u53ef\uff0c\u5bf9\u4e8e\u4efb\u4f55\u9879\u76ee\uff0c\u90fd\u53ef\u4ee5\u653e\u5230src\u6216resources\u76ee\u5f55\u4e0b\uff0c\u7f16\u8bd1\u65f6IDE\u4f1a\u81ea\u52a8\u5c06\u5176\u590d\u5236\u5230classpath\u4e2d\u3002\n\n\u5982\u679c\u653e\u7f6e\u4e0d\u5f53\uff0cHanLP\u4f1a\u667a\u80fd\u63d0\u793a\u5f53\u524d\u73af\u5883\u4e0b\u7684\u5408\u9002\u8def\u5f84\uff0c\u5e76\u4e14\u5c1d\u8bd5\u4ece\u9879\u76ee\u6839\u76ee\u5f55\u8bfb\u53d6\u6570\u636e\u96c6\u3002\n\n## \u8c03\u7528\u65b9\u6cd5\n\n**HanLP**\u51e0\u4e4e\u6240\u6709\u7684\u529f\u80fd\u90fd\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u7c7b`HanLP`\u5feb\u6377\u8c03\u7528\uff0c\u5f53\u4f60\u60f3\u4e0d\u8d77\u6765\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u53ea\u9700\u952e\u5165`HanLP.`\uff0cIDE\u5e94\u5f53\u4f1a\u7ed9\u51fa\u63d0\u793a\uff0c\u5e76\u5c55\u793a**HanLP**\u5b8c\u5584\u7684\u6587\u6863\u3002\n\n*\u63a8\u8350\u7528\u6237\u59cb\u7ec8\u901a\u8fc7\u5de5\u5177\u7c7b`HanLP`\u8c03\u7528\uff0c\u8fd9\u4e48\u505a\u7684\u597d\u5904\u662f\uff0c\u5c06\u6765**HanLP**\u5347\u7ea7\u540e\uff0c\u7528\u6237\u65e0\u9700\u4fee\u6539\u8c03\u7528\u4ee3\u7801\u3002*\n\n\u6240\u6709Demo\u90fd\u4f4d\u4e8e[com.hankcs.demo](https://github.com/hankcs/HanLP/tree/master/src/test/java/com/hankcs/demo)\u4e0b\uff0c\u6bd4\u6587\u6863\u8986\u76d6\u4e86\u66f4\u591a\u7ec6\u8282\uff0c\u5f3a\u70c8\u5efa\u8bae\u8fd0\u884c\u4e00\u904d\u3002\n\n### 1. \u7b2c\u4e00\u4e2aDemo\n\n```java\nSystem.out.println(HanLP.segment(\"\u4f60\u597d\uff0c\u6b22\u8fce\u4f7f\u7528HanLP\u6c49\u8bed\u5904\u7406\u5305\uff01\"));\n```\n- \u5185\u5b58\u8981\u6c42\n  * **HanLP**\u5bf9\u8bcd\u5178\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4e86\u957f\u671f\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5e94\u5bf9\u7edd\u5927\u591a\u6570\u573a\u666f\u3002\u54ea\u6015**HanLP**\u7684\u8bcd\u5178\u4e0a\u767e\u5146\u4e5f\u65e0\u9700\u62c5\u5fc3\uff0c\u56e0\u4e3a\u5728\u5185\u5b58\u4e2d\u88ab\u7cbe\u5fc3\u538b\u7f29\u8fc7\u3002\n  * \u5982\u679c\u5185\u5b58\u975e\u5e38\u6709\u9650\uff0c\u8bf7\u4f7f\u7528\u5c0f\u8bcd\u5178\u3002**HanLP**\u9ed8\u8ba4\u4f7f\u7528\u5927\u8bcd\u5178\uff0c\u540c\u65f6\u63d0\u4f9b\u5c0f\u8bcd\u5178\uff0c\u8bf7\u53c2\u8003\u914d\u7f6e\u6587\u4ef6\u7ae0\u8282\u3002\n- \u5199\u7ed9\u6b63\u5728\u7f16\u8bd1**HanLP**\u7684\u5f00\u53d1\u8005\n  * \u5982\u679c\u4f60\u6b63\u5728\u7f16\u8bd1\u8fd0\u884c\u4eceGithub\u68c0\u51fa\u7684**HanLP**\u4ee3\u7801\uff0c\u5e76\u4e14\u6ca1\u6709\u4e0b\u8f7ddata\u7f13\u5b58\uff0c\u90a3\u4e48\u9996\u6b21\u52a0\u8f7d\u8bcd\u5178/\u6a21\u578b\u4f1a\u53d1\u751f\u4e00\u4e2a*\u81ea\u52a8\u7f13\u5b58*\u7684\u8fc7\u7a0b\u3002\n  * *\u81ea\u52a8\u7f13\u5b58*\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u52a0\u901f\u8bcd\u5178\u8f7d\u5165\u901f\u5ea6\uff0c\u5728\u4e0b\u6b21\u8f7d\u5165\u65f6\uff0c\u7f13\u5b58\u7684\u8bcd\u5178\u6587\u4ef6\u4f1a\u5e26\u6765\u6beb\u79d2\u7ea7\u7684\u52a0\u8f7d\u901f\u5ea6\u3002\u7531\u4e8e\u8bcd\u5178\u4f53\u79ef\u5f88\u5927\uff0c*\u81ea\u52a8\u7f13\u5b58*\u4f1a\u8017\u8d39\u4e00\u4e9b\u65f6\u95f4\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\u3002\n  * *\u81ea\u52a8\u7f13\u5b58*\u7f13\u5b58\u7684\u4e0d\u662f\u660e\u6587\u8bcd\u5178\uff0c\u800c\u662f\u53cc\u6570\u7ec4Trie\u6811\u3001DAWG\u3001AhoCorasickDoubleArrayTrie\u7b49\u6570\u636e\u7ed3\u6784\u3002\n\n### 2. \u6807\u51c6\u5206\u8bcd\n\n```java\nList<Term> termList = StandardTokenizer.segment(\"\u5546\u54c1\u548c\u670d\u52a1\");\nSystem.out.println(termList);\n```\n- \u8bf4\u660e\n  * **HanLP**\u4e2d\u6709\u4e00\u7cfb\u5217\u201c\u5f00\u7bb1\u5373\u7528\u201d\u7684\u9759\u6001\u5206\u8bcd\u5668\uff0c\u4ee5`Tokenizer`\u7ed3\u5c3e\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u4f8b\u5b50\u4e2d\u4f1a\u7ee7\u7eed\u4ecb\u7ecd\u3002\n  * `HanLP.segment`\u5176\u5b9e\u662f\u5bf9`StandardTokenizer.segment`\u7684\u5305\u88c5\u3002\n  * \u5206\u8bcd\u7ed3\u679c\u5305\u542b\u8bcd\u6027\uff0c\u6bcf\u4e2a\u8bcd\u6027\u7684\u610f\u601d\u8bf7\u67e5\u9605[\u300aHanLP\u8bcd\u6027\u6807\u6ce8\u96c6\u300b](http://www.hankcs.com/nlp/part-of-speech-tagging.html#h2-8)\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u8bcd\u56fe\u7684\u751f\u6210\u300b](http://www.hankcs.com/nlp/segment/the-word-graph-is-generated.html)\n\n### 3. NLP\u5206\u8bcd\n\n```java\nList<Term> termList = NLPTokenizer.segment(\"\u4e2d\u56fd\u79d1\u5b66\u9662\u8ba1\u7b97\u6280\u672f\u7814\u7a76\u6240\u7684\u5b97\u6210\u5e86\u6559\u6388\u6b63\u5728\u6559\u6388\u81ea\u7136\u8bed\u8a00\u5904\u7406\u8bfe\u7a0b\");\nSystem.out.println(termList);\n```\n- \u8bf4\u660e\n  * NLP\u5206\u8bcd`NLPTokenizer`\u4f1a\u6267\u884c\u5168\u90e8\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u548c\u8bcd\u6027\u6807\u6ce8\u3002\n\n### 4. \u7d22\u5f15\u5206\u8bcd\n\n```java\nList<Term> termList = IndexTokenizer.segment(\"\u4e3b\u526f\u98df\u54c1\");\nfor (Term term : termList)\n{\n    System.out.println(term + \" [\" + term.offset + \":\" + (term.offset + term.word.length()) + \"]\");\n}\n```\n- \u8bf4\u660e\n  * \u7d22\u5f15\u5206\u8bcd`IndexTokenizer`\u662f\u9762\u5411\u641c\u7d22\u5f15\u64ce\u7684\u5206\u8bcd\u5668\uff0c\u80fd\u591f\u5bf9\u957f\u8bcd\u5168\u5207\u5206\uff0c\u53e6\u5916\u901a\u8fc7`term.offset`\u53ef\u4ee5\u83b7\u53d6\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u7684\u504f\u79fb\u91cf\u3002\n\n### 5. N-\u6700\u77ed\u8def\u5f84\u5206\u8bcd\n\n```java\nSegment nShortSegment = new NShortSegment().enableCustomDictionary(false).enablePlaceRecognize(true).enableOrganizationRecognize(true);\nSegment shortestSegment = new DijkstraSegment().enableCustomDictionary(false).enablePlaceRecognize(true).enableOrganizationRecognize(true);\nString[] testCase = new String[]{\n        \"\u4eca\u5929\uff0c\u5218\u5fd7\u519b\u6848\u7684\u5173\u952e\u4eba\u7269,\u5c71\u897f\u5973\u5546\u4eba\u4e01\u4e66\u82d7\u5728\u5e02\u4e8c\u4e2d\u9662\u51fa\u5ead\u53d7\u5ba1\u3002\",\n        \"\u5218\u559c\u6770\u77f3\u56fd\u7965\u4f1a\u89c1\u5434\u4e9a\u7434\u5148\u8fdb\u4e8b\u8ff9\u62a5\u544a\u56e2\u6210\u5458\",\n        };\nfor (String sentence : testCase)\n{\n    System.out.println(\"N-\u6700\u77ed\u5206\u8bcd\uff1a\" + nShortSegment.seg(sentence) + \"\\n\u6700\u77ed\u8def\u5206\u8bcd\uff1a\" + shortestSegment.seg(sentence));\n}\n```\n- \u8bf4\u660e\n  * N\u6700\u77ed\u8def\u5206\u8bcd\u5668`NShortSegment`\u6bd4\u6700\u77ed\u8def\u5206\u8bcd\u5668\u6162\uff0c\u4f46\u662f\u6548\u679c\u7a0d\u5fae\u597d\u4e00\u4e9b\uff0c\u5bf9\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u80fd\u529b\u66f4\u5f3a\u3002\n  * \u4e00\u822c\u573a\u666f\u4e0b\u6700\u77ed\u8def\u5206\u8bcd\u7684\u7cbe\u5ea6\u5df2\u7ecf\u8db3\u591f\uff0c\u800c\u4e14\u901f\u5ea6\u6bd4N\u6700\u77ed\u8def\u5206\u8bcd\u5668\u5feb\u51e0\u500d\uff0c\u8bf7\u914c\u60c5\u9009\u62e9\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300aN\u6700\u77ed\u8def\u5f84\u7684Java\u5b9e\u73b0\u4e0e\u5206\u8bcd\u5e94\u7528\u300b](http://www.hankcs.com/nlp/segment/n-shortest-path-to-the-java-implementation-and-application-segmentation.html)\n\n### 6. CRF\u5206\u8bcd\n\n```java\nSegment segment = new CRFSegment();\nsegment.enablePartOfSpeechTagging(true);\nList<Term> termList = segment.seg(\"\u4f60\u770b\u8fc7\u7a46\u8d6b\u5170\u9053\u5417\");\nSystem.out.println(termList);\nfor (Term term : termList)\n{\n    if (term.nature == null)\n    {\n        System.out.println(\"\u8bc6\u522b\u5230\u65b0\u8bcd\uff1a\" + term.word);\n    }\n}\n```\n- \u8bf4\u660e\n  * CRF\u5bf9\u65b0\u8bcd\u6709\u5f88\u597d\u7684\u8bc6\u522b\u80fd\u529b\uff0c\u4f46\u662f\u5f00\u9500\u8f83\u5927\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300aCRF\u5206\u8bcd\u7684\u7eafJava\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/segment/crf-segmentation-of-the-pure-java-implementation.html)\n  * [\u300aCRF++\u6a21\u578b\u683c\u5f0f\u8bf4\u660e\u300b](http://www.hankcs.com/nlp/the-crf-model-format-description.html)\n\n### 7. \u6781\u901f\u8bcd\u5178\u5206\u8bcd\n\n```java\n/**\n * \u6f14\u793a\u6781\u901f\u5206\u8bcd\uff0c\u57fa\u4e8eAhoCorasickDoubleArrayTrie\u5b9e\u73b0\u7684\u8bcd\u5178\u5206\u8bcd\uff0c\u9002\u7528\u4e8e\u201c\u9ad8\u541e\u5410\u91cf\u201d\u201c\u7cbe\u5ea6\u4e00\u822c\u201d\u7684\u573a\u5408\n * @author hankcs\n */\npublic class DemoHighSpeedSegment\n{\n    public static void main(String[] args)\n    {\n        String text = \"\u6c5f\u897f\u9131\u9633\u6e56\u5e72\u67af\uff0c\u4e2d\u56fd\u6700\u5927\u6de1\u6c34\u6e56\u53d8\u6210\u5927\u8349\u539f\";\n        System.out.println(SpeedTokenizer.segment(text));\n        long start = System.currentTimeMillis();\n        int pressure = 1000000;\n        for (int i = 0; i < pressure; ++i)\n        {\n            SpeedTokenizer.segment(text);\n        }\n        double costTime = (System.currentTimeMillis() - start) / (double)1000;\n        System.out.printf(\"\u5206\u8bcd\u901f\u5ea6\uff1a%.2f\u5b57\u6bcf\u79d2\", text.length() * pressure / costTime);\n    }\n}\n```\n- \u8bf4\u660e\n  * \u6781\u901f\u5206\u8bcd\u662f\u8bcd\u5178\u6700\u957f\u5206\u8bcd\uff0c\u901f\u5ea6\u6781\u5176\u5feb\uff0c\u7cbe\u5ea6\u4e00\u822c\u3002\n  * \u5728i7\u4e0a\u8dd1\u51fa\u4e862000\u4e07\u5b57\u6bcf\u79d2\u7684\u901f\u5ea6\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300aAho Corasick\u81ea\u52a8\u673a\u7ed3\u5408DoubleArrayTrie\u6781\u901f\u591a\u6a21\u5f0f\u5339\u914d\u300b](http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html)\n\n### 8. \u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\n\n```java\n/**\n * \u6f14\u793a\u7528\u6237\u8bcd\u5178\u7684\u52a8\u6001\u589e\u5220\n *\n * @author hankcs\n */\npublic class DemoCustomDictionary\n{\n    public static void main(String[] args)\n    {\n        // \u52a8\u6001\u589e\u52a0\n        CustomDictionary.add(\"\u653b\u57ce\u72ee\");\n        // \u5f3a\u884c\u63d2\u5165\n        CustomDictionary.insert(\"\u767d\u5bcc\u7f8e\", \"nz 1024\");\n        // \u5220\u9664\u8bcd\u8bed\uff08\u6ce8\u91ca\u6389\u8bd5\u8bd5\uff09\n//        CustomDictionary.remove(\"\u653b\u57ce\u72ee\");\n        System.out.println(CustomDictionary.add(\"\u5355\u8eab\u72d7\", \"nz 1024 n 1\"));\n        System.out.println(CustomDictionary.get(\"\u5355\u8eab\u72d7\"));\n\n        String text = \"\u653b\u57ce\u72ee\u9006\u88ad\u5355\u8eab\u72d7\uff0c\u8fce\u5a36\u767d\u5bcc\u7f8e\uff0c\u8d70\u4e0a\u4eba\u751f\u5dc5\u5cf0\";  // \u600e\u4e48\u53ef\u80fd\u5657\u54c8\u54c8\uff01\n\n        // AhoCorasickDoubleArrayTrie\u81ea\u52a8\u673a\u5206\u8bcd\n        final char[] charArray = text.toCharArray();\n        CustomDictionary.parseText(charArray, new AhoCorasickDoubleArrayTrie.IHit<CoreDictionary.Attribute>()\n        {\n            @Override\n            public void hit(int begin, int end, CoreDictionary.Attribute value)\n            {\n                System.out.printf(\"[%d:%d]=%s %s\\n\", begin, end, new String(charArray, begin, end - begin), value);\n            }\n        });\n        // trie\u6811\u5206\u8bcd\n        BaseSearcher searcher = CustomDictionary.getSearcher(text);\n        Map.Entry entry;\n        while ((entry = searcher.next()) != null)\n        {\n            System.out.println(entry);\n        }\n\n        // \u6807\u51c6\u5206\u8bcd\n        System.out.println(HanLP.segment(text));\n    }\n}\n```\n- \u8bf4\u660e\n  * `CustomDictionary`\u662f\u4e00\u4efd\u5168\u5c40\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u53ef\u4ee5\u968f\u65f6\u589e\u5220\uff0c\u5f71\u54cd\u5168\u90e8\u5206\u8bcd\u5668\u3002\n  * \u53e6\u5916\u53ef\u4ee5\u5728\u4efb\u4f55\u5206\u8bcd\u5668\u4e2d\u5173\u95ed\u5b83\u3002\u901a\u8fc7\u4ee3\u7801\u52a8\u6001\u589e\u5220\u4e0d\u4f1a\u4fdd\u5b58\u5230\u8bcd\u5178\u6587\u4ef6\u3002\n- \u8ffd\u52a0\u8bcd\u5178\n  * `CustomDictionary`\u4e3b\u8bcd\u5178\u6587\u672c\u8def\u5f84\u662f`data/dictionary/custom/CustomDictionary.txt`\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u6b64\u589e\u52a0\u81ea\u5df1\u7684\u8bcd\u8bed\uff08\u4e0d\u63a8\u8350\uff09\uff1b\u4e5f\u53ef\u4ee5\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6`CustomDictionaryPath=data/dictionary/custom/CustomDictionary.txt; \u6211\u7684\u8bcd\u5178.txt;`\u6765\u8ffd\u52a0\u8bcd\u5178\uff08\u63a8\u8350\uff09\u3002\n  * \u59cb\u7ec8\u5efa\u8bae\u5c06\u76f8\u540c\u8bcd\u6027\u7684\u8bcd\u8bed\u653e\u5230\u540c\u4e00\u4e2a\u8bcd\u5178\u6587\u4ef6\u91cc\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u5206\u4eab\u3002\n- \u8bcd\u5178\u683c\u5f0f\n  * \u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u5355\u8bcd\uff0c\u683c\u5f0f\u9075\u4ece`[\u5355\u8bcd] [\u8bcd\u6027A] [A\u7684\u9891\u6b21] [\u8bcd\u6027B] [B\u7684\u9891\u6b21] ...` \u5982\u679c\u4e0d\u586b\u8bcd\u6027\u5219\u8868\u793a\u91c7\u7528\u8bcd\u5178\u7684\u9ed8\u8ba4\u8bcd\u6027\u3002\n  * \u8bcd\u5178\u7684\u9ed8\u8ba4\u8bcd\u6027\u9ed8\u8ba4\u662f\u540d\u8bcdn\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\uff1a`\u5168\u56fd\u5730\u540d\u5927\u5168.txt ns;`\u5982\u679c\u8bcd\u5178\u8def\u5f84\u540e\u9762\u7a7a\u683c\u7d27\u63a5\u7740\u8bcd\u6027\uff0c\u5219\u8be5\u8bcd\u5178\u9ed8\u8ba4\u662f\u8be5\u8bcd\u6027\u3002\n  * \u5728\u57fa\u4e8e\u5c42\u53e0\u9690\u9a6c\u6a21\u578b\u7684\u6700\u77ed\u8def\u5206\u8bcd\u4e2d\uff0c\u5e76\u4e0d\u4fdd\u8bc1\u81ea\u5b9a\u4e49\u8bcd\u5178\u4e2d\u7684\u8bcd\u4e00\u5b9a\u88ab\u5207\u5206\u51fa\u6765\u3002\n  * \u5173\u4e8e\u7528\u6237\u8bcd\u5178\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003**\u8bcd\u5178\u8bf4\u660e**\u4e00\u7ae0\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300aTrie\u6811\u5206\u8bcd\u300b](http://www.hankcs.com/program/java/tire-tree-participle.html)\n  * [\u300aAho Corasick\u81ea\u52a8\u673a\u7ed3\u5408DoubleArrayTrie\u6781\u901f\u591a\u6a21\u5f0f\u5339\u914d\u300b](http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html)\n\n### 9. \u4e2d\u56fd\u4eba\u540d\u8bc6\u522b\n\n```java\nString[] testCase = new String[]{\n        \"\u7b7e\u7ea6\u4eea\u5f0f\u524d\uff0c\u79e6\u5149\u8363\u3001\u674e\u7eaa\u6052\u3001\u4ec7\u548c\u7b49\u4e00\u540c\u4f1a\u89c1\u4e86\u53c2\u52a0\u7b7e\u7ea6\u7684\u4f01\u4e1a\u5bb6\u3002\",\n        \"\u738b\u56fd\u5f3a\u3001\u9ad8\u5cf0\u3001\u6c6a\u6d0b\u3001\u5f20\u671d\u9633\u5149\u7740\u5934\u3001\u97e9\u5bd2\u3001\u5c0f\u56db\",\n        \"\u5f20\u6d69\u548c\u80e1\u5065\u5eb7\u590d\u5458\u56de\u5bb6\u4e86\",\n        \"\u738b\u603b\u548c\u5c0f\u4e3d\u7ed3\u5a5a\u4e86\",\n        \"\u7f16\u5267\u90b5\u94a7\u6797\u548c\u7a3d\u9053\u9752\u8bf4\",\n        \"\u8fd9\u91cc\u6709\u5173\u5929\u57f9\u7684\u6709\u5173\u4e8b\u8ff9\",\n        \"\u9f9a\u5b66\u5e73\u7b49\u9886\u5bfc,\u9093\u9896\u8d85\u751f\u524d\",\n        };\nSegment segment = HanLP.newSegment().enableNameRecognize(true);\nfor (String sentence : testCase)\n{\n    List<Term> termList = segment.seg(sentence);\n    System.out.println(termList);\n}\n```\n- \u8bf4\u660e\n  * \u76ee\u524d\u5206\u8bcd\u5668\u57fa\u672c\u4e0a\u90fd\u9ed8\u8ba4\u5f00\u542f\u4e86\u4e2d\u56fd\u4eba\u540d\u8bc6\u522b\uff0c\u6bd4\u5982`HanLP.segment()`\u63a5\u53e3\u4e2d\u4f7f\u7528\u7684\u5206\u8bcd\u5668\u7b49\u7b49\uff0c\u7528\u6237\u4e0d\u5fc5\u624b\u52a8\u5f00\u542f\uff1b\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u662f\u4e3a\u4e86\u5f3a\u8c03\u3002\n  * \u6709\u4e00\u5b9a\u7684\u8bef\u547d\u4e2d\u7387\uff0c\u6bd4\u5982\u8bef\u547d\u4e2d`\u5173\u952e\u5e74`\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5728`data/dictionary/person/nr.txt`\u52a0\u5165\u4e00\u6761`\u5173\u952e\u5e74 A 1`\u6765\u6392\u9664`\u5173\u952e\u5e74`\u4f5c\u4e3a\u4eba\u540d\u7684\u53ef\u80fd\u6027\uff0c\u4e5f\u53ef\u4ee5\u5c06`\u5173\u952e\u5e74`\u4f5c\u4e3a\u65b0\u8bcd\u767b\u8bb0\u5230\u81ea\u5b9a\u4e49\u8bcd\u5178\u4e2d\u3002\n  * \u5982\u679c\u4f60\u901a\u8fc7\u4e0a\u8ff0\u529e\u6cd5\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u6b22\u8fce\u5411\u6211\u63d0\u4ea4pull request\uff0c\u8bcd\u5178\u4e5f\u662f\u5b9d\u8d35\u7684\u8d22\u5bcc\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u5b9e\u6218HMM-Viterbi\u89d2\u8272\u6807\u6ce8\u4e2d\u56fd\u4eba\u540d\u8bc6\u522b\u300b](http://www.hankcs.com/nlp/chinese-name-recognition-in-actual-hmm-viterbi-role-labeling.html)\n\n### 10. \u97f3\u8bd1\u4eba\u540d\u8bc6\u522b\n\n```java\nString[] testCase = new String[]{\n                \"\u4e00\u6876\u51b0\u6c34\u5f53\u5934\u5012\u4e0b\uff0c\u5fae\u8f6f\u7684\u6bd4\u5c14\u76d6\u8328\u3001Facebook\u7684\u624e\u514b\u4f2f\u683c\u8ddf\u6851\u5fb7\u535a\u683c\u3001\u4e9a\u9a6c\u900a\u7684\u8d1d\u7d22\u65af\u3001\u82f9\u679c\u7684\u5e93\u514b\u5168\u90fd\u4e0d\u60dc\u6e7f\u8eab\u5165\u955c\uff0c\u8fd9\u4e9b\u7845\u8c37\u7684\u79d1\u6280\u4eba\uff0c\u98de\u86fe\u6251\u706b\u4f3c\u5730\u727a\u7272\u6f14\u51fa\uff0c\u5176\u5b9e\u5168\u4e3a\u4e86\u6148\u5584\u3002\",\n                \"\u4e16\u754c\u4e0a\u6700\u957f\u7684\u59d3\u540d\u662f\u7b80\u68ee\u00b7\u4e54\u4f0a\u00b7\u4e9a\u5386\u5c71\u5927\u00b7\u6bd4\u57fa\u00b7\u5361\u5229\u65af\u52d2\u00b7\u8fbe\u592b\u00b7\u57c3\u5229\u5965\u7279\u00b7\u798f\u514b\u65af\u00b7\u4f0a\u7ef4\u9c81\u83ab\u00b7\u9a6c\u5c14\u5c3c\u00b7\u6885\u5c14\u65af\u00b7\u5e15\u7279\u68ee\u00b7\u6c64\u666e\u68ee\u00b7\u534e\u83b1\u58eb\u00b7\u666e\u96f7\u65af\u987f\u3002\",\n        };\nSegment segment = HanLP.newSegment().enableTranslatedNameRecognize(true);\nfor (String sentence : testCase)\n{\n    List<Term> termList = segment.seg(sentence);\n    System.out.println(termList);\n}\n```\n- \u8bf4\u660e\n  * \u76ee\u524d\u5206\u8bcd\u5668\u57fa\u672c\u4e0a\u90fd\u9ed8\u8ba4\u5f00\u542f\u4e86\u97f3\u8bd1\u4eba\u540d\u8bc6\u522b\uff0c\u7528\u6237\u4e0d\u5fc5\u624b\u52a8\u5f00\u542f\uff1b\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u662f\u4e3a\u4e86\u5f3a\u8c03\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u5c42\u53e0\u9690\u9a6c\u6a21\u578b\u4e0b\u7684\u97f3\u8bd1\u4eba\u540d\u548c\u65e5\u672c\u4eba\u540d\u8bc6\u522b\u300b](http://www.hankcs.com/nlp/name-transliteration-cascaded-hidden-markov-model-and-japanese-personal-names-recognition.html)\n\n### 11. \u65e5\u672c\u4eba\u540d\u8bc6\u522b\n\n```java\nString[] testCase = new String[]{\n        \"\u5317\u5ddd\u666f\u5b50\u53c2\u6f14\u4e86\u6797\u8be3\u5f6c\u5bfc\u6f14\u7684\u300a\u901f\u5ea6\u4e0e\u6fc0\u60c53\u300b\",\n        \"\u6797\u5fd7\u73b2\u4eae\u76f8\u7f51\u53cb:\u786e\u5b9a\u4e0d\u662f\u6ce2\u591a\u91ce\u7ed3\u8863\uff1f\",\n};\nSegment segment = HanLP.newSegment().enableJapaneseNameRecognize(true);\nfor (String sentence : testCase)\n{\n    List<Term> termList = segment.seg(sentence);\n    System.out.println(termList);\n}\n```\n- \u8bf4\u660e\n  * \u76ee\u524d\u6807\u51c6\u5206\u8bcd\u5668\u9ed8\u8ba4\u5173\u95ed\u4e86\u65e5\u672c\u4eba\u540d\u8bc6\u522b\uff0c\u7528\u6237\u9700\u8981\u624b\u52a8\u5f00\u542f\uff1b\u8fd9\u662f\u56e0\u4e3a\u65e5\u672c\u4eba\u540d\u7684\u51fa\u73b0\u9891\u7387\u8f83\u4f4e\uff0c\u4f46\u662f\u53c8\u6d88\u8017\u6027\u80fd\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u5c42\u53e0\u9690\u9a6c\u6a21\u578b\u4e0b\u7684\u97f3\u8bd1\u4eba\u540d\u548c\u65e5\u672c\u4eba\u540d\u8bc6\u522b\u300b](http://www.hankcs.com/nlp/name-transliteration-cascaded-hidden-markov-model-and-japanese-personal-names-recognition.html)\n\n### 12. \u5730\u540d\u8bc6\u522b\n\n```java\nString[] testCase = new String[]{\n        \"\u6b66\u80dc\u53bf\u65b0\u5b66\u4e61\u653f\u5e9c\u5927\u697c\u95e8\u524d\u9523\u9f13\u55a7\u5929\",\n        \"\u84dd\u7fd4\u7ed9\u5b81\u590f\u56fa\u539f\u5e02\u5f6d\u9633\u53bf\u7ea2\u6cb3\u9547\u9ed1\u725b\u6c9f\u6751\u6350\u8d60\u4e86\u6316\u6398\u673a\",\n};\nSegment segment = HanLP.newSegment().enablePlaceRecognize(true);\nfor (String sentence : testCase)\n{\n    List<Term> termList = segment.seg(sentence);\n    System.out.println(termList);\n}\n```\n- \u8bf4\u660e\n  * \u76ee\u524d\u6807\u51c6\u5206\u8bcd\u5668\u90fd\u9ed8\u8ba4\u5173\u95ed\u4e86\u5730\u540d\u8bc6\u522b\uff0c\u7528\u6237\u9700\u8981\u624b\u52a8\u5f00\u542f\uff1b\u8fd9\u662f\u56e0\u4e3a\u6d88\u8017\u6027\u80fd\uff0c\u5176\u5b9e\u591a\u6570\u5730\u540d\u90fd\u6536\u5f55\u5728\u6838\u5fc3\u8bcd\u5178\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u4e2d\u3002\n  * \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u80fd\u9760\u8bcd\u5178\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u9760\u8bcd\u5178\u89e3\u51b3\uff0c\u8fd9\u662f\u6700\u9ad8\u6548\u7a33\u5b9a\u7684\u65b9\u6cd5\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u5b9e\u6218HMM-Viterbi\u89d2\u8272\u6807\u6ce8\u5730\u540d\u8bc6\u522b\u300b](http://www.hankcs.com/nlp/ner/place-names-to-identify-actual-hmm-viterbi-role-labeling.html)\n\n### 13. \u673a\u6784\u540d\u8bc6\u522b\n\n```java\nString[] testCase = new String[]{\n    \"\u6211\u5728\u4e0a\u6d77\u6797\u539f\u79d1\u6280\u6709\u9650\u516c\u53f8\u517c\u804c\u5de5\u4f5c\uff0c\",\n    \"\u6211\u7ecf\u5e38\u5728\u53f0\u5ddd\u559c\u5bb4\u9910\u5385\u5403\u996d\uff0c\",\n    \"\u5076\u5c14\u53bb\u5730\u4e2d\u6d77\u5f71\u57ce\u770b\u7535\u5f71\u3002\",\n};\nSegment segment = HanLP.newSegment().enableOrganizationRecognize(true);\nfor (String sentence : testCase)\n{\n    List<Term> termList = segment.seg(sentence);\n    System.out.println(termList);\n}\n```\n- \u8bf4\u660e\n  * \u76ee\u524d\u5206\u8bcd\u5668\u9ed8\u8ba4\u5173\u95ed\u4e86\u673a\u6784\u540d\u8bc6\u522b\uff0c\u7528\u6237\u9700\u8981\u624b\u52a8\u5f00\u542f\uff1b\u8fd9\u662f\u56e0\u4e3a\u6d88\u8017\u6027\u80fd\uff0c\u5176\u5b9e\u5e38\u7528\u673a\u6784\u540d\u90fd\u6536\u5f55\u5728\u6838\u5fc3\u8bcd\u5178\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u4e2d\u3002\n  * HanLP\u7684\u76ee\u7684\u4e0d\u662f\u6f14\u793a\u52a8\u6001\u8bc6\u522b\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u80fd\u9760\u8bcd\u5178\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u9760\u8bcd\u5178\u89e3\u51b3\uff0c\u8fd9\u662f\u6700\u9ad8\u6548\u7a33\u5b9a\u7684\u65b9\u6cd5\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u5c42\u53e0HMM-Viterbi\u89d2\u8272\u6807\u6ce8\u6a21\u578b\u4e0b\u7684\u673a\u6784\u540d\u8bc6\u522b\u300b](http://www.hankcs.com/nlp/ner/place-name-recognition-model-of-the-stacked-hmm-viterbi-role-labeling.html)\n\n### 14. \u5173\u952e\u8bcd\u63d0\u53d6\n\n```java\nString content = \"\u7a0b\u5e8f\u5458(\u82f1\u6587Programmer)\u662f\u4ece\u4e8b\u7a0b\u5e8f\u5f00\u53d1\u3001\u7ef4\u62a4\u7684\u4e13\u4e1a\u4eba\u5458\u3002\u4e00\u822c\u5c06\u7a0b\u5e8f\u5458\u5206\u4e3a\u7a0b\u5e8f\u8bbe\u8ba1\u4eba\u5458\u548c\u7a0b\u5e8f\u7f16\u7801\u4eba\u5458\uff0c\u4f46\u4e24\u8005\u7684\u754c\u9650\u5e76\u4e0d\u975e\u5e38\u6e05\u695a\uff0c\u7279\u522b\u662f\u5728\u4e2d\u56fd\u3002\u8f6f\u4ef6\u4ece\u4e1a\u4eba\u5458\u5206\u4e3a\u521d\u7ea7\u7a0b\u5e8f\u5458\u3001\u9ad8\u7ea7\u7a0b\u5e8f\u5458\u3001\u7cfb\u7edf\u5206\u6790\u5458\u548c\u9879\u76ee\u7ecf\u7406\u56db\u5927\u7c7b\u3002\";\nList<String> keywordList = HanLP.extractKeyword(content, 5);\nSystem.out.println(keywordList);\n```\n- \u8bf4\u660e\n  * \u5185\u90e8\u91c7\u7528`TextRankKeyword`\u5b9e\u73b0\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528`TextRankKeyword.getKeywordList(document, size)`\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300aTextRank\u7b97\u6cd5\u63d0\u53d6\u5173\u952e\u8bcd\u7684Java\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/textrank-algorithm-to-extract-the-keywords-java-implementation.html)\n\n### 15. \u81ea\u52a8\u6458\u8981\n\n```java\nString document = \"\u7b97\u6cd5\u53ef\u5927\u81f4\u5206\u4e3a\u57fa\u672c\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u7684\u7b97\u6cd5\u3001\u6570\u8bba\u7b97\u6cd5\u3001\u8ba1\u7b97\u51e0\u4f55\u7684\u7b97\u6cd5\u3001\u56fe\u7684\u7b97\u6cd5\u3001\u52a8\u6001\u89c4\u5212\u4ee5\u53ca\u6570\u503c\u5206\u6790\u3001\u52a0\u5bc6\u7b97\u6cd5\u3001\u6392\u5e8f\u7b97\u6cd5\u3001\u68c0\u7d22\u7b97\u6cd5\u3001\u968f\u673a\u5316\u7b97\u6cd5\u3001\u5e76\u884c\u7b97\u6cd5\u3001\u5384\u7c73\u53d8\u5f62\u6a21\u578b\u3001\u968f\u673a\u68ee\u6797\u7b97\u6cd5\u3002\\n\" +\n        \"\u7b97\u6cd5\u53ef\u4ee5\u5bbd\u6cdb\u7684\u5206\u4e3a\u4e09\u7c7b\uff0c\\n\" +\n        \"\u4e00\uff0c\u6709\u9650\u7684\u786e\u5b9a\u6027\u7b97\u6cd5\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5728\u6709\u9650\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u7ec8\u6b62\u3002\u4ed6\u4eec\u53ef\u80fd\u8981\u82b1\u5f88\u957f\u65f6\u95f4\u6765\u6267\u884c\u6307\u5b9a\u7684\u4efb\u52a1\uff0c\u4f46\u4ecd\u5c06\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u5185\u7ec8\u6b62\u3002\u8fd9\u7c7b\u7b97\u6cd5\u5f97\u51fa\u7684\u7ed3\u679c\u5e38\u53d6\u51b3\u4e8e\u8f93\u5165\u503c\u3002\\n\" +\n        \"\u4e8c\uff0c\u6709\u9650\u7684\u975e\u786e\u5b9a\u7b97\u6cd5\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u7ec8\u6b62\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\uff08\u6216\u4e00\u4e9b\uff09\u7ed9\u5b9a\u7684\u6570\u503c\uff0c\u7b97\u6cd5\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u6216\u786e\u5b9a\u7684\u3002\\n\" +\n        \"\u4e09\uff0c\u65e0\u9650\u7684\u7b97\u6cd5\uff0c\u662f\u90a3\u4e9b\u7531\u4e8e\u6ca1\u6709\u5b9a\u4e49\u7ec8\u6b62\u5b9a\u4e49\u6761\u4ef6\uff0c\u6216\u5b9a\u4e49\u7684\u6761\u4ef6\u65e0\u6cd5\u7531\u8f93\u5165\u7684\u6570\u636e\u6ee1\u8db3\u800c\u4e0d\u7ec8\u6b62\u8fd0\u884c\u7684\u7b97\u6cd5\u3002\u901a\u5e38\uff0c\u65e0\u9650\u7b97\u6cd5\u7684\u4ea7\u751f\u662f\u7531\u4e8e\u672a\u80fd\u786e\u5b9a\u7684\u5b9a\u4e49\u7ec8\u6b62\u6761\u4ef6\u3002\";\nList<String> sentenceList = HanLP.extractSummary(document, 3);\nSystem.out.println(sentenceList);\n```\n- \u8bf4\u660e\n  * \u5185\u90e8\u91c7\u7528`TextRankSentence`\u5b9e\u73b0\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528`TextRankSentence.getTopSentenceList(document, size)`\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300aTextRank\u7b97\u6cd5\u81ea\u52a8\u6458\u8981\u7684Java\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/textrank-algorithm-java-implementation-of-automatic-abstract.html)\n\n### 16. \u77ed\u8bed\u63d0\u53d6\n\n```java\nString text = \"\u7b97\u6cd5\u5de5\u7a0b\u5e08\\n\" +\n                \"\u7b97\u6cd5\uff08Algorithm\uff09\u662f\u4e00\u7cfb\u5217\u89e3\u51b3\u95ee\u9898\u7684\u6e05\u6670\u6307\u4ee4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u80fd\u591f\u5bf9\u4e00\u5b9a\u89c4\u8303\u7684\u8f93\u5165\uff0c\u5728\u6709\u9650\u65f6\u95f4\u5185\u83b7\u5f97\u6240\u8981\u6c42\u7684\u8f93\u51fa\u3002\u5982\u679c\u4e00\u4e2a\u7b97\u6cd5\u6709\u7f3a\u9677\uff0c\u6216\u4e0d\u9002\u5408\u4e8e\u67d0\u4e2a\u95ee\u9898\uff0c\u6267\u884c\u8fd9\u4e2a\u7b97\u6cd5\u5c06\u4e0d\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0d\u540c\u7684\u7b97\u6cd5\u53ef\u80fd\u7528\u4e0d\u540c\u7684\u65f6\u95f4\u3001\u7a7a\u95f4\u6216\u6548\u7387\u6765\u5b8c\u6210\u540c\u6837\u7684\u4efb\u52a1\u3002\u4e00\u4e2a\u7b97\u6cd5\u7684\u4f18\u52a3\u53ef\u4ee5\u7528\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0e\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u8861\u91cf\u3002\u7b97\u6cd5\u5de5\u7a0b\u5e08\u5c31\u662f\u5229\u7528\u7b97\u6cd5\u5904\u7406\u4e8b\u7269\u7684\u4eba\u3002\\n\" +\n                \"\\n\" +\n                \"1\u804c\u4f4d\u7b80\u4ecb\\n\" +\n                \"\u7b97\u6cd5\u5de5\u7a0b\u5e08\u662f\u4e00\u4e2a\u975e\u5e38\u9ad8\u7aef\u7684\u804c\u4f4d\uff1b\\n\" +\n                \"\u4e13\u4e1a\u8981\u6c42\uff1a\u8ba1\u7b97\u673a\u3001\u7535\u5b50\u3001\u901a\u4fe1\u3001\u6570\u5b66\u7b49\u76f8\u5173\u4e13\u4e1a\uff1b\\n\" +\n                \"\u5b66\u5386\u8981\u6c42\uff1a\u672c\u79d1\u53ca\u5176\u4ee5\u4e0a\u7684\u5b66\u5386\uff0c\u5927\u591a\u6570\u662f\u7855\u58eb\u5b66\u5386\u53ca\u5176\u4ee5\u4e0a\uff1b\\n\" +\n                \"\u8bed\u8a00\u8981\u6c42\uff1a\u82f1\u8bed\u8981\u6c42\u662f\u719f\u7ec3\uff0c\u57fa\u672c\u4e0a\u80fd\u9605\u8bfb\u56fd\u5916\u4e13\u4e1a\u4e66\u520a\uff1b\\n\" +\n                \"\u5fc5\u987b\u638c\u63e1\u8ba1\u7b97\u673a\u76f8\u5173\u77e5\u8bc6\uff0c\u719f\u7ec3\u4f7f\u7528\u4eff\u771f\u5de5\u5177MATLAB\u7b49\uff0c\u5fc5\u987b\u4f1a\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u3002\\n\" +\n                \"\\n\" +\n                \"2\u7814\u7a76\u65b9\u5411\\n\" +\n                \"\u89c6\u9891\u7b97\u6cd5\u5de5\u7a0b\u5e08\u3001\u56fe\u50cf\u5904\u7406\u7b97\u6cd5\u5de5\u7a0b\u5e08\u3001\u97f3\u9891\u7b97\u6cd5\u5de5\u7a0b\u5e08 \u901a\u4fe1\u57fa\u5e26\u7b97\u6cd5\u5de5\u7a0b\u5e08\\n\" +\n                \"\\n\" +\n                \"3\u76ee\u524d\u56fd\u5185\u5916\u72b6\u51b5\\n\" +\n                \"\u76ee\u524d\u56fd\u5185\u4ece\u4e8b\u7b97\u6cd5\u7814\u7a76\u7684\u5de5\u7a0b\u5e08\u4e0d\u5c11\uff0c\u4f46\u662f\u9ad8\u7ea7\u7b97\u6cd5\u5de5\u7a0b\u5e08\u5374\u5f88\u5c11\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u7d27\u7f3a\u7684\u4e13\u4e1a\u5de5\u7a0b\u5e08\u3002\u7b97\u6cd5\u5de5\u7a0b\u5e08\u6839\u636e\u7814\u7a76\u9886\u57df\u6765\u5206\u4e3b\u8981\u6709\u97f3\u9891/\u89c6\u9891\u7b97\u6cd5\u5904\u7406\u3001\u56fe\u50cf\u6280\u672f\u65b9\u9762\u7684\u4e8c\u7ef4\u4fe1\u606f\u7b97\u6cd5\u5904\u7406\u548c\u901a\u4fe1\u7269\u7406\u5c42\u3001\u96f7\u8fbe\u4fe1\u53f7\u5904\u7406\u3001\u751f\u7269\u533b\u5b66\u4fe1\u53f7\u5904\u7406\u7b49\u9886\u57df\u7684\u4e00\u7ef4\u4fe1\u606f\u7b97\u6cd5\u5904\u7406\u3002\\n\" +\n                \"\u5728\u8ba1\u7b97\u673a\u97f3\u89c6\u9891\u548c\u56fe\u5f62\u56fe\u50cf\u6280\u672f\u7b49\u4e8c\u7ef4\u4fe1\u606f\u7b97\u6cd5\u5904\u7406\u65b9\u9762\u76ee\u524d\u6bd4\u8f83\u5148\u8fdb\u7684\u89c6\u9891\u5904\u7406\u7b97\u6cd5\uff1a\u673a\u5668\u89c6\u89c9\u6210\u4e3a\u6b64\u7c7b\u7b97\u6cd5\u7814\u7a76\u7684\u6838\u5fc3\uff1b\u53e6\u5916\u8fd8\u67092D\u8f6c3D\u7b97\u6cd5(2D-to-3D conversion)\uff0c\u53bb\u9694\u884c\u7b97\u6cd5(de-interlacing)\uff0c\u8fd0\u52a8\u4f30\u8ba1\u8fd0\u52a8\u8865\u507f\u7b97\u6cd5(Motion estimation/Motion Compensation)\uff0c\u53bb\u566a\u7b97\u6cd5(Noise Reduction)\uff0c\u7f29\u653e\u7b97\u6cd5(scaling)\uff0c\u9510\u5316\u5904\u7406\u7b97\u6cd5(Sharpness)\uff0c\u8d85\u5206\u8fa8\u7387\u7b97\u6cd5(Super Resolution),\u624b\u52bf\u8bc6\u522b(gesture recognition),\u4eba\u8138\u8bc6\u522b(face recognition)\u3002\\n\" +\n                \"\u5728\u901a\u4fe1\u7269\u7406\u5c42\u7b49\u4e00\u7ef4\u4fe1\u606f\u9886\u57df\u76ee\u524d\u5e38\u7528\u7684\u7b97\u6cd5\uff1a\u65e0\u7ebf\u9886\u57df\u7684RRM\u3001RTT\uff0c\u4f20\u9001\u9886\u57df\u7684\u8c03\u5236\u89e3\u8c03\u3001\u4fe1\u9053\u5747\u8861\u3001\u4fe1\u53f7\u68c0\u6d4b\u3001\u7f51\u7edc\u4f18\u5316\u3001\u4fe1\u53f7\u5206\u89e3\u7b49\u3002\\n\" +\n                \"\u53e6\u5916\u6570\u636e\u6316\u6398\u3001\u4e92\u8054\u7f51\u641c\u7d22\u7b97\u6cd5\u4e5f\u6210\u4e3a\u5f53\u4eca\u7684\u70ed\u95e8\u65b9\u5411\u3002\\n\" +\n                \"\u7b97\u6cd5\u5de5\u7a0b\u5e08\u9010\u6e10\u5f80\u4eba\u5de5\u667a\u80fd\u65b9\u5411\u53d1\u5c55\u3002\";\nList<String> phraseList = HanLP.extractPhrase(text, 10);\nSystem.out.println(phraseList);\n```\n- \u8bf4\u660e\n  * \u5185\u90e8\u91c7\u7528`MutualInformationEntropyPhraseExtractor`\u5b9e\u73b0\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528`MutualInformationEntropyPhraseExtractor.extractPhrase(text, size)`\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u57fa\u4e8e\u4e92\u4fe1\u606f\u548c\u5de6\u53f3\u4fe1\u606f\u71b5\u7684\u77ed\u8bed\u63d0\u53d6\u8bc6\u522b\u300b](http://www.hankcs.com/nlp/extraction-and-identification-of-mutual-information-about-the-phrase-based-on-information-entropy.html)\n\n### 17. \u62fc\u97f3\u8f6c\u6362\n\n```java\n/**\n * \u6c49\u5b57\u8f6c\u62fc\u97f3\n * @author hankcs\n */\npublic class DemoPinyin\n{\n    public static void main(String[] args)\n    {\n        String text = \"\u91cd\u8f7d\u4e0d\u662f\u91cd\u4efb\";\n        List<Pinyin> pinyinList = HanLP.convertToPinyinList(text);\n        System.out.print(\"\u539f\u6587,\");\n        for (char c : text.toCharArray())\n        {\n            System.out.printf(\"%c,\", c);\n        }\n        System.out.println();\n\n        System.out.print(\"\u62fc\u97f3\uff08\u6570\u5b57\u97f3\u8c03\uff09,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin);\n        }\n        System.out.println();\n\n        System.out.print(\"\u62fc\u97f3\uff08\u7b26\u53f7\u97f3\u8c03\uff09,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin.getPinyinWithToneMark());\n        }\n        System.out.println();\n\n        System.out.print(\"\u62fc\u97f3\uff08\u65e0\u97f3\u8c03\uff09,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin.getPinyinWithoutTone());\n        }\n        System.out.println();\n\n        System.out.print(\"\u58f0\u8c03,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin.getTone());\n        }\n        System.out.println();\n\n        System.out.print(\"\u58f0\u6bcd,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin.getShengmu());\n        }\n        System.out.println();\n\n        System.out.print(\"\u97f5\u6bcd,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin.getYunmu());\n        }\n        System.out.println();\n\n        System.out.print(\"\u8f93\u5165\u6cd5\u5934,\");\n        for (Pinyin pinyin : pinyinList)\n        {\n            System.out.printf(\"%s,\", pinyin.getHead());\n        }\n        System.out.println();\n    }\n}\n```\n- \u8bf4\u660e\n  * **HanLP**\u4e0d\u4ec5\u652f\u6301\u57fa\u7840\u7684\u6c49\u5b57\u8f6c\u62fc\u97f3\uff0c\u8fd8\u652f\u6301\u58f0\u6bcd\u3001\u97f5\u6bcd\u3001\u97f3\u8c03\u3001\u97f3\u6807\u548c\u8f93\u5165\u6cd5\u9996\u5b57\u6bcd\u9996\u58f0\u6bcd\u529f\u80fd\u3002\n  * **HanLP**\u80fd\u591f\u8bc6\u522b\u591a\u97f3\u5b57\uff0c\u4e5f\u80fd\u7ed9\u7e41\u4f53\u4e2d\u6587\u6ce8\u62fc\u97f3\u3002\n  * \u6700\u91cd\u8981\u7684\u662f\uff0c**HanLP**\u91c7\u7528\u7684\u6a21\u5f0f\u5339\u914d\u5347\u7ea7\u5230`AhoCorasickDoubleArrayTrie`\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\uff0c\u80fd\u591f\u63d0\u4f9b\u6beb\u79d2\u7ea7\u7684\u54cd\u5e94\u901f\u5ea6\uff01\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u6c49\u5b57\u8f6c\u62fc\u97f3\u4e0e\u7b80\u7e41\u8f6c\u6362\u7684Java\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/java-chinese-characters-to-pinyin-and-simplified-conversion-realization.html#h2-17)\n\n### 18. \u7b80\u7e41\u8f6c\u6362\n\n```java\n/**\n * \u7b80\u7e41\u8f6c\u6362\n * @author hankcs\n */\npublic class DemoTraditionalChinese2SimplifiedChinese\n{\n    public static void main(String[] args)\n    {\n        System.out.println(HanLP.convertToTraditionalChinese(\"\u7528\u7b14\u8bb0\u672c\u7535\u8111\u5199\u7a0b\u5e8f\"));\n        System.out.println(HanLP.convertToSimplifiedChinese(\"\u300c\u4ee5\u5f8c\u7b49\u59b3\u7576\u4e0a\u7687\u540e\uff0c\u5c31\u80fd\u8cb7\u58eb\u591a\u5564\u68a8\u6176\u795d\u4e86\u300d\"));\n    }\n}\n```\n- \u8bf4\u660e\n  * **HanLP**\u80fd\u591f\u8bc6\u522b\u7b80\u7e41\u5206\u6b67\u8bcd\uff0c\u6bd4\u5982`\u6253\u5370\u673a=\u5370\u8868\u6a5f`\u3002\u8bb8\u591a\u7b80\u7e41\u8f6c\u6362\u5de5\u5177\u4e0d\u80fd\u533a\u5206\u201c\u4ee5\u540e\u201d\u201c\u7687\u540e\u201d\u4e2d\u7684\u4e24\u4e2a\u201c\u540e\u201d\u5b57\uff0c**HanLP**\u53ef\u4ee5\u3002\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u6c49\u5b57\u8f6c\u62fc\u97f3\u4e0e\u7b80\u7e41\u8f6c\u6362\u7684Java\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/java-chinese-characters-to-pinyin-and-simplified-conversion-realization.html#h2-17)\n\n### 19. \u6587\u672c\u63a8\u8350\n\n```java\n/**\n * \u6587\u672c\u63a8\u8350(\u53e5\u5b50\u7ea7\u522b\uff0c\u4ece\u4e00\u7cfb\u5217\u53e5\u5b50\u4e2d\u6311\u51fa\u4e0e\u8f93\u5165\u53e5\u5b50\u6700\u76f8\u4f3c\u7684\u90a3\u4e00\u4e2a)\n * @author hankcs\n */\npublic class DemoSuggester\n{\n    public static void main(String[] args)\n    {\n        Suggester suggester = new Suggester();\n        String[] titleArray =\n        (\n                \"\u5a01\u5ec9\u738b\u5b50\u53d1\u8868\u6f14\u8bf4 \u547c\u5401\u4fdd\u62a4\u91ce\u751f\u52a8\u7269\\n\" +\n                \"\u300a\u65f6\u4ee3\u300b\u5e74\u5ea6\u4eba\u7269\u6700\u7ec8\u5165\u56f4\u540d\u5355\u51fa\u7089 \u666e\u4eac\u9a6c\u4e91\u5165\u9009\\n\" +\n                \"\u201c\u9ed1\u683c\u6bd4\u201d\u6a2a\u626b\u83f2\uff1a\u83f2\u5438\u53d6\u201c\u6d77\u71d5\u201d\u7ecf\u9a8c\u53ca\u65e9\u758f\u6563\\n\" +\n                \"\u65e5\u672c\u4fdd\u5bc6\u6cd5\u5c06\u6b63\u5f0f\u751f\u6548 \u65e5\u5a92\u6307\u5176\u635f\u5bb3\u56fd\u6c11\u77e5\u60c5\u6743\\n\" +\n                \"\u82f1\u62a5\u544a\u8bf4\u7a7a\u6c14\u6c61\u67d3\u5e26\u6765\u201c\u516c\u5171\u5065\u5eb7\u5371\u673a\u201d\"\n        ).split(\"\\\\n\");\n        for (String title : titleArray)\n        {\n            suggester.addSentence(title);\n        }\n\n        System.out.println(suggester.suggest(\"\u53d1\u8a00\", 1));       // \u8bed\u4e49\n        System.out.println(suggester.suggest(\"\u5371\u673a\u516c\u5171\", 1));   // \u5b57\u7b26\n        System.out.println(suggester.suggest(\"mayun\", 1));      // \u62fc\u97f3\n    }\n}\n```\n- \u8bf4\u660e\n  * \u5728\u641c\u7d22\u5f15\u64ce\u7684\u8f93\u5165\u6846\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u8bcd\uff0c\u641c\u7d22\u5f15\u64ce\u4f1a\u8054\u60f3\u51fa\u6700\u5408\u9002\u7684\u641c\u7d22\u8bcd\uff0c**HanLP**\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u7684\u529f\u80fd\u3002\n  * \u53ef\u4ee5\u52a8\u6001\u8c03\u8282\u6bcf\u79cd\u8bc6\u522b\u5668\u7684\u6743\u91cd\n\n### 20. \u8bed\u4e49\u8ddd\u79bb\n\n```java\n/**\n * \u8bed\u4e49\u8ddd\u79bb\n * @author hankcs\n */\npublic class DemoWordDistance\n{\n    public static void main(String[] args)\n    {\n        String[] wordArray = new String[]\n                {\n                        \"\u9999\u8549\",\n                        \"\u82f9\u679c\",\n                        \"\u767d\u83dc\",\n                        \"\u6c34\u679c\",\n                        \"\u852c\u83dc\",\n                        \"\u81ea\u884c\u8f66\",\n                        \"\u516c\u4ea4\u8f66\",\n                        \"\u98de\u673a\",\n                        \"\u4e70\",\n                        \"\u5356\",\n                        \"\u8d2d\u5165\",\n                        \"\u65b0\u5e74\",\n                        \"\u6625\u8282\",\n                        \"\u4e22\u5931\",\n                        \"\u8865\u529e\",\n                        \"\u529e\u7406\",\n                        \"\u9001\u7ed9\",\n                        \"\u5bfb\u627e\",\n                        \"\u5b69\u5b50\",\n                        \"\u6559\u5ba4\",\n                        \"\u6559\u5e08\",\n                        \"\u4f1a\u8ba1\",\n                };\n        for (String a : wordArray)\n        {\n            for (String b : wordArray)\n            {\n                System.out.println(a + \"\\t\" + b + \"\\t\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\\t\" + CoreSynonymDictionary.distance(a, b));\n            }\n        }\n    }\n}\n```\n- \u8bf4\u660e\n  * \u8bbe\u60f3\u7684\u5e94\u7528\u573a\u666f\u662f\u641c\u7d22\u5f15\u64ce\u5bf9\u8bcd\u4e49\u7684\u7406\u89e3\uff0c\u8bcd\u4e0e\u8bcd\u5e76\u4e0d\u53ea\u5b58\u5728\u201c\u540c\u4e49\u8bcd\u201d\u4e0e\u201c\u975e\u540c\u4e49\u8bcd\u201d\u7684\u5173\u7cfb\uff0c\u5c31\u7b97\u662f\u540c\u4e49\u8bcd\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u610f\u4e49\u4e5f\u662f\u6709\u5fae\u5999\u7684\u5dee\u522b\u7684\u3002\n- \u7b97\u6cd5\n  * \u4e3a\u6bcf\u4e2a\u8bcd\u5206\u914d\u4e00\u4e2a\u8bed\u4e49ID\uff0c\u8bcd\u4e0e\u8bcd\u7684\u8ddd\u79bb\u901a\u8fc7\u8bed\u4e49ID\u7684\u5dee\u5f97\u5230\u3002\u8bed\u4e49ID\u901a\u8fc7\u300a\u540c\u4e49\u8bcd\u8bcd\u6797\u6269\u5c55\u7248\u300b\u8ba1\u7b97\u800c\u6765\u3002\n\n### 21. \u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\n\n```java\n/**\n * \u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\uff08CRF\u53e5\u6cd5\u6a21\u578b\u9700\u8981-Xms512m -Xmx512m -Xmn256m\uff0cMaxEnt\u548c\u795e\u7ecf\u7f51\u7edc\u53e5\u6cd5\u6a21\u578b\u9700\u8981-Xms1g -Xmx1g -Xmn512m\uff09\n * @author hankcs\n */\npublic class DemoDependencyParser\n{\n    public static void main(String[] args)\n    {\n        CoNLLSentence sentence = HanLP.parseDependency(\"\u5f90\u5148\u751f\u8fd8\u5177\u4f53\u5e2e\u52a9\u4ed6\u786e\u5b9a\u4e86\u628a\u753b\u96c4\u9e70\u3001\u677e\u9f20\u548c\u9ebb\u96c0\u4f5c\u4e3a\u4e3b\u653b\u76ee\u6807\u3002\");\n        System.out.println(sentence);\n        // \u53ef\u4ee5\u65b9\u4fbf\u5730\u904d\u5386\u5b83\n        for (CoNLLWord word : sentence)\n        {\n            System.out.printf(\"%s --(%s)--> %s\\n\", word.LEMMA, word.DEPREL, word.HEAD.LEMMA);\n        }\n        // \u4e5f\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230\u6570\u7ec4\uff0c\u4efb\u610f\u987a\u5e8f\u6216\u9006\u5e8f\u904d\u5386\n        CoNLLWord[] wordArray = sentence.getWordArray();\n        for (int i = wordArray.length - 1; i >= 0; i--)\n        {\n            CoNLLWord word = wordArray[i];\n            System.out.printf(\"%s --(%s)--> %s\\n\", word.LEMMA, word.DEPREL, word.HEAD.LEMMA);\n        }\n        // \u8fd8\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u5b50\u6811\uff0c\u4ece\u67d0\u68f5\u5b50\u6811\u7684\u67d0\u4e2a\u8282\u70b9\u4e00\u8def\u904d\u5386\u5230\u865a\u6839\n        CoNLLWord head = wordArray[12];\n        while ((head = head.HEAD) != null)\n        {\n            if (head == CoNLLWord.ROOT) System.out.println(head.LEMMA);\n            else System.out.printf(\"%s --(%s)--> \", head.LEMMA, head.DEPREL);\n        }\n    }\n}\n```\n- \u8bf4\u660e\n  * \u5185\u90e8\u91c7\u7528`NeuralNetworkDependencyParser`\u5b9e\u73b0\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528`NeuralNetworkDependencyParser.compute(sentence)`\n  * \u4e5f\u53ef\u4ee5\u8c03\u7528\u57fa\u4e8e\u6700\u5927\u71b5\u7684\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u5668`MaxEntDependencyParser.compute(sentence)`\n- \u7b97\u6cd5\u8be6\u89e3\n  * [\u300a\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b\u6a21\u578b\u4e0e\u8f6c\u79fb\u7cfb\u7edf\u7684\u5224\u51b3\u5f0f\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u5668\u300b](http://www.hankcs.com/nlp/parsing/neural-network-based-dependency-parser.html)\n  * [\u300a\u6700\u5927\u71b5\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u5668\u7684\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/parsing/to-achieve-the-maximum-entropy-of-the-dependency-parser.html)\n  * [\u300a\u57fa\u4e8eCRF\u5e8f\u5217\u6807\u6ce8\u7684\u4e2d\u6587\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u5668\u7684Java\u5b9e\u73b0\u300b](http://www.hankcs.com/nlp/parsing/crf-sequence-annotation-chinese-dependency-parser-implementation-based-on-java.html)\n\n## \u8bcd\u5178\u8bf4\u660e\n\u672c\u7ae0\u8be6\u7ec6\u4ecb\u7ecd**HanLP**\u4e2d\u7684\u8bcd\u5178\u683c\u5f0f\uff0c\u6ee1\u8db3\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u9700\u8981\u3002**HanLP**\u4e2d\u6709\u8bb8\u591a\u8bcd\u5178\uff0c\u5b83\u4eec\u7684\u683c\u5f0f\u90fd\u662f\u76f8\u4f3c\u7684\uff0c\u5f62\u5f0f\u90fd\u662f\u6587\u672c\u6587\u6863\uff0c\u968f\u65f6\u53ef\u4ee5\u4fee\u6539\u3002\n### \u57fa\u672c\u683c\u5f0f\n\u8bcd\u5178\u5206\u4e3a\u8bcd\u9891\u8bcd\u6027\u8bcd\u5178\u548c\u8bcd\u9891\u8bcd\u5178\u3002\n\n- \u8bcd\u9891\u8bcd\u6027\u8bcd\u5178\n   * \u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u5355\u8bcd\uff0c\u683c\u5f0f\u9075\u4ece`[\u5355\u8bcd] [\u8bcd\u6027A] [A\u7684\u9891\u6b21] [\u8bcd\u6027B] [B\u7684\u9891\u6b21] ...`\u3002\n   * \u652f\u6301\u7701\u7565\u8bcd\u6027\u548c\u9891\u6b21\uff0c\u76f4\u63a5\u4e00\u884c\u4e00\u4e2a\u5355\u8bcd\u3002\n   * `.txt`\u8bcd\u5178\u6587\u4ef6\u7684\u5206\u9694\u7b26\u4e3a\u7a7a\u683c\u6216\u5236\u8868\u7b26\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u542b\u6709\u7a7a\u683c\u7684\u8bcd\u8bed\u3002\u5982\u679c\u9700\u8981\u652f\u6301\u7a7a\u683c\uff0c\u8bf7\u4f7f\u7528\u82f1\u6587\u9017\u53f7`,`\u5206\u5272\u7684**\u7eaf\u6587\u672c**`.csv`\u6587\u4ef6\u3002\u5728\u4f7f\u7528Word\u7b49\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u65f6\uff0c\u5219\u8bf7\u6ce8\u610f\u4fdd\u5b58\u4e3a**\u7eaf\u6587\u672c**\u5f62\u5f0f\u3002\n- \u8bcd\u9891\u8bcd\u5178\n  * \u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u5355\u8bcd\uff0c\u683c\u5f0f\u9075\u4ece`[\u5355\u8bcd] [\u5355\u8bcd\u7684\u9891\u6b21]`\u3002\n  * \u6bcf\u4e00\u884c\u7684\u5206\u9694\u7b26\u4e3a\u7a7a\u683c\u6216\u5236\u8868\u7b26\u3002\n\n\u5c11\u6570\u8bcd\u5178\u6709\u81ea\u5df1\u7684\u4e13\u7528\u683c\u5f0f\uff0c\u6bd4\u5982\u540c\u4e49\u8bcd\u8bcd\u5178\u517c\u5bb9\u300a\u540c\u4e49\u8bcd\u8bcd\u6797\u6269\u5c55\u7248\u300b\u7684\u6587\u672c\u683c\u5f0f\uff0c\u800c\u8f6c\u79fb\u77e9\u9635\u8bcd\u5178\u5219\u662f\u4e00\u4e2acsv\u8868\u683c\u3002\n\n\u4e0b\u6587\u4e3b\u8981\u4ecb\u7ecd\u901a\u7528\u8bcd\u5178\uff0c\u5982\u4e0d\u6ce8\u660e\uff0c\u8bcd\u5178\u7279\u6307\u901a\u7528\u8bcd\u5178\u3002\n\n### \u6570\u636e\u7ed3\u6784\n\nTrie\u6811\uff08\u5b57\u5178\u6811\uff09\u662f**HanLP**\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u6b64\uff0c\u6211\u5b9e\u73b0\u4e86\u901a\u7528\u7684Trie\u6811\uff0c\u652f\u6301\u6cdb\u578b\u3001\u904d\u5386\u3001\u50a8\u5b58\u3001\u8f7d\u5165\u3002\n\n\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u91c7\u7528AhoCorasickDoubleArrayTrie\u548c\u4e8c\u5206Trie\u6811\u50a8\u5b58\uff0c\u5176\u4ed6\u8bcd\u5178\u91c7\u7528\u57fa\u4e8e[\u53cc\u6570\u7ec4Trie\u6811(DoubleArrayTrie)](http://www.hankcs.com/program/java/%E5%8F%8C%E6%95%B0%E7%BB%84trie%E6%A0%91doublearraytriejava%E5%AE%9E%E7%8E%B0.html)\u5b9e\u73b0\u7684[AC\u81ea\u52a8\u673aAhoCorasickDoubleArrayTrie](http://www.hankcs.com/program/algorithm/aho-corasick-double-array-trie.html)\u3002\n\n### \u50a8\u5b58\u5f62\u5f0f\n\n\u8bcd\u5178\u6709\u4e24\u4e2a\u5f62\u6001\uff1a\u6587\u672c\u6587\u4ef6(filename.txt)\u548c\u7f13\u5b58\u6587\u4ef6(filename.txt.bin\u6216filename.txt.trie.dat\u548cfilename.txt.trie.value)\u3002\n\n- \u6587\u672c\u6587\u4ef6 \n  * \u91c7\u7528\u660e\u6587\u50a8\u5b58\uff0cUTF-8\u7f16\u7801\uff0cCRLF\u6362\u884c\u7b26\u3002\n- \u7f13\u5b58\u6587\u4ef6\n  * \u5c31\u662f\u4e00\u4e9b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u901a\u5e38\u5728\u6587\u672c\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u540e\u9762\u52a0\u4e0a.bin\u8868\u793a\u3002\u6709\u65f6\u5019\u662f.trie.dat\u548c.trie.value\u3002\u540e\u8005\u662f\u5386\u53f2\u9057\u7559\u4ea7\u7269\uff0c\u5206\u522b\u4ee3\u8868trie\u6811\u7684\u6570\u7ec4\u548c\u503c\u3002\n  * \u5982\u679c\u4f60\u4fee\u6539\u4e86\u4efb\u4f55\u8bcd\u5178\uff0c\u53ea\u6709\u5220\u9664\u7f13\u5b58\u624d\u80fd\u751f\u6548\u3002\n\n### \u4fee\u6539\u65b9\u6cd5\n\nHanLP\u7684\u6838\u5fc3\u8bcd\u5178\u8bad\u7ec3\u81ea\u4eba\u6c11\u65e5\u62a52014\u8bed\u6599\uff0c\u8bed\u6599\u4e0d\u662f\u5b8c\u7f8e\u7684\uff0c\u603b\u4f1a\u5b58\u5728\u4e00\u4e9b\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5206\u8bcd\u51fa\u73b0\u5947\u602a\u7684\u7ed3\u679c\uff0c\u8fd9\u65f6\u8bf7\u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f\u6392\u67e5\u95ee\u9898\uff1a\n```java\nHanLP.Config.enableDebug();\n```\n- \u6838\u5fc3\u8bcd\u6027\u8bcd\u9891\u8bcd\u5178\n  * \u6bd4\u5982\u4f60\u5728`data/dictionary/CoreNatureDictionary.txt`\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e0d\u662f\u8bcd\u7684\u8bcd\uff0c\u6216\u8005\u8bcd\u6027\u6807\u6ce8\u5f97\u660e\u663e\u4e0d\u5bf9\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\uff0c\u7136\u540e\u5220\u9664\u7f13\u5b58\u6587\u4ef6\u4f7f\u5176\u751f\u6548\u3002\n  * \u76ee\u524d`CoreNatureDictionary.ngram.txt`\u7684\u7f13\u5b58\u4f9d\u8d56\u4e8e`CoreNatureDictionary.txt`\u7684\u7f13\u5b58\uff0c\u4fee\u6539\u4e86\u540e\u8005\u4e4b\u540e\u5fc5\u987b\u540c\u6b65\u5220\u9664\u524d\u8005\u7684\u7f13\u5b58\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u9519\n- \u6838\u5fc3\u4e8c\u5143\u6587\u6cd5\u8bcd\u5178\n  * \u4e8c\u5143\u6587\u6cd5\u8bcd\u5178`data/dictionary/CoreNatureDictionary.ngram.txt`\u50a8\u5b58\u7684\u662f\u4e24\u4e2a\u8bcd\u7684\u63a5\u7eed\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u4e0d\u53ef\u80fd\u5b58\u5728\u8fd9\u79cd\u63a5\u7eed\u65f6\uff0c\u5220\u6389\u5373\u53ef\u3002\n  * \u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4f60\u8ba4\u4e3a\u5408\u7406\u7684\u63a5\u7eed\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u8bcd\u5fc5\u987b\u540c\u65f6\u5728\u6838\u5fc3\u8bcd\u5178\u4e2d\u624d\u4f1a\u751f\u6548\u3002\n- \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u8bcd\u5178\n  * \u57fa\u4e8e\u89d2\u8272\u6807\u6ce8\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6bd4\u8f83\u4f9d\u8d56\u8bcd\u5178\uff0c\u6240\u4ee5\u8bcd\u5178\u7684\u8d28\u91cf\u5927\u5e45\u5f71\u54cd\u8bc6\u522b\u8d28\u91cf\u3002\n  * \u8fd9\u4e9b\u8bcd\u5178\u7684\u683c\u5f0f\u4e0e\u539f\u7406\u90fd\u662f\u7c7b\u4f3c\u7684\uff0c\u8bf7\u9605\u8bfb[\u76f8\u5e94\u7684\u6587\u7ae0](http://www.hankcs.com/category/nlp/ner/)\u6216\u4ee3\u7801\u4fee\u6539\u5b83\u3002\n\n\u5982\u679c\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u6b22\u8fce\u5411\u6211\u63d0\u4ea4\u4e00\u4e2apull request\uff0c\u8fd9\u662f\u6211\u5728\u4ee3\u7801\u5e93\u4e2d\u4fdd\u7559\u660e\u6587\u8bcd\u5178\u7684\u539f\u56e0\uff0c\u4f17\u4eba\u62fe\u67f4\u706b\u7130\u9ad8\uff01\n\n------\n\n## \u7248\u6743\n\n### \u4e0a\u6d77\u6797\u539f\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8\n- Apache License Version 2.0\n- HanLP\u4ea7\u54c1\u521d\u59cb\u77e5\u8bc6\u4ea7\u6743\u5f52\u4e0a\u6d77\u6797\u539f\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8\u6240\u6709\uff0c\u4efb\u4f55\u4eba\u548c\u4f01\u4e1a\u53ef\u4ee5\u65e0\u507f\u4f7f\u7528\uff0c\u53ef\u4ee5\u5bf9\u4ea7\u54c1\u3001\u6e90\u4ee3\u7801\u8fdb\u884c\u4efb\u4f55\u5f62\u5f0f\u7684\u4fee\u6539\uff0c\u53ef\u4ee5\u6253\u5305\u5728\u5176\u4ed6\u4ea7\u54c1\u4e2d\u8fdb\u884c\u9500\u552e\u3002\n- \u4efb\u4f55\u4f7f\u7528\u4e86HanLP\u7684\u5168\u90e8\u6216\u90e8\u5206\u529f\u80fd\u3001\u8bcd\u5178\u3001\u6a21\u578b\u7684\u9879\u76ee\u3001\u4ea7\u54c1\u6216\u6587\u7ae0\u7b49\u5f62\u5f0f\u7684\u6210\u679c\u5fc5\u987b\u663e\u5f0f\u6ce8\u660eHanLP\u53ca\u6b64\u9879\u76ee\u4e3b\u9875\u3002\n\n### \u9e23\u8c22\n\u611f\u8c22\u4e0b\u5217\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\uff1a\n\n- [darts-clone-java](https://github.com/hiroshi-manabe/darts-clone-java)\n- [SharpICTCLAS](http://www.cnblogs.com/zhenyulu/archive/2007/04/18/718383.html)\n- [snownlp](https://github.com/isnowfy/snownlp)\n- [ansj_seg](https://github.com/NLPchina/ansj_seg)\n- [nlp-lang](https://github.com/NLPchina/nlp-lang)\n\n\u611f\u8c22NLP\u754c\u5404\u4f4d\u5b66\u8005\u8001\u5e08\u7684\u8457\u4f5c\uff1a\n\n- \u300a\u57fa\u4e8e\u89d2\u8272\u6807\u6ce8\u7684\u4e2d\u56fd\u4eba\u540d\u81ea\u52a8\u8bc6\u522b\u7814\u7a76\u300b\u5f20\u534e\u5e73 \u5218\u7fa4\n- \u300a\u57fa\u4e8e\u5c42\u53e0\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u7684\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u300b\u4fde\u9e3f\u9b41 \u5f20\u534e\u5e73 \u5218\u7fa4 \u5415\u5b66\u5f3a \u65bd\u6c34\u624d\n- \u300a\u57fa\u4e8e\u89d2\u8272\u6807\u6ce8\u7684\u4e2d\u6587\u673a\u6784\u540d\u8bc6\u522b\u300b\u4fde\u9e3f\u9b41 \u5f20\u534e\u5e73 \u5218\u7fa4\n- \u300a\u57fa\u4e8e\u6700\u5927\u71b5\u7684\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\u300b \u8f9b\u9704 \u8303\u58eb\u559c \u738b\u8f69 \u738b\u6653\u9f99\n- An Efficient Implementation of Trie Structures, JUN-ICHI AOE AND KATSUSHI MORIMOTO\n- TextRank: Bringing Order into Texts, Rada Mihalcea and Paul Tarau\n\n\u611f\u8c22\u4e0a\u6d77\u6797\u539f\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8\u7684\u5218\u5148\u751f\uff0c\u5141\u8bb8\u6211\u5229\u7528\u5de5\u4f5c\u65f6\u95f4\u5f00\u53d1HanLP\uff0c\u63d0\u4f9b\u670d\u52a1\u5668\u548c\u57df\u540d\uff0c\u5e76\u4e14\u4fc3\u6210\u4e86\u5f00\u6e90\u3002\u611f\u8c22\u8bf8\u4f4d\u7528\u6237\u7684\u5173\u6ce8\u548c\u4f7f\u7528\uff0cHanLP\u5e76\u4e0d\u5b8c\u5584\uff0c\u672a\u6765\u8fd8\u6073\u6c42\u5404\u4f4dNLP\u7231\u597d\u8005\u591a\u591a\u5173\u7167\uff0c\u63d0\u51fa\u5b9d\u8d35\u610f\u89c1\u3002\n\n\u4f5c\u8005 [@hankcs](http://weibo.com/hankcs/)\n\n2014\u5e7412\u670816\u65e5\n\n",
    "readme_filename": "README.md"
  },
  "llm_calls_before_build": 0,
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM maven:3.6.3-jdk-8\n\nWORKDIR /app\n\n# Clone repository and checkout specific commit\nRUN git clone https://github.com/hankcs/HanLP.git . \\\n    && git checkout 719af901d786c2b25a1ccced28fdd60618483dc3\n\n# Add custom dictionary entry for testing\nRUN echo \"\u7533\u8bf7\u7b14 n 100\" >> data/dictionary/custom/CustomDictionary.txt\n\n# Build project with Maven\nRUN mvn clean install -DskipTests\n\n# Set environment variable for HanLP data root\nENV HANLP_ROOT=/app/data",
  "dockerfile_build_success": true,
  "successful_candidate_index": 1,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "llm_calls_total": 5
}