[
  {
    "number": 2007,
    "title": "\u5386\u53f2\u6570\u636e\u52a0\u8f7d\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u663e\u793a\u201c\u6210\u4ea4\u8bb0\u5f55\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u8ba1\u7b97\u201d",
    "created_at": "2019-08-07T10:08:04Z",
    "closed_at": "2019-08-07T10:24:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2007",
    "body": "## \u73af\u5883\r\n\r\n* \u64cd\u4f5c\u7cfb\u7edf: \u5982Windows 10\r\n* Anaconda\u7248\u672c: vnstudio v2.0.6\r\n* vn.py\u7248\u672c: vnstudio v2.0.6\r\n\r\n## Issue\u7c7b\u578b\r\nQuestion\r\n\r\n## \u9884\u671f\u7a0b\u5e8f\u884c\u4e3a\r\n\u56de\u6d4b\u6210\u529f\r\n\r\n## \u5b9e\u9645\u7a0b\u5e8f\u884c\u4e3a\r\n\u56de\u6d4b\u4e0d\u6210\u529f\uff0c\u663e\u793a\u201c\u6210\u4ea4\u8bb0\u5f55\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u8ba1\u7b97\u201d\r\n\r\n## \u91cd\u73b0\u6b65\u9aa4\r\n1. \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\r\n```python\r\nfrom vnpy.app.cta_strategy.backtesting import BacktestingEngine, OptimizationSetting\r\nfrom vnpy.app.cta_strategy.strategies.atr_rsi_strategy import (\r\n    AtrRsiStrategy,\r\n)\r\nfrom vnpy.app.cta_strategy.strategies.double_ma_strategy import (\r\n    DoubleMaStrategy,\r\n)\r\n\r\nfrom datetime import datetime\r\n\r\n#%%\r\nengine = BacktestingEngine()\r\nengine.set_parameters(\r\n    vt_symbol=\"XBTUSD.BITMEX\", #\u672c\u5730\u4ee3\u7801\r\n    interval=\"1m\", # K\u7ebf\u5468\u671f\r\n    start=datetime(2019, 8, 1), #\u5f00\u59cb\u65e5\u671f\r\n    end=datetime(2019, 8, 30), #\u7ed3\u675f\u65e5\u671f\r\n    rate=0.3/1000000, #\u624b\u7eed\u8d39\u7387\r\n    slippage=0, #\u4ea4\u6613\u6ed1\u70b9\r\n    size=10, #\u5408\u7ea6\u4e58\u6570\r\n    pricetick=0.5, #\u4ef7\u683c\u8df3\u52a8\r\n    capital=1_000_000, #\u56de\u6d4b\u8d44\u91d1\r\n)\r\n# AtrRsiStrategy\r\n# engine.add_strategy(AtrRsiStrategy, {})\r\n# BollChannelStrategy\r\n# DoubleMaStrategy\r\nengine.add_strategy(DoubleMaStrategy, {\r\n    \"fast_window\":20,\r\n    \"slow_window\":80\r\n})\r\n# DualThrustStrategy\r\n# KingKeltnerStrategy\r\n# MultiTimeframeStrategy\r\n# TestStrategy\r\n# TurtleSignalStrategy\r\n\r\n#%%\r\nengine.load_data()\r\nengine.run_backtesting()\r\ndf = engine.calculate_result()\r\nengine.calculate_statistics()\r\nengine.show_chart()\r\n\r\nsetting = OptimizationSetting()\r\nsetting.set_target(\"sharpe_ratio\")\r\nsetting.add_parameter(\"atr_length\", 3, 39, 1)\r\nsetting.add_parameter(\"atr_ma_length\", 10, 30, 1)\r\n\r\n# engine.run_ga_optimization(setting)\r\n\r\n```\r\n2. \u76f4\u63a5\u8fd0\u884c\u4ee3\u7801\r\n```shell\r\npython backtesting.py\r\n```\r\n3. \u6700\u7ec8\u8f93\u51fa\u7ed3\u679c\uff1a\r\n```shell\r\n2019-08-07 17:59:17.406999      \u5f00\u59cb\u52a0\u8f7d\u5386\u53f2\u6570\u636e\r\n2019-08-07 17:59:18.126817      \u52a0\u8f7d\u8fdb\u5ea6\uff1a########## [100%]\r\n2019-08-07 17:59:18.126817      \u5386\u53f2\u6570\u636e\u52a0\u8f7d\u5b8c\u6210\uff0c\u6570\u636e\u91cf\uff1a8641\r\n2019-08-07 17:59:18.246799      \u7b56\u7565\u521d\u59cb\u5316\u5b8c\u6210\r\n2019-08-07 17:59:18.246799      \u5f00\u59cb\u56de\u653e\u5386\u53f2\u6570\u636e\r\n2019-08-07 17:59:18.256820      \u5386\u53f2\u6570\u636e\u56de\u653e\u7ed3\u675f\r\n2019-08-07 17:59:18.256820      \u5f00\u59cb\u8ba1\u7b97\u9010\u65e5\u76ef\u5e02\u76c8\u4e8f\r\n2019-08-07 17:59:18.256820      \u6210\u4ea4\u8bb0\u5f55\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u8ba1\u7b97\r\n2019-08-07 17:59:18.256820      \u5f00\u59cb\u8ba1\u7b97\u7b56\u7565\u7edf\u8ba1\u6307\u6807\r\n2019-08-07 17:59:18.256820      ------------------------------\r\n2019-08-07 17:59:18.256820      \u9996\u4e2a\u4ea4\u6613\u65e5\uff1a\r\n2019-08-07 17:59:18.266823      \u6700\u540e\u4ea4\u6613\u65e5\uff1a\r\n2019-08-07 17:59:18.266823      \u603b\u4ea4\u6613\u65e5\uff1a      0\r\n2019-08-07 17:59:18.276828      \u76c8\u5229\u4ea4\u6613\u65e5\uff1a    0\r\n2019-08-07 17:59:18.276828      \u4e8f\u635f\u4ea4\u6613\u65e5\uff1a    0\r\n2019-08-07 17:59:18.276828      \u8d77\u59cb\u8d44\u91d1\uff1a      1,000,000.00\r\n2019-08-07 17:59:18.276828      \u7ed3\u675f\u8d44\u91d1\uff1a      0.00\r\n2019-08-07 17:59:18.276828      \u603b\u6536\u76ca\u7387\uff1a      0.00%\r\n2019-08-07 17:59:18.276828      \u5e74\u5316\u6536\u76ca\uff1a      0.00%\r\n2019-08-07 17:59:18.276828      \u6700\u5927\u56de\u64a4:       0.00\r\n2019-08-07 17:59:18.276828      \u767e\u5206\u6bd4\u6700\u5927\u56de\u64a4: 0.00%\r\n2019-08-07 17:59:18.276828      \u603b\u76c8\u4e8f\uff1a        0.00\r\n2019-08-07 17:59:18.276828      \u603b\u624b\u7eed\u8d39\uff1a      0.00\r\n2019-08-07 17:59:18.276828      \u603b\u6ed1\u70b9\uff1a        0.00\r\n2019-08-07 17:59:18.276828      \u603b\u6210\u4ea4\u91d1\u989d\uff1a    0.00\r\n2019-08-07 17:59:18.286829      \u603b\u6210\u4ea4\u7b14\u6570\uff1a    0\r\n2019-08-07 17:59:18.286829      \u65e5\u5747\u76c8\u4e8f\uff1a      0.00\r\n2019-08-07 17:59:18.296839      \u65e5\u5747\u624b\u7eed\u8d39\uff1a    0.00\r\n2019-08-07 17:59:18.296839      \u65e5\u5747\u6ed1\u70b9\uff1a      0.00\r\n2019-08-07 17:59:18.296839      \u65e5\u5747\u6210\u4ea4\u91d1\u989d\uff1a  0.00\r\n2019-08-07 17:59:18.296839      \u65e5\u5747\u6210\u4ea4\u7b14\u6570\uff1a  0\r\n2019-08-07 17:59:18.296839      \u65e5\u5747\u6536\u76ca\u7387\uff1a    0.00%\r\n2019-08-07 17:59:18.296839      \u6536\u76ca\u6807\u51c6\u5dee\uff1a    0.00%\r\n2019-08-07 17:59:18.296839      Sharpe Ratio\uff1a  0.00\r\n2019-08-07 17:59:18.296839      \u6536\u76ca\u56de\u64a4\u6bd4\uff1a    0.00\r\n```\r\n\u7a0b\u5e8f\u5e94\u8be5\u662f\u6b63\u786e\u6267\u884c\u4e86\uff0c\u4f46\u6ca1\u6709\u6210\u4ea4\u8bb0\u5f55\uff0c\u8bf7\u95ee\u662f\u4e0d\u662f\u54ea\u4e2a\u53c2\u6570\u8bbe\u7f6e\u9519\u8bef\uff1f\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2007/comments",
    "author": "watano",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-08-07T10:24:02Z",
        "body": "\u6570\u636e\u91cf\u4e0d\u591f\uff0c\u4e0d\u8db3\u4ee5\u8ba9\u7b56\u7565\u5b8c\u6210\u521d\u59cb\u5316\u8ba1\u7b97\uff0c\u8bf7\u51c6\u5907\u66f4\u591a\u7684\u6570\u636e\u7528\u4e8e\u56de\u6d4b"
      },
      {
        "user": "watano",
        "created_at": "2019-08-08T09:01:12Z",
        "body": "\u597d\u7684\uff0c\u6211\u518d\u8bd5\u8bd5\uff0c\u8c22\u8c22\n\n---\n\n\u6211\u7528\u4e86\u4e00\u4e2a\u6708\u7684\u6570\u636e\uff0c\u786e\u5b9e\u53ef\u4ee5\u4e86\uff0c\u8c22\u8c22!"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of why no trades were generated during backtesting",
      "Guidance on minimum data requirements for strategy initialization",
      "Parameters verification for DoubleMaStrategy configuration",
      "Strategy logic validation methodology",
      "Diagnosis of potential data alignment issues"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:49:45"
    }
  },
  {
    "number": 393,
    "title": "\u8fd0\u884crun.py\u3000\u9047\u5230\u627e\u4e0d\u5230\u6307\u5b9a\u6a21\u5757",
    "created_at": "2017-07-08T03:39:47Z",
    "closed_at": "2017-07-10T01:24:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/393",
    "body": "\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\api\\ctp\\__init__.py\", line 3, in <module>\r\n    from vnctpmd import MdApi\r\n\r\nImportError: DLL load failed: \u627e\u4e0d\u5230\u6307\u5b9a\u7684\u6a21\u5757\u3002",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/393/comments",
    "author": "zhikook",
    "comments": [
      {
        "user": "zsluedem",
        "created_at": "2017-07-08T06:13:18Z",
        "body": "\u4ec0\u4e48\u7248\u672c\u7684\uff1f\r\nD:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\api\\ctp\u91cc\u9762\u6709\u4ec0\u4e48\u6587\u4ef6"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-08T13:29:08Z",
        "body": "1. \u68c0\u67e5Anaconda\u7248\u672c\u662f\u5426\u4e3a4.0.0 Python 2.7 32\u4f4d\r\n2. \u68c0\u67e5vcredist x86 2013\u662f\u5426\u5b89\u88c5"
      },
      {
        "user": "zhikook",
        "created_at": "2017-07-08T15:06:18Z",
        "body": "@zsluedem thanks ,list:\r\n\r\n__init__.py\r\n__init__.pyc\r\nctp_data_type.py\r\nctp_data_type.pyc\r\nthostmduserapi.dll\r\nthostmduserapi.so\r\nthosttraderapi.dll\r\nthosttraderapi.so\r\nvnctpmd.pyd\r\nvnctptd.pyd\n\n---\n\n@vnpy \u8c22\u8c22\uff0cvcredist x86 2013\u5b89\u88c5\u7248\u672c\u51fa\u9519\uff0c\u6211\u60f3\u95ee\u9898\u5e94\u8be5\u662f\u8fd9\u4e2a\uff0c\u73b0\u5728\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u4e86\uff0c\u4e0d\u8fc7\u9047\u5230\u65b0\u95ee\u9898\uff0c\u6211\u6b63\u5728\u5904\u7406\u3002\r\n\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\anydbm.py\", line 85, in open\r\n    return mod.open(file, flag, mode)\r\n\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\dbhash.py\", line 18, in open\r\n    return bsddb.hashopen(file, flag, mode)\r\n\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\bsddb\\__init__.py\", line 364, in hashopen\r\n    d.open(file, db.DB_HASH, flags, mode)\r\n\r\nDBNoSuchFileError: (2, 'No such file or directory')\r\n\r\n\n\n---\n\n #----------------------------------------------------------------------\r\n    def loadContracts(self):\r\n        \"\"\"\u4ece\u786c\u76d8\u8bfb\u53d6\u5408\u7ea6\u5bf9\u8c61\"\"\"\r\n        f = shelve.open(self.contractFileName)\r\n        if 'data' in f:\r\n            d = f['data']\r\n            for key, value in d.items():\r\n                self.contractDict[key] = value\r\n        f.close()\r\n        \r\n\u8bf7\u95ee\u662f\u5426\u8981\u5bf9\u90a3\u4e2a\u6587\u4ef6\u8bbe\u7f6e\u8bfb\u5199\u6743\u9650\uff0c\u6211\u7684\u64cd\u4f5c\u7cfb\u7edf\u662f\uff57\uff49\uff4e\uff44\uff4f\uff57\uff53\uff17\u3000\uff13\uff12"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-09T02:06:31Z",
        "body": "\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff0c\u7528\u7ba1\u7406\u5458\u8d26\u53f7\u6765\u542f\u52a8Python"
      },
      {
        "user": "zhikook",
        "created_at": "2017-07-09T15:33:58Z",
        "body": "@vnpy \u597d\u7684\uff0c\u8c22\u8c22\u3002\u539f\u5148\u7684\u7535\u8111\u6bd4\u8f83\u6162\uff0c\u7b49\u8fc7\u4e00\u9635\u5b50\u6362\u4e00\u4e2a\u914d\u7f6e\u9ad8\u7684\u7535\u8111\u518d\u6765\u5f04\u3002"
      },
      {
        "user": "Hilyme",
        "created_at": "2019-01-09T05:40:24Z",
        "body": "\u6211\u7684\u7cfb\u7edf\u662fwin10\uff0cconda\u662f4.3.30\u7684\uff0cpython\u662f2.7\u7684\uff0c\u7136\u540evc\u662f2015\u7684\uff0c\u8fd8\u662ffrom .vnctpmd import MdApi\r\nImportError: DLL load failed: %1 \u4e0d\u662f\u6709\u6548\u7684 Win32 \u5e94\u7528\u7a0b\u5e8f  \u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u662f\u4ec0\u4e48\u539f\u56e0"
      }
    ],
    "satisfaction_conditions": [
      "Ensure Python environment compatibility with CTP API modules",
      "Verify proper file system permissions for data access",
      "Confirm correct installation of required CTP API components",
      "Validate 32/64-bit architecture consistency across components"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:51:16"
    }
  }
]