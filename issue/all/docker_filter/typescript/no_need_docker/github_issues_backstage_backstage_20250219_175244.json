[
  {
    "number": 3340,
    "title": "[Search] Improve search match",
    "created_at": "2020-11-19T08:42:47Z",
    "closed_at": "2020-11-20T14:28:26Z",
    "labels": [
      "good first issue",
      "help wanted",
      "search"
    ],
    "url": "https://github.com/backstage/backstage/issues/3340",
    "body": "The new frontend search plugin makes it possible to search across names and descriptions of entities. The name of an entity sometimes includes an hyphen, if I do search for that plugin I might search for \"documented component\" instead, without the hyphen. This will not give me a match as it is now, only if I search for \"documented-component\" with the hyphen included. \r\n\r\nWe would like to match a result even if the search query in the input field doesn't include the hyphen. ",
    "comments_url": "https://api.github.com/repos/backstage/backstage/issues/3340/comments",
    "author": "emmaindal",
    "comments": [
      {
        "user": "shashank-bairy",
        "created_at": "2020-11-20T11:28:57Z",
        "body": "Hi @emmaindal, I would like to work on this."
      },
      {
        "user": "emmaindal",
        "created_at": "2020-11-20T12:23:35Z",
        "body": "Great, I'll assign you @BA1RY \ud83c\udf89 "
      },
      {
        "user": "shashank-bairy",
        "created_at": "2020-11-20T13:24:27Z",
        "body": "Hi @emmaindal, I've made a PR. Please let me know if there are changes to be made. Thanks :smile: "
      },
      {
        "user": "emmaindal",
        "created_at": "2020-11-20T14:28:26Z",
        "body": "closed by #3365"
      }
    ],
    "satisfaction_conditions": [
      "Search functionality matches entity names containing hyphens when the query excludes hyphens"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-04 23:48:03"
    }
  },
  {
    "number": 584,
    "title": "Packages should use dependencies instead of peerDependencies",
    "created_at": "2020-04-17T22:58:27Z",
    "closed_at": "2020-04-19T12:04:42Z",
    "labels": [
      "bug",
      "good first issue",
      "help wanted"
    ],
    "url": "https://github.com/backstage/backstage/issues/584",
    "body": "## Expected Behavior\r\n\r\nWe were hoping that peerDependencies could be used as a way to signal which dependencies should be shared with other packages. Even to the point where we inline the regular dependencies during the rollup build.\r\n\r\n## Current Behavior\r\n\r\nPeer dependencies don't work well with yarn workspaces, transitive dependencies in the workspace don't propagate properly. For example, if a plugin has a peer dependency on react and the app depends on the plugin, yarn will complain about a missing peer dependency, even if the app depends on react.\r\n\r\n## Possible Solution\r\n\r\nSkip using peerDependencies for now, make all packages just use dependencies instead. They pretty much behave the same anyway atm.\r\n\r\n## Context\r\n\r\nInitially brought up in #576, and partially fixed in #581.\r\n",
    "comments_url": "https://api.github.com/repos/backstage/backstage/issues/584/comments",
    "author": "Rugvip",
    "comments": [
      {
        "user": "ruarfff",
        "created_at": "2020-04-17T23:32:41Z",
        "body": "I can take this one on \ud83d\udc4d "
      },
      {
        "user": "Rugvip",
        "created_at": "2020-04-19T12:04:42Z",
        "body": "Fixed by #586"
      }
    ],
    "satisfaction_conditions": [
      "Ensures transitive workspace dependencies propagate correctly without Yarn errors",
      "Maintains shared dependency management between packages",
      "Avoids workspace dependency resolution warnings",
      "Works with standard monorepo package manager behavior"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-04 23:48:11"
    }
  }
]