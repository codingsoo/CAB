[
  {
    "number": 7147,
    "title": "Thingsboard 3.4.0 to 3.4.1 upgrade error",
    "created_at": "2022-08-24T15:03:20Z",
    "closed_at": "2022-08-25T13:43:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/thingsboard/thingsboard/issues/7147",
    "body": "**Component**\r\n\r\n<!-- Choose one of the following and delete all others. -->\r\n * Installation\r\n\r\n**Description**\r\nInstallation error when upgrading from version 3.4.0 to 3.4.1\r\n\r\n**Environment**\r\n<!-- Add information about your environment and ThingsBoard version if applicable -->\r\n * OS:  Ubuntu 22.04.1 LTS\r\n * ThingsBoard: 3.4.0\r\n * Browser: Chrome\r\n\r\n-----------------------------------------------------------------------------------------------------------------------------------------------\r\nUnexpected error during ThingsBoard installation!\r\njava.lang.RuntimeException: org.postgresql.util.PSQLException: ERROR: no partition of relation \"error_event\" found for row\r\n  Detail: Partition key of the failing row contains (ts) = (1589794897763).\r\n  Where: SQL statement \"INSERT INTO error_event\r\n    SELECT id,\r\n           tenant_id,\r\n           ts,\r\n           entity_id,\r\n           body ->> 'server',\r\n           body ->> 'method',\r\n           body ->> 'error'\r\n    FROM\r\n    (select id, tenant_id, ts, entity_id, to_safe_json(body) as body\r\n     FROM event WHERE ts >= start_ts_in_ms and ts < end_ts_in_ms AND event_type = 'ERROR' AND to_safe_json(body) ->> 'server' IS NOT NULL\r\n    ) safe_event\r\n    ON CONFLICT DO NOTHING\"\r\nPL/pgSQL function migrate_regular_events(bigint,bigint,integer) line 51 at SQL statement\r\n        at org.thingsboard.server.dao.sql.event.SqlEventCleanupRepository.callMigrateFunction(SqlEventCleanupRepository.java:106)\r\n        at org.thingsboard.server.dao.sql.event.SqlEventCleanupRepository.callMigrateFunctionByPartitions(SqlEventCleanupRepository.java:90)\r\n        at org.thingsboard.server.dao.sql.event.SqlEventCleanupRepository.migrateEvents(SqlEventCleanupRepository.java:59)\r\n        at org.thingsboard.server.dao.sql.event.SqlEventCleanupRepository$$FastClassBySpringCGLIB$$c5eb007e.invoke(<generated>)\r\n        at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\r\n        at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\r\n        at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\r\n        at org.thingsboard.server.dao.sql.event.SqlEventCleanupRepository$$EnhancerBySpringCGLIB$$1ce8a57f.migrateEvents(<generated>)\r\n        at org.thingsboard.server.dao.sql.event.JpaBaseEventDao.migrateEvents(JpaBaseEventDao.java:266)\r\n        at org.thingsboard.server.dao.event.BaseEventService.migrateEvents(BaseEventService.java:139)\r\n        at org.thingsboard.server.service.install.update.DefaultDataUpdateService.updateData(DefaultDataUpdateService.java:176)\r\n        at org.thingsboard.server.install.ThingsboardInstallService.performInstall(ThingsboardInstallService.java:227)\r\n        at org.thingsboard.server.ThingsboardInstallApplication.main(ThingsboardInstallApplication.java:48)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)\r\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)\r\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)\r\n        at org.springframework.boot.loader.PropertiesLauncher.main(PropertiesLauncher.java:467)\r\nCaused by: org.postgresql.util.PSQLException: ERROR: no partition of relation \"error_event\" found for row\r\n  Detail: Partition key of the failing row contains (ts) = (1589794897763).\r\n  Where: SQL statement \"INSERT INTO error_event\r\n    SELECT id,\r\n           tenant_id,\r\n           ts,\r\n           entity_id,\r\n           body ->> 'server',\r\n           body ->> 'method',\r\n           body ->> 'error'\r\n    FROM\r\n    (select id, tenant_id, ts, entity_id, to_safe_json(body) as body\r\n     FROM event WHERE ts >= start_ts_in_ms and ts < end_ts_in_ms AND event_type = 'ERROR' AND to_safe_json(body) ->> 'server' IS NOT NULL\r\n    ) safe_event\r\n    ON CONFLICT DO NOTHING\"\r\nPL/pgSQL function migrate_regular_events(bigint,bigint,integer) line 51 at SQL statement\r\n        at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)\r\n        at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)\r\n        at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)\r\n        at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)\r\n        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)\r\n        at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)\r\n        at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:153)\r\n        at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)\r\n        at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)\r\n        at org.thingsboard.server.dao.sql.event.SqlEventCleanupRepository.callMigrateFunction(SqlEventCleanupRepository.java:102)\r\n        ... 25 common frames omitted\r\nUnexpected error during ThingsBoard installation!\r\nThingsBoard upgrade failed!\r\n",
    "comments_url": "https://api.github.com/repos/thingsboard/thingsboard/issues/7147/comments",
    "author": "MCPule",
    "comments": [
      {
        "user": "trikimiki",
        "created_at": "2022-08-25T08:19:21Z",
        "body": "It seems like the timestamp for some specific error event is out of bounds of migrating procedure. It is either a bug or invalid data on this particular event.\r\n\r\nYou can workaround this issue by truncating the table \"event\" before the upgrade. You will only lose your debug data as it only stores statistics, lifecycle, and debug events."
      },
      {
        "user": "MCPule",
        "created_at": "2022-08-25T08:59:13Z",
        "body": "@trikimiki, thanks for your response.\r\n\r\nHowever, I get the following error when I try to truncate the tables \"event\" or \"error_event\":\r\n\r\n---------------------------------------------------------------------------------------------------------------------------------\r\n\r\npostgres=# TRUNCATE TABLE event;\r\nERROR:  relation \"event\" does not exist\r\npostgres=# TRUNCATE TABLE error_event;\r\nERROR:  relation \"error_event\" does not exist\r\npostgres=#"
      },
      {
        "user": "trikimiki",
        "created_at": "2022-08-25T11:55:05Z",
        "body": "I think you are connected to the wrong DB: `postgres=#`\r\nTry connecting to \"thingsboard\" before executing the query:\r\n```\r\n\\c thingsboard\r\n```"
      }
    ],
    "satisfaction_conditions": [
      "Solution must resolve the partition key mismatch error during database migration",
      "Must provide clear guidance on database context for schema modifications",
      "Must explain how to handle existing event data that violates partitioning constraints",
      "Should validate database connection steps for PostgreSQL operations"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:10:49"
    }
  },
  {
    "number": 3467,
    "title": "docker install error java.io.FileNotFoundException: /var/log/thingsboard/tb-core1/thingsboard.log (No such file or directory)",
    "created_at": "2020-09-15T10:15:52Z",
    "closed_at": "2020-09-15T14:32:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/thingsboard/thingsboard/issues/3467",
    "body": "./docker-install-tb.sh --loadDemo\r\n\r\n```\r\n10:13:55,331 |-ERROR in ch.qos.logback.core.rolling.RollingFileAppender[fileLogAppender] - openFile(/var/log/thingsboard/tb-core1/thingsboard.log,true) call failed. java.io.FileNotFoundException: /var/log/thingsboard/tb-core1/thingsboard.log (No such file or directory)\r\n        at java.io.FileNotFoundException: /var/log/thingsboard/tb-core1/thingsboard.log (No such file or directory)\r\n        at      at java.io.FileOutputStream.open0(Native Method)\r\n        at      at java.io.FileOutputStream.open(FileOutputStream.java:270)\r\n        at      at java.io.FileOutputStream.<init>(FileOutputStream.java:213)\r\n        at      at ch.qos.logback.core.recovery.ResilientFileOutputStream.<init>(ResilientFileOutputStream.java:26)\r\n        at      at ch.qos.logback.core.FileAppender.openFile(FileAppender.java:204)\r\n        at      at ch.qos.logback.core.FileAppender.start(FileAppender.java:127)\r\n        at      at ch.qos.logback.core.rolling.RollingFileAppender.start(RollingFileAppender.java:100)\r\n        at      at ch.qos.logback.core.joran.action.AppenderAction.end(AppenderAction.java:90)\r\n        at      at ch.qos.logback.core.joran.spi.Interpreter.callEndAction(Interpreter.java:309)\r\n        at      at ch.qos.logback.core.joran.spi.Interpreter.endElement(Interpreter.java:193)\r\n        at      at ch.qos.logback.core.joran.spi.Interpreter.endElement(Interpreter.java:179)\r\n        at      at ch.qos.logback.core.joran.spi.EventPlayer.play(EventPlayer.java:62)\r\n        at      at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:165)\r\n        at      at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:152)\r\n        at      at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:110)\r\n        at      at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:53)\r\n        at      at ch.qos.logback.classic.util.ContextInitializer.configureByResource(ContextInitializer.java:75)\r\n        at      at ch.qos.logback.classic.util.ContextInitializer.autoConfig(ContextInitializer.java:150)\r\n        at      at org.slf4j.impl.StaticLoggerBinder.init(StaticLoggerBinder.java:84)\r\n        at      at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:55)\r\n        at      at org.slf4j.LoggerFactory.bind(LoggerFactory.java:129)\r\n        at      at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:108)\r\n        at      at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:302)\r\n        at      at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:276)\r\n        at      at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:288)\r\n        at      at org.thingsboard.server.ThingsboardInstallApplication.<clinit>(ThingsboardInstallApplication.java:27)\r\n        at      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at      at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at      at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\r\n        at      at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\r\n        at      at org.springframework.boot.loader.Launcher.launch(Launcher.java:51)\r\n        at      at org.springframework.boot.loader.PropertiesLauncher.main(PropertiesLauncher.java:597)\r\n10:13:55,331 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]\r\n10:13:55,334 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]\r\n10:13:55,334 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property\r\n10:13:55,336 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.thingsboard.server] to INFO\r\n10:13:55,336 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.google.common.util.concurrent.AggregateFuture] to OFF\r\n10:13:55,336 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO\r\n10:13:55,336 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [fileLogAppender] to Logger[ROOT]\r\n10:13:55,337 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]\r\n10:13:55,337 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.\r\n10:13:55,338 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7a4f0f29 - Registering current configuration as safe fallback point\r\n\r\nLogging system failed to initialize using configuration from '/usr/share/thingsboard/bin/install/logback.xml'\r\njava.lang.IllegalStateException: Logback configuration error detected:\r\nERROR in ch.qos.logback.core.rolling.RollingFileAppender[fileLogAppender] - openFile(/var/log/thingsboard/install.log,true) call failed. java.io.FileNotFoundException: /var/log/thingsboard/install.log (Permission denied)\r\n        at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:169)\r\n        at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithSpecificConfig(AbstractLoggingSystem.java:66)\r\n        at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:57)\r\n        at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:118)\r\n        at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:318)\r\n        at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:288)\r\n        at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)\r\n        at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)\r\n        at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76)\r\n        at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53)\r\n        at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345)\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)\r\n        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:140)\r\n        at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:203)\r\n        at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:114)\r\n        at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:71)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)\r\n        at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)\r\n        at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76)\r\n        at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53)\r\n        at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345)\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)\r\n        at org.thingsboard.server.ThingsboardInstallApplication.main(ThingsboardInstallApplication.java:43)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\r\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\r\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:51)\r\n        at org.springframework.boot.loader.PropertiesLauncher.main(PropertiesLauncher.java:597)\r\njava.lang.IllegalStateException: Logback configuration error detected:\r\nERROR in ch.qos.logback.core.rolling.RollingFileAppender[fileLogAppender] - openFile(/var/log/thingsboard/install.log,true) call failed. java.io.FileNotFoundException: /var/log/thingsboard/install.log (Permission denied)\r\n```\r\n\r\nuname -a\r\n```\r\nLinux xxx 4.18.0-193.14.2.el8_2.x86_64 #1 SMP Sun Jul 26 03:54:29 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\ndocker version\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:46:54 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:45:28 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.6\r\n  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb\r\n runc:\r\n  Version:          1.0.0-rc8\r\n  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\ndocker-compose version\r\n```\r\ndocker-compose version 1.26.2, build eefe0d31\r\ndocker-py version: 4.2.2\r\nCPython version: 3.7.7\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```",
    "comments_url": "https://api.github.com/repos/thingsboard/thingsboard/issues/3467/comments",
    "author": "zhangchunsheng",
    "comments": [
      {
        "user": "CooL16",
        "created_at": "2020-09-15T13:42:30Z",
        "body": "Please make sure you have executed this command: ./docker-create-log-folders.sh"
      },
      {
        "user": "zhangchunsheng",
        "created_at": "2020-09-15T14:32:20Z",
        "body": "> Please make sure you have executed this command: ./docker-create-log-folders.sh\r\n\r\nI have to use root user. It can work."
      }
    ],
    "satisfaction_conditions": [
      "Solution must address directory permissions for /var/log/thingsboard",
      "Explanation must cover proper log directory initialization requirements",
      "Must ensure Docker containers have write access to host system paths",
      "Solution should validate prerequisite script execution requirements",
      "Must explain privilege escalation requirements for directory creation"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:13:43"
    }
  }
]