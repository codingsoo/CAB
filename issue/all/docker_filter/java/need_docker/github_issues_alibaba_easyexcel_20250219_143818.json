[
  {
    "number": 903,
    "title": "cell\u5bf9\u90e8\u5206\u6587\u672c\u6dfb\u52a0\u6837\u5f0f\u95ee\u9898",
    "created_at": "2019-11-27T08:14:14Z",
    "closed_at": "2019-11-27T10:36:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/903",
    "body": "**\u5f02\u5e38\u4ee3\u7801**\r\n```java\r\n\r\n  public class HighlightCellWriteHandler implements CellWriteHandler {\r\n\r\n   \r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row,\r\n                                 Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell,\r\n                                Head head, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\n                                 List<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n        if (!isHead && cell.getColumnIndex() == 0) {\r\n             String value = cell.getStringCellValue();\r\n             Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n             Font ftRed = workbook.createFont();\r\n             ftRed.setColor(HSSFColor.RED.index);\r\n             Font ftGreen = workbook.createFont();\r\n             ftRed.setColor(HSSFColor.GREEN.index);\r\n             XSSFRichTextString textString = new XSSFRichTextString(value);\r\n             textString.applyFont(0,textString.length()/2,ftRed);\r\n             textString.applyFont(textString.length()/2,textString.length(),ftGreen); \r\n             cell.setCellValue(textString);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n\u5bf9cell\u7684\u6587\u672c \u8bbe\u7f6e\u5b57\u4f53\u989c\u8272\u65e0\u6548\uff0c\u8bf7\u95ee\u5e94\u8be5\u600e\u4e48\u5904\u7406\uff0c\u56e0\u4e3a\u662f\u8981\u5bf9\u6587\u672c\u90e8\u5206\u6587\u5b57\u52a0\u6837\u5f0f\uff0c\u6240\u4ee5\u4e0d\u7528setCellStyle",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/903/comments",
    "author": "qwn3213",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:36:24Z",
        "body": "\u9700\u8981\u8bbe\u7f6e`inMemory`=`true`"
      },
      {
        "user": "qwn3213",
        "created_at": "2019-11-27T12:07:00Z",
        "body": "> \u9700\u8981\u8bbe\u7f6e`inMemory`=`true`\r\n\r\n    /**\r\n     * Write excel in memory. Default false,the cache file is created and finally written to excel.\r\n     * <p>\r\n     * Comment and RichTextString are only supported in memory mode.\r\n     */\r\n    private Boolean inMemory;\r\n\r\n\r\n\u5bfc\u51fa\u65f6\u4f7f\u7528\uff1a\r\nEasyExcel.write(fileName, Bean.class).inMemory(true).sheet().registerWriteHandler(new CustomCellWriteHandler()).doWrite(beanList);\r\n\r\n\r\n"
      }
    ],
    "satisfaction_conditions": [
      "Solution must enable memory mode for partial text styling support",
      "Address compatibility between styling method and Excel writing mode"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 01:15:21"
    }
  }
]