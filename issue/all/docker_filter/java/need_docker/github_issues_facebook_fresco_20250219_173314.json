[
  {
    "number": 2422,
    "title": "animated-gif package breaks downloadable gifs with rounding",
    "created_at": "2019-10-18T16:19:03Z",
    "closed_at": "2019-11-12T11:55:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2422",
    "body": "### Description\r\n\r\nI'm using **com.facebook.fresco:fresco** and **com.facebook.fresco:animated-gif** for show animated gif.\r\nI load a gif image (non animated) from the Internet and apply **RoundingParams**.  \r\nI expect to see round image, but I get square.\r\nGifs from app resources work fine.\r\nI need **animated-gif** package for animation, but how to disable it for non animated gifs?\r\n\r\n### Reproduction\r\n\r\nIf enable **animated-gif** package then **RoundingParams** will broken but animation will worked fine.\r\n\r\n### Solution\r\n\r\nDisabling **animated-gif** package resolve problem, but all animated gifs break.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 2.0.0\r\n* animated-gif: 2.0.0\r\n* Platform version: any device\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2422/comments",
    "author": "ilyamuromets",
    "comments": [
      {
        "user": "stale[bot]",
        "created_at": "2019-11-01T17:06:01Z",
        "body": "Hey there, it looks like there has been no activity on this issue recently. Has the issue been fixed, or does it still require the community's attention? This issue may be closed if no further activity occurs. You may also label this issue as \"bug\" or \"enhancement\" and I will leave it open. Thank you for your contributions.\n\n\n---\n\nClosing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please feel free to reopen with up-to-date information.\n"
      },
      {
        "user": "ilyamuromets",
        "created_at": "2019-11-12T07:55:52Z",
        "body": "The problem still exist!"
      },
      {
        "user": "oprisnik",
        "created_at": "2019-11-12T11:19:09Z",
        "body": "Hey! How can we reproduce the issue? Can you give us some sample code? Rounding for GIFs is currently not supported."
      },
      {
        "user": "ilyamuromets",
        "created_at": "2019-11-12T11:44:34Z",
        "body": "@oprisnik The problem is in use **fresco**'s and **animated-gif**'s dependencies at the same time.\r\nI use fresco for show user photo which is one-frame gif without animation and round it in user list. And I use fresco for show animated gifs. Both (user photo and funny gifs) are loading from the Internet. But with **animated-gif** fresco doesn't round user photo gif.\r\nI can create demo project for you during several days."
      },
      {
        "user": "oprisnik",
        "created_at": "2019-11-12T11:55:41Z",
        "body": "Oh, that explains the issue.\r\nWhen you include animated-gif, we'll use the animated GIF decoder for the image, which does not support rounding. For a single frame GIF, the system can decode a static image (which is happening when you don't have animated-gif).\r\n\r\nThe solution to this problem is to supply this method:\r\n\r\n```java\r\nImageDecodeOptions options = ImageDecodeOptions.newBuilder().setForceStaticImage(true).build();\r\n// Pass the options to the Drawee view via a DraweeController\r\ndraweeControllerBuilder.setImageRequest(\r\n          ImageRequestBuilder.newBuilderWithSource(uri)\r\n              .setImageDecodeOptions(options)\r\n              .build());\r\n```"
      },
      {
        "user": "ilyamuromets",
        "created_at": "2019-11-12T12:27:34Z",
        "body": "@oprisnik thanks, it's working."
      }
    ],
    "satisfaction_conditions": [
      "Solution must allow using animated-gif package while preserving rounding functionality for static GIFs loaded from network",
      "Must provide a way to force static image decoding for specific GIFs",
      "Solution must maintain animation capability for actual animated GIFs",
      "Approach should work without removing dependencies"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:57:35"
    }
  },
  {
    "number": 2392,
    "title": "Class Cast Exception",
    "created_at": "2019-08-13T14:42:23Z",
    "closed_at": "2019-08-13T15:53:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2392",
    "body": "### Exception\r\n`java.lang.ClassCastException: o.Mw cannot be cast to o.Nw\r\n       at com.app.example.share.ShareUtils$2.onNewResultImpl + 243(ShareUtils.java:243)\r\n       at com.facebook.datasource.BaseDataSubscriber.onNewResult + 46(BaseDataSubscriber.java:46)\r\n       at com.facebook.datasource.AbstractDataSource$1.run + 176(AbstractDataSource.java:176)\r\n       at android.os.Handler.handleCallback + 873(Handler.java:873)\r\n       at android.os.Handler.dispatchMessage + 99(Handler.java:99)\r\n       at android.os.Looper.loop + 193(Looper.java:193)\r\n       at android.app.ActivityThread.main + 6863(ActivityThread.java:6863)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run + 537(RuntimeInit.java:537)\r\n       at com.android.internal.os.ZygoteInit.main + 858(ZygoteInit.java:858)`\r\n### Code sniped\r\nDataSubscriber dataSubscriber = new BaseDataSubscriber<CloseableReference<CloseableBitmap>>() {\r\n            Override\r\n            protected void onNewResultImpl(com.facebook.datasource.DataSource<CloseableReference<CloseableBitmap>> dataSource) {\r\n                if (!dataSource.isFinished()) {\r\n                    return;\r\n                }\r\n                CloseableReference<CloseableBitmap> imageReference = null;\r\n                CloseableReference<CloseableBitmap> closeableReference = null;\r\n\r\n                try {\r\n                    imageReference = dataSource.getResult();\r\n                    if (imageReference != null) {\r\n                        closeableReference = imageReference.clone();\r\n                        CloseableBitmap closeableBitmap = closeableReference.get();\r\n    }\r\n                    }\r\n                } catch (Exception e) {\r\n                    LogUtils.reportNonfatalException(TAG, e);\r\n                } \r\n            }\r\n\r\nNot able to cast CloseableReference to CloseableBitmap\r\n### Additional Information\r\n* Fresco version: [2.0.0]\r\n* Device: [HMD Global Nokia 5,ONEPLUS A6010]\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2392/comments",
    "author": "Devendra-Mehra",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2019-08-13T15:53:46Z",
        "body": "The image is not guaranteed to be a closeable bitmap. For example, for animated images, you won't get one. If that can happen , you need to properly handle that case :)"
      },
      {
        "user": "Devendra-Mehra",
        "created_at": "2019-08-14T06:38:33Z",
        "body": " **Sure that worked for me** \ud83d\udc4d"
      }
    ],
    "satisfaction_conditions": [
      "Handle cases where the image type might not be CloseableBitmap",
      "Ensure type safety before casting operations",
      "Provide error handling for unexpected data source results",
      "Maintain compatibility with Fresco 2.0.0"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:57:47"
    }
  }
]