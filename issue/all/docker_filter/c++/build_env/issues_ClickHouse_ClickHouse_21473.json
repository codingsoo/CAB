{
  "number": 21473,
  "title": "How to downgrade from version 20.12.7.3 to 20.4.4.18 with Atomic database created",
  "created_at": "2021-03-05T10:27:05Z",
  "closed_at": "2021-03-08T06:18:26Z",
  "labels": [
    "question",
    "question-answered"
  ],
  "url": "https://github.com/ClickHouse/ClickHouse/issues/21473",
  "body": "I created some Atomic databases in 20.12.7.3, when I need to downgrade the server to 20.4.4.18 there's always errors like below: \r\n`{} <Error> Application: DB::Exception: Syntax error (in file /var/lib/clickhouse/metadata/default.sql): failed at position 19 (line 1, col 19): UUID '6ef8d876-bd4e-44bc-bc44-2f2e950e3f20'\r\nENGINE = Atomic\r\n. Expected one of: storage definition, ENGINE, ON\r\n`\r\nHow can I smoothly do the downgrade? \r\nI tried to set allow_experimental_database_atomic=1 in users.xml, but it doesn't work. ",
  "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/21473/comments",
  "author": "Zhile",
  "comments": [
    {
      "user": "den-crane",
      "created_at": "2021-03-05T13:03:47Z",
      "body": "in 20.12.7.3 You can move all tables to ordinary database by rename.\r\n\r\n```\r\ncreate database atomic_db Engine=Atomic;\r\ncreate database ordinary_db Engine=Ordinary;\r\ncreate table  atomic_db.x(A Int64) Engine=MergeTree order by A;\r\ninsert into atomic_db.x select number from numbers(100000);\r\nrename table atomic_db.x to ordinary_db.x;\r\nls -1 /var/lib/clickhouse/data/ordinary_db/x\r\nall_1_1_0\r\ndetached\r\nformat_version.txt\r\ndrop database atomic_db;\r\ndetach database ordinary_db;\r\nmv /var/lib/clickhouse/metadata/ordinary_db.sql /var/lib/clickhouse/metadata/atomic_db.sql\r\nvi /var/lib/clickhouse/metadata/atomic_db.sql\r\nmv /var/lib/clickhouse/metadata/ordinary_db /var/lib/clickhouse/metadata/atomic_db\r\nmv /var/lib/clickhouse/data/ordinary_db /var/lib/clickhouse/data/atomic_db\r\nattach database atomic_db;\r\nselect count() from atomic_db.x\r\n\u250c\u2500count()\u2500\u2510\r\n\u2502  100000 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nshow create database atomic_db\r\n\u250c\u2500statement\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 CREATE DATABASE atomic_db\r\nENGINE = Ordinary \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nYou can generate rename by \r\n```\r\nselect 'rename table ....atomdb.' ||name||' to ordin.'||name||';' from system.tables where db = atomdb and engine =\r\n```"
    }
  ],
  "git_commit_info": {
    "sha": "045fd6f55db37059c97c0c276e8914b096e1f6bb",
    "date": "2017-02-07T22:40:08Z",
    "message": "fix build without readline",
    "author": "proller"
  },
  "repository_info": {},
  "llm_calls_before_build": 0,
  "dockerfile_attempt_1": 1,
  "dockerfile_attempt_1_failed": true,
  "dockerfile_build_success": true,
  "llm_calls_total": 10,
  "dockerfile": "FROM ubuntu:20.04\n\n# Avoid interactive prompts during package installation\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies for ClickHouse\nRUN apt-get update && apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    dirmngr \\\n    gnupg \\\n    wget \\\n    sudo \\\n    git \\\n    cmake \\\n    build-essential \\\n    gcc-9 \\\n    g++-9 \\\n    libicu-dev \\\n    libreadline-dev \\\n    libmysqlclient-dev \\\n    unixodbc-dev \\\n    libltdl-dev \\\n    libssl-dev \\\n    libgoogle-perftools-dev \\\n    libbz2-dev \\\n    libzstd-dev \\\n    libboost-dev \\\n    libboost-system-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libboost-program-options-dev \\\n    zlib1g-dev \\\n    liblz4-dev \\\n    libdouble-conversion-dev \\\n    libzookeeper-mt-dev \\\n    libsparsehash-dev \\\n    librdkafka-dev \\\n    libcapnp-dev \\\n    libpoco-dev \\\n    libunwind-dev \\\n    libxml2-dev \\\n    libpcre3-dev \\\n    ninja-build \\\n    python3 \\\n    python3-pip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set gcc-9 as default compiler\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 \\\n    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90 \\\n    && update-alternatives --set gcc /usr/bin/gcc-9 \\\n    && update-alternatives --set g++ /usr/bin/g++-9\n\n# Create build directory\nWORKDIR /build\n\n# Clone ClickHouse repository and checkout specific commit\nRUN git clone https://github.com/ClickHouse/ClickHouse.git \\\n    && cd ClickHouse \\\n    && git checkout 045fd6f55db37059c97c0c276e8914b096e1f6bb\n\n# Create build directory\nWORKDIR /build/ClickHouse/build\n\n# Configure cmake for the build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release\n\n# Build ClickHouse with retry mechanism to handle potential build failures\nRUN for i in 1 2 3; do \\\n        cmake --build . -- -j$(nproc) && break || \\\n        echo \"Build attempt $i failed, retrying with less parallelism...\" && \\\n        cmake --build . -- -j2 && break || \\\n        echo \"Build attempt $i failed, retrying with single thread...\" && \\\n        cmake --build . -- -j1 && break || \\\n        echo \"Build attempt $i failed, will retry...\" && \\\n        sleep 5; \\\n    done\n\n# Add the build directory to PATH\nENV PATH=\"/build/ClickHouse/build/programs:${PATH}\"\n\n# Create directories for ClickHouse data and configuration\nRUN mkdir -p /etc/clickhouse-server/config.d \\\n    && mkdir -p /etc/clickhouse-server/users.d \\\n    && mkdir -p /var/lib/clickhouse \\\n    && mkdir -p /var/lib/clickhouse/tmp\n\n# Create a basic configuration file for ClickHouse server\nRUN echo '<clickhouse>\\n\\\n    <logger>\\n\\\n        <level>trace</level>\\n\\\n        <console>true</console>\\n\\\n    </logger>\\n\\\n    <listen_host>0.0.0.0</listen_host>\\n\\\n    <path>/var/lib/clickhouse/</path>\\n\\\n    <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>\\n\\\n</clickhouse>' > /etc/clickhouse-server/config.xml\n\n# Create a users.xml with allow_experimental_database_atomic setting enabled\nRUN echo '<clickhouse>\\n\\\n    <profiles>\\n\\\n        <default>\\n\\\n            <allow_experimental_database_atomic>1</allow_experimental_database_atomic>\\n\\\n        </default>\\n\\\n    </profiles>\\n\\\n    <users>\\n\\\n        <default>\\n\\\n            <password></password>\\n\\\n            <profile>default</profile>\\n\\\n            <networks>\\n\\\n                <ip>::/0</ip>\\n\\\n            </networks>\\n\\\n            <allow_experimental_database_atomic>1</allow_experimental_database_atomic>\\n\\\n        </default>\\n\\\n    </users>\\n\\\n</clickhouse>' > /etc/clickhouse-server/users.xml\n\n# Create a test script to demonstrate the issue and solution\nRUN echo '#!/bin/bash\\n\\\n# Start ClickHouse server with version 20.12.7.3 (the newer version)\\n\\\necho \"Starting ClickHouse server 20.12.7.3...\"\\n\\\n# Download and install ClickHouse 20.12.7.3\\n\\\napt-get update\\n\\\napt-get install -y apt-transport-https ca-certificates dirmngr\\n\\\napt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4\\n\\\necho \"deb https://repo.clickhouse.tech/deb/stable/ main/\" > /etc/apt/sources.list.d/clickhouse.list\\n\\\napt-get update\\n\\\napt-get install -y clickhouse-server=20.12.7.3 clickhouse-client=20.12.7.3\\n\\\n\\n\\\n# Start the server\\n\\\nservice clickhouse-server start\\n\\\nsleep 5\\n\\\n\\n\\\n# Create an Atomic database\\n\\\necho \"Creating Atomic database...\"\\n\\\nclickhouse-client --query \"CREATE DATABASE test_atomic ENGINE = Atomic\"\\n\\\nclickhouse-client --query \"CREATE TABLE test_atomic.test (id UInt32) ENGINE = MergeTree ORDER BY id\"\\n\\\nclickhouse-client --query \"INSERT INTO test_atomic.test VALUES (1), (2), (3)\"\\n\\\nclickhouse-client --query \"SELECT * FROM test_atomic.test\"\\n\\\n\\n\\\n# Stop the server\\n\\\nservice clickhouse-server stop\\n\\\nsleep 5\\n\\\n\\n\\\n# Now downgrade to 20.4.4.18\\n\\\necho \"Downgrading to ClickHouse 20.4.4.18...\"\\n\\\napt-get install -y clickhouse-server=20.4.4.18 clickhouse-client=20.4.4.18\\n\\\n\\n\\\n# The downgrade will fail without the allow_experimental_database_atomic setting\\n\\\n# Start with our custom configuration that includes allow_experimental_database_atomic=1\\n\\\ncp /etc/clickhouse-server/users.xml /etc/clickhouse-server/users.xml.backup\\n\\\ncp /etc/clickhouse-server/config.xml /etc/clickhouse-server/config.xml.backup\\n\\\n\\n\\\n# Copy our config with allow_experimental_database_atomic enabled\\n\\\ncp /our-users.xml /etc/clickhouse-server/users.xml\\n\\\n\\n\\\necho \"Starting ClickHouse server 20.4.4.18 with allow_experimental_database_atomic=1...\"\\n\\\nservice clickhouse-server start\\n\\\nsleep 5\\n\\\n\\n\\\n# Check if the database is still accessible\\n\\\necho \"Checking if database is still accessible:\"\\n\\\nclickhouse-client --query \"SHOW DATABASES\"\\n\\\nclickhouse-client --query \"SELECT * FROM test_atomic.test\"\\n\\\n\\n\\\necho \"Test completed.\"\\n\\\n' > /test-downgrade.sh\n\n# Copy our users.xml to a location for the test script\nRUN cp /etc/clickhouse-server/users.xml /our-users.xml\n\n# Make the test script executable\nRUN chmod +x /test-downgrade.sh\n\n# Set working directory\nWORKDIR /\n\n# Default command\nCMD [\"echo\", \"ClickHouse environment prepared for testing issue #21473. Run /test-downgrade.sh to test the downgrade scenario.\"]",
  "successful_candidate_index": 1,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "satisfaction_conditions": [
    "Database data must be preserved after downgrade",
    "Database must be accessible in older version 20.4.4.18",
    "Database structure must be compatible with older version",
    "All tables must remain queryable after downgrade",
    "No UUID-related syntax errors should occur after downgrade"
  ]
}