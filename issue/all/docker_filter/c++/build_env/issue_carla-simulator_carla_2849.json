{
  "number": 2849,
  "title": "Custom background vehicle model in Carla",
  "created_at": "2020-05-12T18:27:53Z",
  "closed_at": "2020-06-30T14:05:52Z",
  "labels": [
    "question"
  ],
  "url": "https://github.com/carla-simulator/carla/issues/2849",
  "body": "Hello,\r\n\r\nThanks for making a great simulator. I am doing a project in which I need to **customize all vehicles' dynamic models** in the Carla environment (for example, the vehicle will get the ground truth information and decide to change the lane or change the acceleration).\r\n\r\nIn order to get information about all the vehicles, I use the following codes:\r\n```\r\nwaypoint_list = [world.get_map().get_waypoint(v.get_location(), project_to_road=True) for v in vehicles_list]\r\n```\r\n\r\nAs I have about 200 vehicles in the Town04 map, I noticed that the line above cost me about 5 seconds each time, which can not meet the real-time requirements. My Carla version is 0.9.9 and runs on Ubuntu 18.04 with i9-9900k and 64 Gb RAM.\r\n\r\nI wonder if there are other solutions to let me **customize the control model** of the vehicles using the **provided PythonAPI**, or I may need to modify the source code of Carla to reach my purpose?\r\n\r\nThanks!",
  "comments_url": "https://api.github.com/repos/carla-simulator/carla/issues/2849/comments",
  "author": "miracelplus",
  "comments": [
    {
      "user": "germanros1987",
      "created_at": "2020-06-26T06:04:00Z",
      "body": "@miracelplus you just want to get the location of all the vehicles for a given time instant? @glopezdiest could you provide a more effective way to  do this?"
    },
    {
      "user": "glopezdiest",
      "created_at": "2020-06-26T08:47:49Z",
      "body": "Hey @miracelplus. Could you provide a little more detail to your process? What are you gonna use the waypoint_list for? Isn't the location of the vehicles good enough? From what you've showed, the only recommendation i can tell you is, don't get the map every time, store it in a variable once and call it to get the waypoints."
    },
    {
      "user": "miracelplus",
      "created_at": "2020-06-29T01:57:09Z",
      "body": "Hello,\r\n\r\nThanks for your reply! I\u2019m working on customizing my own vehicle model (car following and lane change). The detailed usage of my application is like this:\r\n\r\n1.For every second, I need to get the information for each vehicle\r\n2.Then, I decide the next-second acceleration for this vehicle. \r\n3.I use waypoint for each vehicle and get the acceleration from my own decision part in order to keep the vehicle on the lane. \r\n4.Calculate the next waypoint the vehicle should achieve given specific acceleration.\r\n5.Teleport the vehicle to the new waypoint\r\n\r\nThat\u2019s how I finish my customized car-following model. I know this may be a dumb usage of provided PythonAPI. Therefore, I wonder if there\u2019s some more efficient ways that I can fulfill my goal?\r\n\r\nThanks!"
    },
    {
      "user": "glopezdiest",
      "created_at": "2020-06-29T11:29:22Z",
      "body": "I see. I'm still a bit confused though.\r\n\r\nFrom what I understand, you only care about the acceleration of the vehicle, which you are using to move (teleport) the vehicle. Are you using this specific approach instead of using a controller for some reason?\r\n\r\nWhy are you using the waypoints instead of the location, because they are in the middle of the road so you only care about going forward?\r\n\r\nYou seem to only care about using waypoints but you are getting them from the vehicle location on each frame (the command you showed at the beginning of this issue). So how are you calculating this \"next waypoint\"? You can just use the *carla.Waypoint.next()* function, which should remove the use of that location-to-waypoint-loop, speeding up the process.\r\n\r\nThose any of this makes sense? I may have just completely missunderstood what you are trying to achieve"
    },
    {
      "user": "miracelplus",
      "created_at": "2020-06-29T19:19:48Z",
      "body": "Hello,\r\n\r\nI\u2019m using this approach instead of a controller is because that some of my customizing model need all the vehicles\u2019 information around one specific vehicle. Therefore, I choose to use the PythonAPI to get all the vehicle\u2019s information and individually control each of them. I wonder if the controller method can get the information of surrounding vehicles (like 5 or 6 vehicles around this vehicle).\r\n\r\nAlso, the usage of waypoint method is that I wish the vehicle can follow the road, for example, the vehicle is on a curve shaped road and I wish to control the \u201clongitudinal\u201d acceleration of it. Is there some more straightforward method to achieve this goal? I\u2019m only using Carla for a short period of time so I may miss some more useful approaches.\r\n\r\nThe waypoint.next method is very helpful to my usage. Deleting the location-to-waypoint method accelerates the running speed.\r\n\r\nThanks for your reply, that means a lot to me."
    },
    {
      "user": "glopezdiest",
      "created_at": "2020-06-30T07:19:35Z",
      "body": "> Is there some more straightforward method to achieve this goal?\r\n\r\nNo, I think you are doing the correct approach here, but I've never though about it so I was confused. \r\n\r\n> The waypoint.next method is very helpful to my usage.\r\n\r\nGood to hear :+1:. I'm leaving this issue open in case your solution isn't final, but please, remember to close it if you find that it's resolved"
    },
    {
      "user": "miracelplus",
      "created_at": "2020-06-30T14:05:49Z",
      "body": "Thanks a lot!"
    }
  ],
  "satisfaction_conditions": [
    "Solution must enable real-time processing for 200+ vehicles",
    "Must provide access to surrounding vehicle information for decision-making",
    "Must maintain road adherence during control",
    "Should clarify PythonAPI capabilities vs engine modification needs",
    "Must support per-vehicle individualized control"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-04-04 23:49:57"
  },
  "git_commit_info": {
    "sha": "18f10a804d7b1bada36558dae0b83d4aae89df46",
    "date": "2018-05-24T10:47:31Z",
    "message": "Update FAQ with Package script",
    "author": "nsubiron"
  },
  "repository_info": {
    "structure_summary": ".\n./.git\n./.git/branches\n./.git/description\n./.git/hooks\n./.git/hooks/applypatch-msg.sample\n./.git/hooks/commit-msg.sample\n./.git/hooks/post-update.sample\n./.git/hooks/pre-applypatch.sample\n./.git/hooks/pre-commit.sample\n./.git/hooks/pre-merge-commit.sample\n./.git/hooks/pre-push.sample\n./.git/hooks/pre-receive.sample\n./.git/hooks/push-to-checkout.sample\n./.git/hooks/update.sample\n./.git/hooks/fsmonitor-watchman.sample\n./.git/hooks/pre-rebase.sample\n./.git/hooks/prepare-commit-msg.sample\n./.git/hooks/sendemail-validate.sample\n./.git/info\n./.git/info/exclude\n./.git/config\n./.git/objects\n./.git/objects/pack\n./.git/objects/pack/pack-25f6d498de09ccf2c7ab275f943557da5e5a693e.pack\n./.git/objects/pack/pack-25f6d498de09ccf2c7ab275f943557da5e5a693e.rev\n./.git/objects/pack/pack-25f6d498de09ccf2c7ab275f943557da5e5a693e.idx\n./.git/objects/info\n./.git/HEAD\n./.git/refs\n./.git/refs/heads\n./.git/refs/heads/ue5-dev\n./.git/refs/tags\n./.git/refs/remotes\n./.git/refs/remotes/origin\n./.git/refs/remotes/origin/HEAD\n./.git/packed-refs\n./.git/logs\n./.git/logs/refs\n./.git/logs/refs/remotes\n./.git/logs/refs/remotes/origin\n./.git/logs/refs/remotes/origin/HEAD\n./.git/logs/refs/heads\n./.git/logs/refs/heads/ue5-dev\n./.git/logs/HEAD\n./.git/index\n./.gitattributes\n./Docs\n./Docs/map_customization.md\n./Docs/pull_request_template.md\n./Docs/release_readme.md\n./Docs/simulator_keyboard_input.md\n./Docs/img\n./Docs/img/benchmark_diagram.png\n./Docs/img/benchmark_diagram_small.png\n./Docs/img/capture_depth.png\n./Docs/img/capture_scenefinal.png\n./Docs/img/capture_semseg.png\n./Docs/img/client_window.png\n./Docs/img/initial_positions.png\n./Docs/img/materials_screenshot_00.png\n./Docs/img/materials_screenshot_01.png\n./Docs/img/road_instructions_example.png\n./Docs/img/saved_images_to_disk.png\n./Docs/img/simulator_window.png\n./Docs/img/town01_140_134.png\n./Docs/img/town01_positions.png\n./Docs/img/welcome.png\n./Docs/img/btn\n./Docs/img/btn/LICENSE\n./Docs/img/btn/chat.png\n./Docs/img/btn/docs.png\n./Docs/img/btn/download.png\n./Docs/img/btn/forum.png\n./Docs/img/btn/web.png\n./Docs/img/carla_plugin_graph.java\n./Docs/img/carla_plugin_graph.png\n./Docs/img/carlaserver.svg\n./Docs/img/lidar_point_cloud.gif\n./Docs/img/steering_angle_mustang.png\n./Docs/img/vehicle_bounding_box.png\n./Docs/img/video_thumbnail.png\n./Docs/CODE_OF_CONDUCT.md\n./Docs/CONTRIBUTING.md\n./Docs/Example.CarlaSettings.ini\n./Docs/benchmark_basic_results_town01.md\n./Docs/benchmark_basic_results_town02.md\n./Docs/benchmark_creating.md\n./Docs/benchmark_metrics.md\n./Docs/benchmark_start.md\n./Docs/benchmark_structure.md\n./Docs/cameras_and_sensors.md\n./Docs/carla_design.md\n./Docs/carla_headless.md\n./Docs/carla_server.md\n./Docs/carla_settings.md\n./Docs/coding_standard.md\n./Docs/configuring_the_simulation.md\n./Docs/connecting_the_client.md\n./Docs/epic_automotive_materials.md\n./Docs/faq.md\n./Docs/getting_started.md\n./Docs/how_to_add_assets.md\n./Docs/how_to_build_on_linux.md\n./Docs/how_to_build_on_windows.md\n./Docs/index.md\n./Docs/issue_template.md\n./Docs/measurements.md\n./Docs/running_simulator_standalone.md\n./Util\n./Util/CarlaServer\n./Util/CarlaServer/include\n./Util/CarlaServer/include/carla\n./Util/CarlaServer/include/carla/carla_server.h\n./Util/CarlaServer/source\n./Util/CarlaServer/source/carla\n./Util/CarlaServer/source/carla/ArrayView.h\n./Util/CarlaServer/source/carla/Debug.h\n./Util/CarlaServer/source/carla/Logging.h\n./Util/CarlaServer/source/carla/NonCopyable.h\n./Util/CarlaServer/source/carla/Profiler.h\n./Util/CarlaServer/source/carla/StopWatch.h\n./Util/CarlaServer/source/carla/server\n./Util/CarlaServer/source/carla/server/AgentServer.cpp\n./Util/CarlaServer/source/carla/server/AgentServer.h\n./Util/CarlaServer/source/carla/server/AsyncServer.h\n./Util/CarlaServer/source/carla/server/AsyncService.cpp\n./Util/CarlaServer/source/carla/server/AsyncService.h\n./Util/CarlaServer/source/carla/server/CarlaEncoder.cpp\n./Util/CarlaServer/source/carla/server/CarlaEncoder.h\n./Util/CarlaServer/source/carla/server/CarlaMeasurements.cpp\n./Util/CarlaServer/source/carla/server/CarlaMeasurements.h\n./Util/CarlaServer/source/carla/server/CarlaSceneDescription.h\n./Util/CarlaServer/source/carla/server/CarlaServer.cpp\n./Util/CarlaServer/source/carla/server/CarlaServer.h\n./Util/CarlaServer/source/carla/server/CarlaServerAPI.h\n./Util/CarlaServer/source/carla/server/DoubleBuffer.cpp\n./Util/CarlaServer/source/carla/server/DoubleBuffer.h\n./Util/CarlaServer/source/carla/server/EncoderServer.h\n./Util/CarlaServer/source/carla/server/Future.h\n./Util/CarlaServer/source/carla/server/MeasurementsMessage.h\n./Util/CarlaServer/source/carla/server/Protobuf.cpp\n./Util/CarlaServer/source/carla/server/Protobuf.h\n./Util/CarlaServer/source/carla/server/RequestNewEpisode.h\n./Util/CarlaServer/source/carla/server/SensorDataInbox.h\n./Util/CarlaServer/source/carla/server/SensorDataMessage.cpp\n./Util/CarlaServer/source/carla/server/SensorDataMessage.h\n./Util/CarlaServer/source/carla/server/ServerTraits.h\n./Util/CarlaServer/source/carla/server/TCPServer.cpp\n./Util/CarlaServer/source/carla/server/TCPServer.h\n./Util/CarlaServer/source/carla/server/Task.h\n./Util/CarlaServer/source/carla/server/ThreadSafeQueue.h\n./Util/CarlaServer/source/carla/server/WorldServer.cpp\n./Util/CarlaServer/source/carla/server/WorldServer.h\n./Util/CarlaServer/source/test\n./Util/CarlaServer/source/test/Sensor.cpp\n./Util/CarlaServer/source/test/Sensor.h\n./Util/CarlaServer/source/test/Test_AsyncServer.cpp\n./Util/CarlaServer/source/test/Test_CarlaServer.cpp\n./Util/CarlaServer/source/test/Test_DoubleBuffer.cpp\n./Util/CarlaServer/source/test/Test_SensorDataInbox.cpp\n./Util/CarlaServer/source/test/Test_TCPServer.cpp\n./Util/CarlaServer/source/test/main.cpp\n./Util/ContentVersions.txt\n./Util/ImageConverter\n./Util/ImageConverter/.gitignore\n./Util/ImageConverter/Makefile\n./Util/ImageConverter/README.md\n./Util/ImageConverter/depth_pixel_converter.h\n./Util/ImageConverter/image_converter.h\n./Util/ImageConverter/image_converter_types.h\n./Util/ImageConverter/image_io.h\n./Util/ImageConverter/label_pixel_converter.h\n./Util/ImageConverter/main.cpp\n./Util/Proto\n./Util/Proto/carla_server.proto\n./Util/Protoc.bat\n./Util/Protoc.sh\n./Util/cmake\n./Util/cmake/CMakeLists.txt\n./Util/cmake/CarlaServer\n./Util/cmake/CarlaServer/CMakeLists.txt\n./Util/download_from_gdrive.py\n./.gitignore\n./.travis.yml\n./CARLA.sublime-project\n./CHANGELOG.md\n./Doxyfile\n./Jenkinsfile\n./LICENSE\n./Makefile\n./Package.sh\n./PythonClient\n./PythonClient/.pep8\n./PythonClient/.pylintrc\n./PythonClient/MANIFEST.in\n./PythonClient/carla\n./PythonClient/carla/__init__.py\n./PythonClient/carla/agent\n./PythonClient/carla/agent/__init__.py\n./PythonClient/carla/agent/agent.py\n./PythonClient/carla/agent/forward_agent.py\n./PythonClient/carla/carla_server_pb2.py\n./PythonClient/carla/client.py\n./PythonClient/carla/driving_benchmark\n./PythonClient/carla/driving_benchmark/__init__.py\n./PythonClient/carla/driving_benchmark/driving_benchmark.py\n./PythonClient/carla/driving_benchmark/experiment.py\n./PythonClient/carla/driving_benchmark/experiment_suites\n./PythonClient/carla/driving_benchmark/experiment_suites/__init__.py\n./PythonClient/carla/driving_benchmark/experiment_suites/basic_experiment_suite.py\n./PythonClient/carla/driving_benchmark/experiment_suites/corl_2017.py\n./PythonClient/carla/driving_benchmark/experiment_suites/experiment_suite.py\n./PythonClient/carla/driving_benchmark/metrics.py\n./PythonClient/carla/driving_benchmark/recording.py\n./PythonClient/carla/driving_benchmark/results_printer.py\n./PythonClient/carla/image_converter.py\n./PythonClient/carla/planner\n./PythonClient/carla/planner/Town01.png\n./PythonClient/carla/planner/Town01.txt\n./PythonClient/carla/planner/Town01Central.png\n./PythonClient/carla/planner/Town01Lanes.png\n./PythonClient/carla/planner/Town02.png\n./PythonClient/carla/planner/Town02.txt\n./PythonClient/carla/planner/Town02Big.png\n./PythonClient/carla/planner/Town02Central.png\n./PythonClient/carla/planner/Town02Lanes.png\n./PythonClient/carla/planner/__init__.py\n./PythonClient/carla/planner/astar.py\n./PythonClient/carla/planner/city_track.py\n./PythonClient/carla/planner/converter.py\n./PythonClient/carla/planner/graph.py\n./PythonClient/carla/planner/grid.py\n./PythonClient/carla/planner/map.py\n./PythonClient/carla/planner/planner.py\n./PythonClient/carla/sensor.py\n./PythonClient/carla/settings.py\n./PythonClient/carla/tcp.py\n./PythonClient/carla/transform.py\n./PythonClient/carla/util.py\n./PythonClient/client_example.py\n./PythonClient/driving_benchmark_example.py\n./PythonClient/manual_control.py\n./PythonClient/point_cloud_example.py\n./PythonClient/requirements.txt\n./PythonClient/setup.py\n./PythonClient/test\n./PythonClient/test/__init__.py\n./PythonClient/test/acceptance_tests\n./PythonClient/test/acceptance_tests/__init__.py\n./PythonClient/test/benchmark_server.py\n./PythonClient/test/console.py\n./PythonClient/test/suite\n./PythonClient/test/suite/Basic.py\n./PythonClient/test/suite/__init__.py\n./PythonClient/test/test_client.py\n./PythonClient/test/test_repeatability.py\n./PythonClient/test/test_suite.py\n./PythonClient/test/unit_tests\n./PythonClient/test/unit_tests/test_data\n./PythonClient/test/unit_tests/test_data/testfile_collisions\n./PythonClient/test/unit_tests/test_data/testfile_collisions/measurements.csv\n./PythonClient/test/unit_tests/test_data/testfile_collisions/summary.csv\n./PythonClient/test/unit_tests/test_experiment_suite.py\n./PythonClient/test/unit_tests/test_metrics.py\n./PythonClient/test/unit_tests/test_recording.py\n./PythonClient/view_start_positions.py\n./README.md\n./Rebuild.bat\n./Rebuild.sh\n./Setup.sh\n./Unreal\n./Unreal/CarlaUE4\n./Unreal/CarlaUE4/.gitignore\n./Unreal/CarlaUE4/CarlaUE4.png\n./Unreal/CarlaUE4/CarlaUE4.uproject\n./Unreal/CarlaUE4/Config\n./Unreal/CarlaUE4/Config/CarlaWeather.Town01.ini\n./Unreal/CarlaUE4/Config/CarlaWeather.ini\n./Unreal/CarlaUE4/Config/DefaultEngine.ini\n./Unreal/CarlaUE4/Config/DefaultGame.ini\n./Unreal/CarlaUE4/Config/DefaultInput.ini\n./Unreal/CarlaUE4/Plugins\n./Unreal/CarlaUE4/Plugins/Carla\n./Unreal/CarlaUE4/Plugins/Carla/Carla.uplugin\n./Unreal/CarlaUE4/Plugins/Carla/Content\n./Unreal/CarlaUE4/Plugins/Carla/Content/PostProcessingMaterials\n./Unreal/CarlaUE4/Plugins/Carla/Content/PostProcessingMaterials/DepthEffectMaterial.uasset\n./Unreal/CarlaUE4/Plugins/Carla/Content/PostProcessingMaterials/DepthEffectMaterial_GLSL.uasset\n./Unreal/CarlaUE4/Plugins/Carla/Content/PostProcessingMaterials/GTMaterial.uasset\n./Unreal/CarlaUE4/Plugins/Carla/Resources\n./Unreal/CarlaUE4/Plugins/Carla/Resources/Icon128.png\n./Unreal/CarlaUE4/Plugins/Carla/Source\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/AgentComponent.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/AgentComponent.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/AgentComponentVisitor.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/TrafficSignAgentComponent.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/TrafficSignAgentComponent.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/VehicleAgentComponent.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/VehicleAgentComponent.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/WalkerAgentComponent.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Agent/WalkerAgentComponent.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Carla.Build.cs\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Carla.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Carla.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/CityMapGenerator.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/CityMapGenerator.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/DynamicWeather.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/DynamicWeather.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaGameControllerBase.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaGameInstance.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaGameInstance.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaGameModeBase.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaGameModeBase.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaHUD.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaHUD.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaPlayerState.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaPlayerState.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/DataRouter.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/DataRouter.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/MockGameController.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/MockGameController.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/MockGameControllerSettings.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/Tagger.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/Tagger.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/TaggerDelegate.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/TaggerDelegate.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/CityAreaDescription.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/CityMapDefinitions.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/CityMapMeshHolder.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/CityMapMeshHolder.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/CityMapMeshTag.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/CityMapMeshTag.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/DoublyConnectedEdgeList.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/DoublyConnectedEdgeList.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/GraphGenerator.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/GraphGenerator.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/GraphParser.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/GraphParser.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/GraphTypes.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/GraphTypes.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/Position.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/RoadMap.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/RoadMap.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/RoadSegmentDescription.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/StaticMeshCollection.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/MapGen/StaticMeshCollection.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/RoadIntersection.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/RoadIntersection.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/RoadSegment.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/RoadSegment.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/Lidar.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/Lidar.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/LidarMeasurement.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/ReadOnlyBufferView.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SceneCaptureCamera.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SceneCaptureCamera.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SceneCaptureToDiskCamera.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SceneCaptureToDiskCamera.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/Sensor.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/Sensor.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SensorDataSink.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SensorDataView.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SensorFactory.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SensorFactory.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/CarlaEncoder.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/CarlaEncoder.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/CarlaServer.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/CarlaServer.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/ServerGameController.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/ServerGameController.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Server/ServerSensorDataSink.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CameraDescription.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CameraDescription.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CameraPostProcessParameters.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CarlaSettings.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CarlaSettings.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CarlaSettingsDelegate.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/CarlaSettingsDelegate.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/LidarDescription.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/LidarDescription.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/PostProcessEffect.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/PostProcessEffect.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/SensorDescription.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/SensorDescription.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/SensorDescriptionVisitor.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/WeatherDescription.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Settings/WeatherDescription.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/RoutePlanner.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/RoutePlanner.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/TrafficLightBase.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/TrafficLightBase.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/TrafficLightState.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/TrafficSignBase.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Traffic/TrafficSignBase.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/ActorWithRandomEngine.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/ActorWithRandomEngine.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/IniFile.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/ListView.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/NonCopyable.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/RandomEngine.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Util/RandomEngine.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/CarlaVehicleController.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/CarlaVehicleController.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/CarlaWheeledVehicle.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/CarlaWheeledVehicle.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/CarlaWheeledVehicleState.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/VehicleControl.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/VehicleSpawnerBase.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/VehicleSpawnerBase.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/WheeledVehicleAIController.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/WheeledVehicleAIController.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/WheeledVehicleController.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Vehicle/WheeledVehicleController.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Walker\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Walker/WalkerAIController.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Walker/WalkerAIController.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Walker/WalkerSpawnPoint.h\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Walker/WalkerSpawnerBase.cpp\n./Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Walker/WalkerSpawnerBase.h\n./Unreal/CarlaUE4/Source\n./Unreal/CarlaUE4/Source/CarlaUE4.Target.cs\n./Unreal/CarlaUE4/Source/CarlaUE4\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaMapGenerator.cpp\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaMapGenerator.h\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4.Build.cs\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4.cpp\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4.h\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4GameModeBase.cpp\n./Unreal/CarlaUE4/Source/CarlaUE4/CarlaUE4GameModeBase.h\n./Unreal/CarlaUE4/Source/CarlaUE4Editor.Target.cs\n./Update.sh\n./mkdocs.yml\n",
    "readme": "\n--- ./Util/ImageConverter/README.md ---\nImage Converter\n===============\n\nConverts output images of depth and semantic segmentation to a prettier format.\n\nRequires boost_system, boost_filesystem, boost_program_options, libpng, libtiff,\nlibjpeg and libomp.\n\nCompile with `clang++ -std=c++14 -fopenmp`, for the default compilation just run\nmake\n\n    make\n    ./bin/image_converter -h\n\n\n\n--- ./README.md ---\nCARLA Simulator\n===============\n\n[![Build Status](https://travis-ci.org/carla-simulator/carla.svg?branch=master)](https://travis-ci.org/carla-simulator/carla)\n[![Documentation](https://readthedocs.org/projects/carla/badge/?version=latest)](http://carla.readthedocs.io)\n[![Waffle.io](https://badge.waffle.io/carla-simulator/carla.svg?columns=Next,In%20Progress,Review)](https://waffle.io/carla-simulator/carla)\n\n[![carla.org](Docs/img/btn/web.png)](http://carla.org)\n[![download](Docs/img/btn/download.png)](https://github.com/carla-simulator/carla/releases/latest)\n[![documentation](Docs/img/btn/docs.png)](http://carla.readthedocs.io)\n[![discord](Docs/img/btn/chat.png)](https://discord.gg/vNVHXfb)\n<!-- [![forum](Docs/img/btn/forum.png)](link here) -->\n\nCARLA is an open-source simulator for autonomous driving research. CARLA has\nbeen developed from the ground up to support development, training, and\nvalidation of autonomous urban driving systems. In addition to open-source code\nand protocols, CARLA provides open digital assets (urban layouts, buildings,\nvehicles) that were created for this purpose and can be used freely. The\nsimulation platform supports flexible specification of sensor suites and\nenvironmental conditions.\n\n[![CARLA Video](Docs/img/video_thumbnail.png)](https://youtu.be/Hp8Dz-Zek2E)\n\nIf you want to benchmark your model in the same conditions as in our CoRL\u201917\npaper, check out\n[Benchmarking](http://carla.readthedocs.io/en/latest/benchmark_start/).\n\nNews\n----\n\n- 23.04.2018 CARLA 0.8.2 released: [post](http://carla.org/2018/04/23/release-0.8.2/), [change log](https://github.com/carla-simulator/carla/blob/master/CHANGELOG.md#carla-082), [release](https://github.com/carla-simulator/carla/releases/tag/0.8.2).\n- 05.04.2018 CARLA 0.8.1 released: [post](http://carla.org/2018/04/05/release-0.8.1/), [change log](https://github.com/carla-simulator/carla/blob/master/CHANGELOG.md#carla-081), [release](https://github.com/carla-simulator/carla/releases/tag/0.8.1).\n- 27.03.2018 CARLA 0.8.0 released: [post](http://carla.org/2018/03/27/release-0.8.0/), [change log](https://github.com/carla-simulator/carla/blob/master/CHANGELOG.md#carla-080), [release](https://github.com/carla-simulator/carla/releases/tag/0.8.0).\n- 25.01.2018 CARLA 0.7.1 released: [change log](https://github.com/carla-simulator/carla/blob/master/CHANGELOG.md#carla-071), [release](https://github.com/carla-simulator/carla/releases/tag/0.7.1).\n\nRoadmap\n-------\n\nWe are continuously working on improving CARLA, and we appreciate contributions\nfrom the community. Our most immediate goals are:\n\n- [ ] Releasing the methods evaluated in the CARLA paper\n- [x] Adding a Lidar sensor\n- [ ] Allowing for flexible and user-friendly import and editing of maps\n- [ ] Allowing the users to control non-player characters (and therefore set up user-specified scenarios)\n\nPaper\n-----\n\nIf you use CARLA, please cite our CoRL\u201917 paper.\n\n_CARLA: An Open Urban Driving Simulator_<br>Alexey Dosovitskiy, German Ros,\nFelipe Codevilla, Antonio Lopez, Vladlen Koltun; PMLR 78:1-16\n[[PDF](http://proceedings.mlr.press/v78/dosovitskiy17a/dosovitskiy17a.pdf)]\n\n\n```\n@inproceedings{Dosovitskiy17,\n  title = {{CARLA}: {An} Open Urban Driving Simulator},\n  author = {Alexey Dosovitskiy and German Ros and Felipe Codevilla and Antonio Lopez and Vladlen Koltun},\n  booktitle = {Proceedings of the 1st Annual Conference on Robot Learning},\n  pages = {1--16},\n  year = {2017}\n}\n```\n\nBuilding CARLA\n--------------\n\nUse `git clone` or download the project from this page. Note that the master\nbranch contains the latest fixes and features, for the latest stable code may be\nbest to switch to the latest release tag.\n\nThen follow the instruction at [How to build on Linux][buildlink].\n\nUnfortunately we don't have yet official instructions to build on other\nplatforms, please check the progress for [Windows][issue21] and [Mac][issue150].\n\n[buildlink]: http://carla.readthedocs.io/en/latest/how_to_build_on_linux\n[issue21]: https://github.com/carla-simulator/carla/issues/21\n[issue150]: https://github.com/carla-simulator/carla/issues/150\n\nContributing\n------------\n\nPlease take a look at our [Contribution guidelines][contriblink].\n\n[contriblink]: http://carla.readthedocs.io/en/latest/CONTRIBUTING\n\nF.A.Q.\n------\n\nIf you run into problems, check our\n[FAQ](http://carla.readthedocs.io/en/latest/faq/).\n\nLicense\n-------\n\nCARLA specific code is distributed under MIT License.\n\nCARLA specific assets are distributed under CC-BY License.\n\nNote that UE4 itself follows its own license terms.\n\n\n\n--- ./Docs/map_customization.md ---\n<h1>Map customization</h1>\n\n> _This document is a work in progress and might be incomplete._\n\nCreating a new map\n------------------\n\n!!! Bug\n    Creating a map from scratch with the Carla tools causes a crash with\n    UE4.17.2 ([Issue #99](https://github.com/carla-simulator/carla/issues/99)),\n    this guide will suggest duplicating an existing level instead of creating\n    one from scratch.\n\n<h4>Requirements</h4>\n\n - Checkout and build Carla from source on [Linux](how_to_build_on_linux.md) or [Windows](how_to_build_on_windows.md)\n\n<h4>Creating</h4>\n\n- Duplicate an existing map\n- Remove everything you don't need from the map\n    - Keep the folder \"Lighting\", \"AtmosphericFog\", \"PostProcessVol\" and \"CarlaMapGenerator\" this will keep the climate working as intended and the post process saved.\n    - It might be interesting to keep the empty level as a template and duplicate it before starting to populate it.\n- In the CarlaMapGenerator, there is a field \"seed\". You can change the map by altering that seed and clicking \"Trigger Road Map Generation\". \"Save Road Map To Disk\" should also be checked.\n- You can change the seed until you have a map you are satisfied with.\n- After that you can place new PlayerStarts at the places you want the cars to be spawned.\n- The AI already works, but the cars won't act randomly. Vehicles will follow the instructions given by the RoadMapGenerator. They will follow the road easily while in straight roads but wont so much when entering Intersections:\n![road_instructions_example.png](img/road_instructions_example.png)\n  > (This is a debug view of the instructions the road gives to the Vehicle. They will always follow the green arrows, the white points are shared points between one or more routes, by default they order the vehicle to continue straight; Black points are off the road, the vehicle gets no instructions and drives to the left, trying to get back to the road)\n\n- To get a random behavior, you have to place IntersectionEntrances, this will let you redefine the direction the vehicle will take overwriting the directions given by the road map (until they finish their given order).\n(See the two example towns how it exactly works).\n    - Before version 0.7.1: For every entrance you'll have to create a series of empty actors that will be the waypoints to guide the car through the intersection; Then you'll have to assign the corresponding actors to every Path\n    - After version 0.7.1: Every IntersectionEntrance has an array called routes, adding an element to this creates an editable spline in the world with the first point on the IntersectionEntrance (You might have to select another object before you can see it) This spline defines the possible routes any car will take when entering the intersection (as the Empty actors did before) you might configure this routes as you would edit any Unreal spline. Each route will create an element in the field bellow: \"Probabilities\" every number in this array defines the chances of any vehicle to take the corresponding route.\n- To change the speed of the car, use the SpeedLimiters. They are straightforward to use. (Make sure you limit the speed for the corners, otherwise the cars will try and fail to take them at full speed)\n- Traffic lights need to be scripted to avoid traffic accidents.\nEvery street at a crossing should have its own turn at green without the other streets having green.\n- Then you can populate the world with landscape and buildings.\n\nMultipleFloorBuilding\n---------------------\n\nThe purpose of this blueprint is to make repeating and varying tall buildings a\nbit easier. Provided a Base, a MiddleFloor and a roof; this blueprint repeats\nthe middle floor to the desired number of stores and tops it with the last floor\ngiven some conditions:\n\n  - All model pivots should be in the bottom center of the Specific mesh.\n  - Al models must start and end exactly where the repetition happen.\n\nThis blueprint is controlled by this 6 specific Parameters:\n\n  - GroundFloor: The mesh to be placed in the base of the building.\n  - Floor: The mesh to be repeated along the building.\n  - Roof: Final mesh to top the building.\n  - FloorNumber: Number of stores of the building.\n  - FloorHeightOffset: Adjust The placement of every floor vertically.\n  - RoofOffset: Adjust the placement of the roof vertically.\n\nAll of This parameters can be modified once this blueprint is placed in the\nworld.\n\nSplinemeshRepeater\n------------------\n\n!!! Bug\n    See [#35 SplineMeshRepeater loses its collider mesh](https://github.com/carla-simulator/carla/issues/35)\n\n<h4>Standard use:</h4>\n\nSplineMeshRepeater \"Content/Blueprints/SplineMeshRepeater\" is a tool included in\nthe Carla Project to help building urban environments; It repeats and aligns a\nspecific chosen mesh along a\n[Spline](https://docs.unrealengine.com/latest/INT/Engine/BlueprintSplines/Reference/SplineEditorTool/index.html)\n(Unreal Component). Its principal function is to build Typically tiled and\nrepetitive structures as Walls, Roads, Bridges, Fences... Once the actor is\nplaced into the world the spline can be modified so the object gets the desired\nform. Each Point Defining the spline Generates a new tile so that as more points\nthe Spline has, the more defined it will be, but also heavier on the world. This\nactor is defined by the following parameters:\n\n  - StaticMesh: The mesh to be repeated along the spline.\n  - ForWardAxis: Changes the mesh axis to be aligned with the spline.\n  - Material: Overrides the mesh' default material.\n  - Collision Enabled: Chooses the type of collision to use.\n  - Gap distance: Places a Gap between each repeated mesh, for repetitive non continuous walls: bush chains, bollards...\n\n(Last three variables are specific for some particular assets to be defined in\nthe next point) A requisite to create assets compatibles with this component is\nthat all the meshes have their pivot placed wherever the repetition starts in\nthe lower point possible with the rest of the mesh pointing positive (Preferably\nby the X axis)\n\n\n<h4>Specific Walls (Dynamic material)</h4>\n\nIn the project folder \"Content/Static/Walls\" are included some specific assets\nto be used with this SplineMeshRepeater with a series of special\ncharacteristics. The UV space of this meshes and their materials are the same\nfor all of them, making them exchangeable. each material is composed of three\ndifferent surfaces the last three parameters slightly modify the color of this\nsurfaces:\n\n  - MainMaterialColor: Change the main material of the Wall\n  - DetailsColor: Change the color of the details (if any)\n  - TopWallColor: Change the color of the wall cover (if any)\n\n   To add elements that profit from this functions exist the GardenWallMask File that defines the uv space to place the materials: (Blue space: MainMaterial; green space: Details; red space TopWall).\n\nBetween the material masters is WallMaster which is going to be the master of\nthe materials using this function. An instance of this material will be created\nand the correspondent textures will be added. This material includes the\nfollowing parameters to be modified by the material to use:\n\n  - Normal Flattener: Slightly modifies the normal map values to exaggerate it or flatten it.\n  - RoughnessCorrection: Changes the Roughness value given by the texture.\n\nThe rest of the parameters are the mask the textures and the color corrections\nthat won't be modified in this instance but in the blueprint that will be\nlaunched into the world.\n\nWeather\n-------\n\nThis is the actor in charge of modifying all the lighting, environmental actors\nan anything that affects the impression of the climate. It runs automatically\nwith the game when is not specified otherwise In the Config. Ini but has Its own\nactor to launch in editor mode to configure the climatic conditions. To fully\nwork It will need One of each of the following actors: SkySphere, Skylight,\nPostprocess Volume (Boundless) And Light Source to exist in the world.\n\n  - SunPolarAngle: polar angle of the sun, determines time of the day\n  - SunAzimuthAngle: adds to the location of the sun in the current level\n  - SunBrightness: Brightness of the rendering of the sun in the skybox\n  - SunDirectionalLightIntensity: Intensity of the sunlight\n  - SunDirectionalLightColor: Color of the sunlight\n  - SunIndirectLightIntensity: intensity of the bounces of the main light\n  - CloudOpacity: visibility of the cloud rendering on the skybox\n  - HorizontFalloff: determines the height of the gradient between the zenith and horizon color\n  - ZenithColor: Defines the color of the zenith.\n  - HorizonColor: Defines the color of the horizon.\n  - CloudColor: Defines the color of the Clouds, if any.\n  - OverallSkyColor: multiplies every colored element in the sky by a single color.\n  - SkyLightIntensity: Intensity of the light bounced from the sky.\n  - SkyLightColor: Color of the light bounced from the sky.\n  - Precipitation: Defines if any precipitation is active.\n  - PrecipitationType: the type of precipitation to active.\n  - PrecipitationAmount: the quantity of the chosen precipitation.\n  - PrecipitationAccumulation: the accumulation of the chosen precipitation.\n  - bWind: defines if there is any wind.\n  - WindIntensity: defines the wind intensity.\n  - WindAngle: defines the wind direction.\n  - bOverrideCameraPostProcessParameters: Defines if the default camera postprocess is overwritten.\n  - CameraPostProcessParameters.AutoExposureMethod: Defines the method of autoexposure.\n  - CameraPostProcessParameters.AutoExposureMinBrightness: defines the minimum brightness the autoexposure will count as right in the final image.\n  - CameraPostProcessParameters.AutoExposureMaxBrightness: defines the maximum brightness the autoexposure will count as right in the final image.\n  - CameraPostProcessParameters.AutoExposureBias: Darkens or brightens the final image towards a defined bias.\n\nYou can have as many different configurations saved in the project as you want\nand choose the configuration to apply while on the build, through the\n[settings file](carla_settings.md); or in the editor while building the level or\ntesting.\n\n\n",
    "readme_filenames": [
      "./Util/ImageConverter/README.md",
      "./README.md",
      "./Docs/map_customization.md"
    ]
  },
  "llm_calls_before_build": 0,
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM ubuntu:18.04\n\n# Install system dependencies and build tools\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n    clang \\\n    make \\\n    git \\\n    libboost-system-dev \\\n    libboost-filesystem-dev \\\n    libboost-program-options-dev \\\n    libpng-dev \\\n    libjpeg-dev \\\n    libtiff-dev \\\n    libomp-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Clone CARLA repository at specific commit\nRUN git clone https://github.com/carla-simulator/carla && \\\n    cd carla && \\\n    git checkout 18f10a804d7b1bada36558dae0b83d4aae89df46\n\n# Build ImageConverter utility with OpenMP support\nWORKDIR /carla/Util/ImageConverter\nRUN make",
  "dockerfile_build_success": true,
  "successful_candidate_index": 3,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "llm_calls_total": 5
}