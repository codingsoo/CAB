{
  "number": 1524,
  "title": "php\u7684\u5185\u90e8\u5f02\u5e38,\u5728error_handle\u5904\u7406\u540e,worker\u8fdb\u7a0b\u9000\u51fa,\u4e0d\u7ba1\u662f\u534f\u7a0b\u7248\u672c\u6216\u975e\u534f\u7a0b\u7248\u672c\u90fd\u662f\u5982\u6b64",
  "created_at": "2018-03-17T02:45:00Z",
  "closed_at": "2018-03-28T10:51:28Z",
  "labels": [
    "question",
    "wontfix"
  ],
  "url": "https://github.com/swoole/swoole-src/issues/1524",
  "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What did you do? If possible, provide a recipe for reproducing the error.\r\n```php\r\n<?php\r\n\r\nset_error_handler('errorHandle');\r\n$http = new swoole_http_server(\"127.0.0.1\", 9501);\r\n\r\nfunction testWeb(\\Swoole\\Http\\Response $response)\r\n{\r\n    $response->header(\"Content-Type\", \"text/html\");\r\n    //\u5185\u90e8\u5f02\u5e38\r\n    require 'ab.php';\r\n    //\u666e\u901a\u53ef\u6355\u83b7\r\n    //$a = $b;\r\n    //throw new \\Exception('aaa');\r\n    $response->end('<html>hello</html>');\r\n}\r\n\r\n$http->on(\"request\", function (\\Swoole\\Http\\Request $request, $response) {\r\n    try{\r\n        testWeb($response);\r\n    }catch (Exception $e){\r\n        echo 'e';\r\n    }catch (Throwable $t){\r\n        echo 't';\r\n    }finally{\r\n        echo 'f';\r\n    }\r\n});\r\n\r\nfunction errorHandle($errno, $errstr, $errfile, $errline)\r\n{\r\n    if (!(error_reporting() & $errno)) {\r\n        // This error code is not included in error_reporting, so let it fall\r\n        // through to the standard PHP error handler\r\n        return false;\r\n    }\r\n    /* Don't execute PHP internal error handler */\r\n    return true;\r\n}\r\n\r\n$http->start();\r\n```\r\n\r\n2. What did you expect to see?\r\n\r\n\u8fdb\u7a0b\u4e0d\u5e94\u9000\u51fa,\u4e0d\u5e94\u8be5\u4e2d\u65ad\u4ee3\u7801\u7684\u6267\u884c,\u540e\u679c\u4e5f\u662f\u4e25\u91cd\u7684,\u6bd4\u5982\u534f\u7a0b\u5904\u7406\u4e2d\u65ad\u4e86\r\n\r\n3. What did you see instead?\r\n\r\n/usr/local/Cellar/php71/7.1.13_24/bin/php -dxdebug.remote_enable=1 -dxdebug.remote_mode=req -dxdebug.remote_port=9000 -dxdebug.remote_host=127.0.0.1 /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php\r\nPHP Fatal error:  require(): Failed opening required 'ab.php' (include_path='.:') in /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php on line 12\r\nPHP Stack trace:\r\nPHP   1. {main}() /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:0\r\nPHP   2. swoole_http_server->start() /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:40\r\nPHP   3. {closure:/Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:16-27}($request = *uninitialized*, $response = *uninitialized*) /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:40\r\nPHP   4. testWeb($response = *uninitialized*) /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:18\r\n\r\nFatal error: require(): Failed opening required 'ab.php' (include_path='.:') in /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php on line 12\r\n\r\nCall Stack:\r\n    0.0387     358592   1. {main}() /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:0\r\n    0.0463     362440   2. swoole_http_server->start() /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:40\r\n    3.5838     367992   3. {closure:/Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:16-27}(???, ???) /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:40\r\n    3.5839     367992   4. testWeb(???) /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php:18\r\n\r\n[2018-03-17 10:43:15 *2497.0]\tERROR\tzm_deactivate_swoole (ERROR 503): Fatal error: require(): Failed opening required 'ab.php' (include_path='.:') in /Users/tsingsun/workspace/ThirdTools/yii2-swoole/demo/web/swoole_ori_server.php on line 12.\r\n[2018-03-17 10:43:15 $2496.0]\tWARNING\tswManager_check_exit_status: worker#0 abnormal exit, status=255, signal=0\r\n\r\n\r\n4. What version of Swoole are you using (`php --ri swoole`)?\r\n\r\nswoole 1.10.1 2.1.1 ,2.0.12 \r\n\r\n5. What is your machine environment used (including version of kernel & php & gcc) ? \r\n\r\nmac\r\nphp 7.1.8\r\n\r\n6. If you are using ssl, what is your openssl version?\r\n\r\n\r\n\r\n\r\n",
  "comments_url": "https://api.github.com/repos/swoole/swoole-src/issues/1524/comments",
  "author": "tsingsun",
  "comments": [
    {
      "user": "twose",
      "created_at": "2018-03-24T17:07:59Z",
      "body": "\u597d\u9669, \u4f5c\u4e3aphp\u840c\u65b0, \u5dee\u70b9\u88ab\u8fd9\u4e2a\u95ee\u9898\u8ff7\u60d1\u4e86.\r\n\u8fd9\u548cswoole\u65e0\u5173, \u800c\u4e14\u987a\u5e26require\u662f\u6709IO\u64cd\u4f5c\u7684.\r\n\r\n### Fatal error\r\n\u8bf7\u628a\u4f60\u7684\u4ee3\u7801\u8d34\u5230php-cli\u4e2d\u8dd1\u4e00\u4e0b, \u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a`Fatal error`.\r\n\u7136\u540e\u8bf7\u770bPHP\u5b98\u7f51\u6587\u6863\r\n> \u4ee5\u4e0b\u7ea7\u522b\u7684\u9519\u8bef\u4e0d\u80fd\u7531\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u6765\u5904\u7406\uff1a E_ERROR\u3001 E_PARSE\u3001 E_CORE_ERROR\u3001 E_CORE_WARNING\u3001 E_COMPILE_ERROR\u3001 E_COMPILE_WARNING\uff0c\u548c\u5728 \u8c03\u7528 set_error_handler() \u51fd\u6570\u6240\u5728\u6587\u4ef6\u4e2d\u4ea7\u751f\u7684\u5927\u591a\u6570 E_STRICT\u3002\r\n\r\n----\r\n### \u5f02\u5e38\u6355\u83b7\u7684\u4f5c\u7528\r\n\r\n\u5bf9\u4e8e`\u8fdb\u7a0b\u4e0d\u5e94\u9000\u51fa,\u4e0d\u5e94\u8be5\u4e2d\u65ad\u4ee3\u7801\u7684\u6267\u884c,\u540e\u679c\u4e5f\u662f\u4e25\u91cd\u7684,\u6bd4\u5982\u534f\u7a0b\u5904\u7406\u4e2d\u65ad\u4e86`\u8fd9\u6bb5\u8bdd\u6211\u4e5f\u6709\u4e0d\u540c\u7684\u610f\u89c1, \u6211\u8ba4\u4e3a\u4e25\u91cd\u7684\u9519\u8bef\u5e94\u8be5\u5c3d\u5feb\u89e3\u51b3\u98ce\u9669\u800c\u4e0d\u662f\u6291\u5236\u5b83, \u4e25\u91cd\u7684\u9519\u8bef\u629b\u51fa\u963b\u6b62\u4ee3\u7801\u6267\u884c\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684(\u5982set_error_handler\u4f1a\u4f7f\u5f97\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c,\u8fd9\u5f88\u5371\u9669), \u771f\u6b63\u9700\u8981\u6355\u83b7\u5e76\u6291\u5236\u7684\u5e94\u8be5\u662f\u7531\u5f00\u53d1\u8005(\u5e93)\u5b9a\u4e49\u7684\u5404\u79cdexception\u6216trigger_error\u548c\u4e00\u4e9b(\u9884\u6599\u4e2d\u7684)\u53ef\u5ffd\u89c6\u9519\u8bef(\u5bf9\u540e\u7eed\u6267\u884c\u65e0\u5a01\u80c1\u7684).\r\n\r\n**\u6211\u5b81\u613f\u8ba9\u670d\u52a1\u5b95\u673a\u4e5f\u4e0d\u4f1a\u8ba9\u9519\u8bef\u4ee3\u7801\u4e00\u76f4\u8dd1\u4e0b\u53bb**\r\n\r\n\r\n\u5e76\u4e14\u5728php\u5b98\u65b9\u6587\u6863\u4e2d\u4e5f\u6709\u8be6\u7ec6\u89e3\u91ca\r\n\u9519\u8bef\u6355\u83b7\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u7528\u9014\r\n>\u672c\u51fd\u6570\u53ef\u4ee5\u7528\u4f60\u81ea\u5df1\u5b9a\u4e49\u7684\u65b9\u5f0f\u6765\u5904\u7406\u8fd0\u884c\u4e2d\u7684\u9519\u8bef\uff0c \u4f8b\u5982\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e25\u91cd\u9519\u8bef\u53d1\u751f\u65f6\uff0c\u6216\u8005\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u89e6\u53d1\u4e86\u4e00\u4e2a\u9519\u8bef(\u4f7f\u7528 trigger_error())\uff0c\u4f60\u9700\u8981\u5bf9\u6570\u636e/\u6587\u4ef6\u505a\u6e05\u7406\u56de\u6536\u3002\r\n\u5e76\u4e14\r\n>\u540c\u65f6\u6ce8\u610f\uff0c\u5728\u9700\u8981\u65f6\u4f60\u6709\u8d23\u4efb\u4f7f\u7528 die()\u3002 \u5982\u679c\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u4e86\uff0c\u811a\u672c\u5c06\u4f1a\u7ee7\u7eed\u6267\u884c\u53d1\u751f\u9519\u8bef\u7684\u540e\u4e00\u884c\u3002\r\n\r\n----\r\n### Swoole\u7684exit\r\n\u6bd4\u5982\u5728swoole,\u4e2d\u9014\u8df3\u51fa\u4e1a\u52a1\u903b\u8f91\u5c42,\u5b9e\u73b0php\u7684exit\u6548\u679c\r\n```php\r\ntry{\r\n  // \u4ee3\u7801\u53c8\u81ed\u53c8\u957f, \u4e0d\u80fd\u7528if\u5757\u6765\u5206\u5272\u5f71\u54cd\u7f8e\u89c2\r\n  if (\u547d\u4e2d\u7f13\u5b58\u63d0\u524d\u8f93\u51fa\u4e86, \u540e\u7eed\u4ee3\u7801\u4e0d\u518d\u6267\u884c){\r\n    throw new \\ExitException(); //\u6211\u8981\u9000\u51fa\u5566\r\n  }\r\n // \u6162\u67e5\u8be2\r\n // balabala\r\n} catch (\\ExitException $e){\r\n  // \u51fa\u6765\u5566\r\n} catch (\\Exception $e) {\r\n  // \u5411\u7528\u6237\u89e3\u91ca\u9519\u8bef\u539f\u56e0\u6216\u8005\u8f93\u51fa500\r\n} finally {\r\n   $response->end();\r\n}\r\n```\r\n----\r\n### \u6355\u83b7\u4e25\u91cd\u9519\u8bef\r\n\r\n\u7136\u540e, \u8fd9\u79cd\u7ea7\u522b\u7684\u9519\u8bef, \u8fdb\u7a0b\u9000\u51fa\u662f\u5408\u7406\u4e14\u4e0d\u53ef\u907f\u514d\u7684, \u5982\u679c\u4f60\u8981\u505a\u64e6\u5c41\u80a1\u5904\u7406, \u9700\u8981\u7528**register_shutdown_function()\u642d\u914derror_get_last() \u5904\u7406**, \u9001\u4e0a\u7b80\u5355\u7684\u5b9e\u73b0\u4ee3\u7801.\r\n\r\n```php\r\nfunction serializeTrace($traces):string {\r\n    $default_trace = [\r\n        'file'     => 'unknown',\r\n        'line'     => 0,\r\n        'function' => 'unknown'\r\n    ];\r\n    $r = '';\r\n    foreach ($traces as $i => $t) {\r\n        $t = $t + $default_trace;\r\n        $r .= \"#$i {$t['file']}({$t['line']}): \";\r\n        if (isset($t['object']) and is_object($t['object'])) {\r\n            $r .= get_class($t['object']).'->';\r\n        }\r\n        $r .= \"{$t['function']}()\\n\";\r\n    }\r\n    \r\n    return $r;\r\n}\r\n$shutdown_error_handle = function () {\r\n    $error = error_get_last();\r\n    if (!empty($error)) {\r\n        $log = \"Shutdown Error: [{$error['type']}] {$error['message']} \".\r\n            \"in {$error['file']}:{$error['line']}\\n\".\r\n            \"Stack trace:\";\r\n        $log .= serializeTrace(debug_backtrace());\r\n        $this->errorLog($log);\r\n    }\r\n};\r\nregister_shutdown_function($shutdown_error_handle);\r\n```"
    },
    {
      "user": "tsingsun",
      "created_at": "2018-03-26T15:08:50Z",
      "body": "\u5f88\u4e0d\u5e78, \u8fd9\u662fswoole\u7684\u7f3a\u9677,php\u672c\u6765\u6709register_exception_handle+register_error_handle\u6765\u5904\u7406\u5404\u79cd\u7c7b\u578b\u7684exception\u548cerror,\u4f46\u662fswoole\u5e76\u4e0d\u652f\u6301register_exception_handle,\u5bfc\u81f4\u5728\u5904\u7406\u73af\u8282\u4e2d\u5374\u4e86\u4e00\u73af,\u5e76\u4e14\u8fd9\u4e2aerror\u662f\u65e0\u6cd5\u88ab\u6355\u83b7,\u4e0d\u53ef\u6015\u5417?\u7531\u4e8e\u534f\u7a0b\u7684\u5b58\u5728\u8fd8\u653e\u5927\u4e86\u8be5\u95ee\u9898,\u60f3\u50cf\u4e00\u4e0b,\u5728\u4e00\u6b21\u652f\u4ed8\u8bf7\u6c42,\u7531\u4e8e\u67d0\u4e9b\u4e0d\u53ef\u6355\u83b7\u7684error,\u5bfc\u81f4\u8fdb\u7a0b\u4e2d\u7684\u8bf7\u6c42\u5168\u8d25\u4e86."
    },
    {
      "user": "twose",
      "created_at": "2018-03-26T16:52:18Z",
      "body": "@tsingsun \r\nswoole\u53ea\u662f\u4e0d\u80fd\u4f7f\u7528`set_exception_handler`, \u4f46\u4efb\u610fexception\u90fd\u53ef\u4ee5\u7528try\u6355\u83b7.\r\n\u56e0\u4e3a\u4f60\u793a\u4f8b\u4ee3\u7801\u4e2d\u8d34\u51fa\u7684`require\u9519\u8bef`\u5e76\u4e0d\u662f`exception`\u800c\u662f\u4e00\u4e2a`\u4e25\u91cderror`, \u5c31\u7b97\u4f60\u5728php-cli\u73af\u5883\u4e0b\u8fd0\u884c\u4e5f\u4f1a\u5f02\u5e38\u9000\u51fa\u800c\u4e0d\u80fd\u88ab\u6355\u83b7.\r\n\u800c\u4e14\u6211\u4e5f\u8d34\u4e86\r\n>\u4ee5\u4e0b\u7ea7\u522b\u7684\u9519\u8bef\u4e0d\u80fd\u7531\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u6765\u5904\u7406\uff1a E_ERROR\u3001 E_PARSE\u3001 E_CORE_ERROR\u3001 E_CORE_WARNING\u3001 E_COMPILE_ERROR\u3001 E_COMPILE_WARNING\uff0c\u548c\u5728 \u8c03\u7528 set_error_handler() \u51fd\u6570\u6240\u5728\u6587\u4ef6\u4e2d\u4ea7\u751f\u7684\u5927\u591a\u6570 E_STRICT\u3002\n\n---\n\n@tsingsun \u8fd9\u662f\u5728\u666e\u901a\u7684php\u73af\u5883\u4e0b\u8fd0\u884c, \u5e76\u6ca1\u6709\u4efb\u4f55\u6355\u83b7\u65b9\u6cd5\u594f\u6548, \u53ea\u6253\u5370\u51fa\u4e86error_handle, \u8fdb\u7a0b\u4ecd\u65e7\u5f02\u5e38\u9000\u51fa\u4e86\u540e\u7eed\u4ee3\u7801\u4e5f\u672a\u6267\u884c.\r\n```php\r\n<?php\r\nset_error_handler(function () {\r\n    echo 'error_handle';\r\n    \r\n    return true;\r\n});\r\n\r\nset_exception_handler(function () {\r\n    echo 'exception_handle';\r\n    \r\n    return true;\r\n});\r\n\r\ntry {\r\n    require 'ab.php';\r\n} catch (Error $e) {\r\n    echo 'catch error';\r\n} catch (Exception $e) {\r\n    echo 'catch exception';\r\n} catch (Throwable $t) {\r\n    echo 'catch throwable';\r\n} finally {\r\n    echo 'finally';\r\n}\r\n```\r\n\r\n```bash\r\nPHP Fatal error:  require(): Failed opening required 'ab.php' (include_path='.:/usr/local/Cellar/php/7.2.3_3/share/pear') in /Users/twosee/Toast/test/error.php on line 21\r\nerror_handle\r\nFatal error: require(): Failed opening required 'ab.php' (include_path='.:/usr/local/Cellar/php/7.2.3_3/share/pear') in /Users/twosee/Toast/test/error.php on line 21\r\n\r\nProcess finished with exit code 255\r\n```"
    },
    {
      "user": "tsingsun",
      "created_at": "2018-03-27T12:52:44Z",
      "body": "@twose \u4ece\u65b0\u770b\u4e86php\u6587\u6863,\u4f60\u662f\u5bf9\u7684,E_ERROR\u7b49\u5f02\u5e38\u4f1a\u5bfc\u81f4\u811a\u672c\u4e2d\u65ad,\u8fd9\u6837swoole\u80fd\u505a\u7684\u786e\u5b9e\u6709\u9650,\u4f46\u8fd8\u662f\u89c9\u5f97\u8fdb\u7a0b\u9000\u51fa\u7684\u4ee3\u4ef7\u592a\u5927."
    }
  ],
  "satisfaction_conditions": [
    "Explanation of how to prevent worker process termination on fatal PHP errors in Swoole",
    "Method to capture and handle PHP fatal errors (E_ERROR) in Swoole context",
    "Solution for maintaining request processing continuity after errors",
    "Clarification on Swoole's error handling limitations vs PHP native behavior",
    "Graceful error recovery pattern for production environments"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-04-05 00:18:53"
  },
  "git_commit_info": {
    "sha": "7c8747fd202d81286171973fdde8c70e19711173",
    "date": "2015-12-31T08:35:09Z",
    "message": "fix core dump.",
    "author": "matyhtf"
  },
  "repository_info": {
    "structure_summary": ".\n./.git\n./.git/branches\n./.git/description\n./.git/hooks\n./.git/hooks/applypatch-msg.sample\n./.git/hooks/commit-msg.sample\n./.git/hooks/post-update.sample\n./.git/hooks/pre-applypatch.sample\n./.git/hooks/pre-commit.sample\n./.git/hooks/pre-merge-commit.sample\n./.git/hooks/pre-push.sample\n./.git/hooks/pre-receive.sample\n./.git/hooks/push-to-checkout.sample\n./.git/hooks/update.sample\n./.git/hooks/fsmonitor-watchman.sample\n./.git/hooks/pre-rebase.sample\n./.git/hooks/prepare-commit-msg.sample\n./.git/hooks/sendemail-validate.sample\n./.git/info\n./.git/info/exclude\n./.git/config\n./.git/objects\n./.git/objects/pack\n./.git/objects/pack/pack-56e760a8cc7f27e604e6484ec2a331281c66e381.pack\n./.git/objects/pack/pack-56e760a8cc7f27e604e6484ec2a331281c66e381.rev\n./.git/objects/pack/pack-56e760a8cc7f27e604e6484ec2a331281c66e381.idx\n./.git/objects/info\n./.git/HEAD\n./.git/refs\n./.git/refs/heads\n./.git/refs/heads/master\n./.git/refs/tags\n./.git/refs/remotes\n./.git/refs/remotes/origin\n./.git/refs/remotes/origin/HEAD\n./.git/packed-refs\n./.git/logs\n./.git/logs/refs\n./.git/logs/refs/remotes\n./.git/logs/refs/remotes/origin\n./.git/logs/refs/remotes/origin/HEAD\n./.git/logs/refs/heads\n./.git/logs/refs/heads/master\n./.git/logs/HEAD\n./.git/index\n./examples\n./examples/atomic\n./examples/atomic/test.php\n./examples/client\n./examples/client/async.php\n./examples/client/long_tcp.php\n./examples/client/select.php\n./examples/client/sync.php\n./examples/client/test.txt\n./examples/client/udp_async.php\n./examples/client/udp_sync.php\n./examples/eof\n./examples/eof/async_client.php\n./examples/eof/client.php\n./examples/eof/server.php\n./examples/event\n./examples/event/inotify.php\n./examples/event/sockets.php\n./examples/event/stdin.php\n./examples/event/stream.php\n./examples/event/test.php\n./examples/http\n./examples/http/curl.php\n./examples/http/post.data\n./examples/http/client.php\n./examples/http/server.php\n./examples/ipv6\n./examples/ipv6/tcp_client.php\n./examples/ipv6/tcp_server.php\n./examples/ipv6/udp_client.php\n./examples/ipv6/udp_server.php\n./examples/length\n./examples/length/config.php\n./examples/length/async_client.php\n./examples/length/client.php\n./examples/length/server.php\n./examples/lock\n./examples/lock/lock.php\n./examples/multicast\n./examples/multicast/client.php\n./examples/multicast/server.php\n./examples/php\n./examples/php/socket_server.php\n./examples/php/stream_client.php\n./examples/php/debug_server.php\n./examples/php/inotify.php\n./examples/php/mysql.php\n./examples/php/stream_server.php\n./examples/process\n./examples/process/echo.py\n./examples/process/async_master.php\n./examples/process/exec.php\n./examples/process/msgqueue.php\n./examples/process/python.php\n./examples/process/test.php\n./examples/process/worker.php\n./examples/server\n./examples/server/echo.php\n./examples/server/exist.php\n./examples/server/fixed_header_client.php\n./examples/server/fixed_header_server.php\n./examples/server/fixed_header_server1.7.3.php\n./examples/server/frame_client.php\n./examples/server/ip_dispatch.php\n./examples/server/local_listener.php\n./examples/server/msgqueue.php\n./examples/server/pipe_message.php\n./examples/server/single.php\n./examples/server/uid_dispatch.php\n./examples/server/unix_stream.php\n./examples/server/zmq.php\n./examples/ssl\n./examples/ssl/async_client.php\n./examples/ssl/client\n./examples/ssl/client.c\n./examples/ssl/client.php\n./examples/ssl/server.php\n./examples/ssl/stream_client.php\n./examples/ssl/webserver.php\n./examples/table\n./examples/table/iterator.php\n./examples/table/server.php\n./examples/table/set.php\n./examples/table/simulation.php\n./examples/task\n./examples/task/shared_client.php\n./examples/task/shared_server.php\n./examples/task/task.php\n./examples/task/task_num.php\n./examples/test.jpg\n./examples/timer\n./examples/timer/after.php\n./examples/timer/interval.php\n./examples/timer/tick.php\n./examples/udp\n./examples/udp/client.php\n./examples/udp/server.php\n./examples/websocket\n./examples/websocket/WebSocketClient.php\n./examples/websocket/client.html\n./examples/websocket/client.php\n./examples/websocket/server.php\n./examples/async\n./examples/async/dns_lookup.php\n./examples/async/read.php\n./examples/async/readfile.php\n./examples/async/write.php\n./examples/bench\n./examples/bench/ab.sh\n./examples/bench/http.go\n./examples/bench/http.js\n./examples/bench/http.php\n./examples/bench/http2.go\n./examples/bench/post.big.data\n./examples/bench/post.data\n./examples/bench/redis.go\n./examples/bench/run.php\n./examples/bench/tcp.go\n./examples/bench/tcp.js\n./examples/bench/tcp.php\n./examples/bench/udp.php\n./examples/bench/websocket.php\n./examples/buffer.php\n./examples/c10k.php\n./examples/client2.php\n./examples/cpp_module\n./examples/cpp_module/Makefile\n./examples/cpp_module/test.cpp\n./examples/db_pool.php\n./examples/future\n./examples/future/buffer.php\n./examples/future/coroutine.php\n./examples/future/mysql.php\n./examples/future/node_message.php\n./examples/future/table.php\n./examples/get_local_ip.php\n./examples/hot_update_class.php\n./examples/ide_helper\n./examples/ide_helper/README.md\n./examples/multi_port_server.php\n./examples/mysql\n./examples/mysql/async_mysql2.php\n./examples/mysql/concurrent.php\n./examples/mysql/real_async.php\n./examples/mysql_proxy_server.php\n./examples/packet\n./examples/packet/async.php\n./examples/packet/client_pack.php\n./examples/packet/ser.php\n./examples/packet/sync.php\n./examples/proxy.php\n./examples/proxy_sync.php\n./examples/recv_1m_client.php\n./examples/recv_file.php\n./examples/redis_pool.php\n./examples/reflection_test.php\n./examples/send_1m_svr.php\n./examples/sendfile_server.php\n./examples/server.c\n./examples/server.php\n./examples/server_hot_update_opcache.php\n./examples/set_cpu_affinity.php\n./examples/swoole_http_client.php\n./examples/test_buffer.php\n./examples/test_server.c\n./examples/timer.php\n./examples/unittest.php\n./examples/unix\n./examples/unix/dgram_client.php\n./examples/unix/dgram_server.php\n./examples/unix/stream_client.php\n./examples/version.php\n./include\n./include/helper\n./include/helper/kqueue.h\n./include/Client.h\n./include/Connection.h\n./include/Http.h\n./include/ReadMe\n./include/RingQueue.h\n./include/Server.h\n./include/array.h\n./include/async.h\n./include/atomic.h\n./include/base64.h\n./include/buffer.h\n./include/error.h\n./include/hash.h\n./include/hashmap.h\n./include/heap.h\n./include/list.h\n./include/mqtt.h\n./include/rbtree.h\n./include/sha1.h\n./include/swoole.h\n./include/table.h\n./include/tests.h\n./include/uthash.h\n./include/websocket.h\n./thirdparty\n./thirdparty/multipart_parser.c\n./thirdparty/multipart_parser.h\n./thirdparty/php_http_parser.c\n./thirdparty/php_http_parser.h\n./.gitignore\n./.travis.yml\n./CMakeLists.txt\n./CREDITS\n./LICENSE\n./README.md\n./config.m4\n./package.xml\n./php7_wrapper.h\n./php_swoole.h\n./src\n./src/core\n./src/core/Channel.c\n./src/core/RingQueue.c\n./src/core/UnitTest.c\n./src/core/array.c\n./src/core/base.c\n./src/core/hashmap.c\n./src/core/heap.c\n./src/core/list.c\n./src/core/log.c\n./src/core/rbtree.c\n./src/core/socket.c\n./src/core/string.c\n./src/factory\n./src/factory/Factory.c\n./src/factory/FactoryProcess.c\n./src/factory/FactoryThread.c\n./src/lock\n./src/lock/AtomicLock.c\n./src/lock/Cond.c\n./src/lock/FileLock.c\n./src/lock/Mutex.c\n./src/lock/RWLock.c\n./src/lock/Semaphore.c\n./src/lock/SpinLock.c\n./src/memory\n./src/memory/Buffer.c\n./src/memory/FixedPool.c\n./src/memory/Malloc.c\n./src/memory/MemoryGlobal.c\n./src/memory/RingBuffer.c\n./src/memory/ShareMemory.c\n./src/memory/Table.c\n./src/network\n./src/network/Client.c\n./src/network/Connection.c\n./src/network/DNS.c\n./src/network/EventTimer.c\n./src/network/Manager.c\n./src/network/ProcessPool.c\n./src/network/ReactorProcess.c\n./src/network/ReactorThread.c\n./src/network/Server.c\n./src/network/TaskWorker.c\n./src/network/ThreadPool.c\n./src/network/Worker.c\n./src/os\n./src/os/base.c\n./src/os/dl.c\n./src/os/gcc_aio.c\n./src/os/linux_aio.c\n./src/os/msg_queue.c\n./src/os/sendfile.c\n./src/os/signal.c\n./src/os/timer.c\n./src/pipe\n./src/pipe/PipeBase.c\n./src/pipe/PipeEventfd.c\n./src/pipe/PipeUnsock.c\n./src/protocol\n./src/protocol/Base.c\n./src/protocol/Base64.c\n./src/protocol/Http.c\n./src/protocol/Mqtt.c\n./src/protocol/SSL.c\n./src/protocol/Sha1.c\n./src/protocol/WebSocket.c\n./src/reactor\n./src/reactor/ReactorBase.c\n./src/reactor/ReactorEpoll.c\n./src/reactor/ReactorKqueue.c\n./src/reactor/ReactorPoll.c\n./src/reactor/ReactorSelect.c\n./swoole.c\n./swoole_async.c\n./swoole_atomic.c\n./swoole_buffer.c\n./swoole_client.c\n./swoole_config.h\n./swoole_event.c\n./swoole_http.c\n./swoole_http.h\n./swoole_http_client.c\n./swoole_lock.c\n./swoole_mysql.c\n./swoole_process.c\n./swoole_server.c\n./swoole_table.c\n./swoole_timer.c\n./swoole_websocket.c\n./tests\n./tests/Makefile\n./tests/aio.c\n./tests/client.c\n./tests/ds.c\n./tests/heap_test.c\n./tests/http.c\n./tests/http\n./tests/http/get.txt\n./tests/http/post.txt\n./tests/main.c\n./tests/mem.c\n./tests/pool.c\n./tests/ringbuffer.c\n./tests/server.c\n./tests/ssl\n./tests/ssl/ssl.crt\n./tests/ssl/ssl.csr\n./tests/ssl/ssl.key\n./tests/u1.c\n./tests/u2.c\n./tests/websocket.c\n./travis\n./travis/compile.sh\n",
    "readme": "\n--- ./examples/ide_helper/README.md ---\nSwoole IDE helper\n===\n```\ngit clone https://github.com/EagleWu/swoole-auto-complete\n```\n\n\n\n--- ./include/ReadMe ---\nSwoole used Troy D. Hanson's Uhash and Ulist.\n\n\n\n--- ./README.md ---\nSwoole\n======\n[![Build Status](https://api.travis-ci.org/swoole/swoole-src.svg)](https://travis-ci.org/swoole/swoole-src)\n\nSwoole is an event-based & concurrent framework for internet applications, written in C, for PHP.\n\n__Document__: <https://rawgit.com/tchiotludo/swoole-ide-helper/english/docs/index.html>\n\n__IDE Helper__: <https://github.com/tchiotludo/swoole-ide-helper>\n\n__\u4e2d\u6587\u6587\u6863__: <http://wiki.swoole.com/>\n\n__IRC__:  <http://webchat.freenode.net/?channels=swoole&uio=d4>\n\n\nevent-based\n------\n\nThe network layer in Swoole is event-based and takes full advantage of the underlaying epoll/kqueue implementation, making it really easy to serve thousands of connections.\n\nconcurrent\n------\n\nOn the request processing part, Swoole uses a multi-process model. Every process works as a worker. All business logic is executed in workers, synchronously.\n\nWith the synchronous logic execution, you can easily write large and robust applications and take advantage of almost all libraries available to the PHP community.\n\nin-memory\n------\n\nUnlike traditional apache/php-fpm stuff, the memory allocated in Swoole will not be free'd after a request, which can improve preformance a lot.\n\n\n## Why Swoole?\n\nTraditional PHP applications almost always run behind Apache/Nginx, without much control of the request. This brings several limitations:\n\n1. All memory will be freed after request. All PHP code needs be re-compiled on every request. Even with opcache enabled, all opcode still needs to be re-executed.\n2. It is almost impossible to implement long connections and connections pooling techniques.\n3. Implementing asynchronous tasks requires 3rd party queue servers, such as rabbitmq and beanstalkd.\n4. Implementing realtime applications such as chatting server requires 3rd party languages, nodejs for example.\n\nThis why Swoole appeared. Swoole extends the use cases of PHP, and brings all these possibilities to the PHP world. \nBy using Swoole, you can build enhanced web applications with more control, real-time chatting servers, etc more easily.\n\n## Requirements\n\n* PHP 5.3.10 or later\n* Linux, OS X and basic Windows support (Thanks to cygwin)\n* GCC 4.4 or later\n\n## Installation\n\n1. Install via pecl\n    \n    ```\n    pecl install swoole\n    ```\n\n2. Install from source\n\n    ```\n    sudo apt-get install php5-dev\n    git clone https://github.com/swoole/swoole-src.git\n    cd swoole-src\n    phpize\n    ./configure\n    make && make install\n    ```\n\n## Introduction\n\nSwoole includes components for different purposes: Server, Task Worker, Timer, Event and Async IO. With these components,\nSwoole allows you to build many features.\n\n\n### Server\n\nThis is the most important part in Swoole. It provides necessary infrastructure to build server applications. \nWith Swoole server, you can build web servers, chat messaging servers, game servers and almost anything you want.\n\nThe following example shows a simple echo server.\n\n~~~php\n// create a server instance\n$serv = new swoole_server(\"127.0.0.1\", 9501); \n\n// attach handler for connect event, once client connected to server the registered handler will be executed\n$serv->on('connect', function ($serv, $fd){  \n    echo \"Client:Connect.\\n\";\n});\n\n// attach handler for receive event, every piece of data received by server, the registered handler will be\n// executed. And all custom protocol implementation should be located there.\n$serv->on('receive', function ($serv, $fd, $from_id, $data) {\n    $serv->send($fd, $data);\n});\n\n$serv->on('close', function ($serv, $fd) {\n    echo \"Client: Close.\\n\";\n});\n\n// start our server, listen on port and ready to accept connections\n$serv->start();\n~~~\n\nTry to extend your server and implement what you want!\n\n### Http Server\n\n```php\n$http = new swoole_http_server(\"0.0.0.0\", 9501);\n\n$http->on('request', function ($request, $response) {\n    $response->header(\"Content-Type\", \"text/html; charset=utf-8\");\n    $response->end(\"<h1>Hello Swoole. #\".rand(1000, 9999).\"</h1>\");\n});\n\n$http->start();\n```\n\n### WebSocket Server\n\n```php\n$ws = new swoole_websocket_server(\"0.0.0.0\", 9502);\n\n$ws->on('open', function ($ws, $request) {\n    var_dump($request->fd, $request->get, $request->server);\n    $ws->push($request->fd, \"hello, welcome\\n\");\n});\n\n$ws->on('message', function ($ws, $frame) {\n    echo \"Message: {$frame->data}\\n\";\n    $ws->push($frame->fd, \"server: {$frame->data}\");\n});\n\n$ws->on('close', function ($ws, $fd) {\n    echo \"client-{$fd} is closed\\n\";\n});\n\n$ws->start();\n```\n\n### Task Worker\n\nSwoole brings you two types of workers: server workers and task workers. Server workers are for request\nhandling, as demonstrated above. Task workers are for task execution. With task workers, we can make our \ntask executed asynchronously without blocking the server workers.\n\nTask workers are mainly used for time-consuming tasks, such as sending password recovery emails. And ensure\nthe main request returns as soon as possible.\n\nThe following example shows a simple server with task support.\n\n```php\n$serv = new swoole_server(\"127.0.0.1\", 9502);\n\n// sets server configuration, we set task_worker_num config greater than 0 to enable task workers support\n$serv->set(array('task_worker_num' => 4));\n\n// attach handler for receive event, which have explained above.\n$serv->on('receive', function($serv, $fd, $from_id, $data) {\n    // we dispath a task to task workers by invoke the task() method of $serv\n    // this method returns a task id as the identity of ths task\n    $task_id = $serv->task($data);\n    echo \"Dispath AsyncTask: id=$task_id\\n\";\n});\n\n// attach handler for task event, the handler will be executed in task workers.\n$serv->on('task', function ($serv, $task_id, $from_id, $data) {\n    // handle the task, do what you want with $data\n    echo \"New AsyncTask[id=$task_id]\".PHP_EOL;\n\n    // after the task task is handled, we return the results to caller worker.\n    $serv->finish(\"$data -> OK\");\n});\n\n// attach handler for finish event, the handler will be executed in server workers, the same worker dispatched this task before.\n$serv->on('finish', function ($serv, $task_id, $data) {\n    echo \"AsyncTask[$task_id] Finish: $data\".PHP_EOL;\n});\n\n$serv->start();\n```\n\nSwoole also supports synchronous tasks. To use synchronous tasks, just simply replace \n`$serv->task($data)` with `$serv->taskwait($data)`. Unlike `task()`, `taskwait()` will wait for a task to\ncomplete before it returns its response.\n\n### Timer\n\nSwoole has built in millisecond timer support. By using the timer, it is easy to get a block of code\nexecuted periodically (really useful for managing interval tasks).\n\nTo demonstrate how the timer works, here is a small example:\n\n```php\n//interval 2000ms\n$serv->tick(2000, function ($timer_id) {\n    echo \"tick-2000ms\\n\";\n});\n\n//after 3000ms\n$serv->after(3000, function () {\n    echo \"after 3000ms.\\n\"\n});\n```\n\nIn the example above, we first set the `timer` event handler to `swoole_server` to enable timer support.\nThen, we add two timers by calling `bool swoole_server::addtimer($interval)` once the server started. \nTo handle multiple timers, we switch the `$interval` in registered handler and do what we want to do.\n\n### Event\n\nSwoole's I/O layer is event-based, which is very convenient to add your own file descriptor to Swoole's main eventloop.\nWith event support, you can also build fully asynchronous applications with Swoole.\n\nTo use events in Swoole, we can use `swoole_event_set()` to register event handler to sepecified file descriptor, \nonce registered descriptors become readable or writeable, our registered handler will be invoked. Also, we can \nusing `bool swoole_event_del(int $fd);` to remove registered file descriptor from eventloop.\n\nThe following are prototypes for the related functions:\n\n```php\nbool swoole_event_add($fd, mixed $read_callback, mixed $write_callback, int $flag);\nbool swoole_event_set($fd, mixed $read_callback, mixed $write_callback, int $flag);\nbool swoole_event_del($fd);\n```\n\nThe `$fid` parameter can be one of the following types:\n\n* unix file descriptor\n* stream resource created by `stream_socket_client()/fsockopen()`\n* sockets resources created by `socket_create()` in sockets extension (require compile swoole with --enable-sockets support)\n\nThe `$read_callback` and `$write_callback` are callbacks for corresponding read/write event.\n\nThe `$flag` is a mask to indicate what type of events we should get notified, can be `SWOOLE_EVENT_READ`,\n`SWOOLE_EVENT_WRITE` or `SWOOLE_EVENT_READ | SWOOLE_EVENT_WRITE`\n\n### Async IO\n\nSwoole's Async IO provides the ability to read/write files and lookup dns records asynchronously. The following\nare signatures for these functions:\n\n\n```php\nbool swoole_async_readfile(string $filename, mixed $callback);\nbool swoole_async_writefile('test.log', $file_content, mixed $callback);\nbool swoole_async_read(string $filename, mixed $callback, int $trunk_size = 8192);\nbool swoole_async_write(string $filename, string $content, int $offset = -1, mixed $callback = NULL);\nvoid swoole_async_dns_lookup(string $domain, function($host, $ip){});\nbool swoole_timer_after($after_n_ms, mixed $callback);\nbool swoole_timer_tick($n_ms, mixed $callback);\nbool swoole_timer_clear($n_ms, mixed $callback);\n``` \n\nRefer [API Reference](http://wiki.swoole.com/wiki/page/183.html) for more detail information of these functions.\n\n\n### Client\n\nSwoole also provides a Client component to build tcp/udp clients in both asynchronous and synchronous ways.\nSwoole uses the `swoole_client` class to expose all its functionalities.\n\nsynchronous blocking:\n```php\n$client = new swoole_client(SWOOLE_SOCK_TCP);\nif (!$client->connect('127.0.0.1', 9501, 0.5))\n{\n    die(\"connect failed.\");\n}\n\nif (!$client->send(\"hello world\"))\n{\n    die(\"send failed.\");\n}\n\n$data = $client->recv();\nif (!$data)\n{\n    die(\"recv failed.\");\n}\n\n$client->close();\n\n```\n\nasynchronous nonblocking:\n\n```php\n$client = new swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC);\n\n$client->on(\"connect\", function($cli) {\n    $cli->send(\"hello world\\n\");\n});\n$client->on(\"receive\", function($cli, $data){\n    echo \"Received: \".$data.\"\\n\";\n});\n$client->on(\"error\", function($cli){\n    echo \"Connect failed\\n\";\n});\n$client->on(\"close\", function($cli){\n    echo \"Connection close\\n\";\n});\n\n$client->connect('127.0.0.1', 9501, 0.5);\n```\n\nThe following methods are available in swoole_client:\n\n```php\nswoole_client::__construct(int $sock_type, int $is_sync = SWOOLE_SOCK_SYNC, string $key);\nint swoole_client::on(string $event, mixed $callback);\nbool swoole_client::connect(string $host, int $port, float $timeout = 0.1, int $flag = 0)\nbool swoole_client::isConnected();\nint swoole_client::send(string $data);\nbool swoole_client::sendfile(string $filename)\nstring swoole_client::recv(int $size = 65535, bool $waitall = 0);\nbool swoole_client::close();\n```\n\nRefer [API Reference](http://wiki.swoole.com/wiki/page/3.html) for more detail information of these functions.\n\n\n## API Reference\n\n* [\u4e2d\u6587](http://wiki.swoole.com/) \n* [English](https://cdn.rawgit.com/tchiotludo/swoole-ide-helper/dd73ce0dd949870daebbf3e8fee64361858422a1/docs/index.html)\n\n## Related Projects\n\n* [SwooleFramework](https://github.com/swoole/framework) Web framework powered by Swoole\n\n## Contribution\n\nYour contribution to Swoole development is very welcome!\n\nYou may contribute in the following ways:\n\n* [Repost issues and feedback](https://github.com/swoole/swoole-src/issues)\n* Submit fixes, features via Pull Request\n* Write/polish documentation\n\n## License\n\nApache License Version 2.0 see http://www.apache.org/licenses/LICENSE-2.0.html\n\n\n",
    "readme_filenames": [
      "./examples/ide_helper/README.md",
      "./include/ReadMe",
      "./README.md"
    ]
  },
  "llm_calls_before_build": 111,
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM php:7.1-cli\n\n# Install system dependencies required for building Swoole\nRUN apt-get update && apt-get install -y \\\n    git \\\n    build-essential \\\n    autoconf \\\n    automake \\\n    libtool \\\n    libpcre3-dev \\\n    libssl-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Clone swoole-src repository and checkout the specific commit with the fix\nRUN git clone https://github.com/swoole/swoole-src.git /usr/src/swoole-src \\\n    && cd /usr/src/swoole-src \\\n    && git checkout 7c8747fd202d81286171973fdde8c70e19711173\n\n# Build and install Swoole extension with default configuration\nRUN cd /usr/src/swoole-src \\\n    && phpize \\\n    && ./configure \\\n    && make -j$(nproc) \\\n    && make install \\\n    && docker-php-ext-enable swoole",
  "dockerfile_build_success": true,
  "successful_candidate_index": 1,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "llm_calls_total": 116
}