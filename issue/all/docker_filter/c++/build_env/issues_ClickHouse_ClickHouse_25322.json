{
  "number": 25322,
  "title": "Kafka _timestamp / _timestamp_ms not working?",
  "created_at": "2021-06-16T10:57:19Z",
  "closed_at": "2021-06-16T11:21:17Z",
  "labels": [
    "question",
    "question-answered"
  ],
  "url": "https://github.com/ClickHouse/ClickHouse/issues/25322",
  "body": "**Describe the bug**\r\n\r\nAppears that _timestamp and _timestamp_ms virtual columns are returning 0 for kafka. Perhaps it is somehow due to JSONEachRow format?\r\n\r\nIssue is in docker 21.6.4.26 and 21.2.2.8 at least.\r\n\r\nI'm using amazon MSK 2.6.1\r\n\r\n**How to reproduce**\r\n\r\n```\r\ncreate table kafka ( name String ) ENGINE=Kafka() SETTINGS kafka_broker_list = '...', kafka_topic_list = 'test-events', kafka_group_name='test', kafka_format='JSONEachRow';\r\ncreate table t (time DateTime64(3), name String) ENGINE=MergeTree() ORDER BY tuple();\r\ncreate materialized view kafka_mv to t AS select _timestamp_ms, name FROM kafka;\r\n```\r\n\r\n```\r\necho '{\"name\":\"test\"}' | bin/kafka-console-producer.sh ...\r\n```\r\n\r\nClickhouse table just looks like:\r\n\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500time\u2500\u252c\u2500name\u2500\u2510\r\n\u2502 1970-01-01 00:00:00.000 \u2502 test \u2502\r\n...\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nIf checking with kafka consumer:\r\n\r\n```\r\nbin/kafka-console-consumer.sh ... --from-beginning --property print.timestamp=true\r\nCreateTime:1623839664050        {\"name\":\"test\"}\r\nCreateTime:1623839989619        {\"name\":\"test\"}\r\nCreateTime:1623840562909        {\"name\":\"test\"}\r\nCreateTime:1623840285113        {\"name\":\"test\"}\r\n```\r\n\r\nI see the same with _timestamp col",
  "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/25322/comments",
  "author": "mzealey",
  "comments": [
    {
      "user": "filimonov",
      "created_at": "2021-06-16T11:18:18Z",
      "body": "Mapping of columns in mv happens by names, not by positions.\r\n\r\nSo that should help:\r\n```\r\ncreate materialized view kafka_mv to t AS select _timestamp_ms as time, name FROM kafka;\r\n```"
    }
  ],
  "git_commit_info": {
    "sha": "045fd6f55db37059c97c0c276e8914b096e1f6bb",
    "date": "2017-02-07T22:40:08Z",
    "message": "fix build without readline",
    "author": "proller"
  },
  "repository_info": {},
  "llm_calls_before_build": 0,
  "dockerfile_attempt_1": 1,
  "dockerfile_attempt_1_failed": true,
  "dockerfile_build_success": true,
  "llm_calls_total": 11,
  "dockerfile": "FROM ubuntu:20.04\n\n# Avoid interactive prompts during package installation\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies for ClickHouse and Kafka\nRUN apt-get update && apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    dirmngr \\\n    gnupg \\\n    wget \\\n    sudo \\\n    git \\\n    cmake \\\n    build-essential \\\n    gcc-9 \\\n    g++-9 \\\n    libicu-dev \\\n    libreadline-dev \\\n    libmysqlclient-dev \\\n    unixodbc-dev \\\n    libltdl-dev \\\n    libssl-dev \\\n    libgoogle-perftools-dev \\\n    libbz2-dev \\\n    libzstd-dev \\\n    libboost-dev \\\n    libboost-system-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libboost-program-options-dev \\\n    zlib1g-dev \\\n    liblz4-dev \\\n    libdouble-conversion-dev \\\n    libzookeeper-mt-dev \\\n    libsparsehash-dev \\\n    librdkafka-dev \\\n    libcapnp-dev \\\n    libpoco-dev \\\n    libunwind-dev \\\n    libxml2-dev \\\n    libpcre3-dev \\\n    ninja-build \\\n    curl \\\n    python3 \\\n    python3-pip \\\n    kafkacat \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set gcc-9 as default compiler\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 \\\n    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90 \\\n    && update-alternatives --set gcc /usr/bin/gcc-9 \\\n    && update-alternatives --set g++ /usr/bin/g++-9\n\n# Create build directory\nWORKDIR /build\n\n# Clone ClickHouse repository and checkout specific commit\nRUN git clone https://github.com/ClickHouse/ClickHouse.git \\\n    && cd ClickHouse \\\n    && git checkout 045fd6f55db37059c97c0c276e8914b096e1f6bb\n\n# Create build directory\nWORKDIR /build/ClickHouse/build\n\n# Configure cmake with necessary options for the build\nRUN cmake .. \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DENABLE_TESTS=OFF \\\n    -DENABLE_EXAMPLES=OFF \\\n    -DENABLE_EMBEDDED_COMPILER=OFF \\\n    -DUSE_INTERNAL_POCO_LIBRARY=ON \\\n    -DUSE_INTERNAL_BOOST_LIBRARY=ON \\\n    -DUSE_INTERNAL_ZLIB_LIBRARY=ON \\\n    -DUSE_INTERNAL_SSL_LIBRARY=ON \\\n    -DUSE_INTERNAL_CAPNP_LIBRARY=ON \\\n    -DENABLE_JEMALLOC=0 \\\n    -DENABLE_RDKAFKA=ON \\\n    -DENABLE_ICU=0 \\\n    -DENABLE_MYSQL=0 \\\n    -DENABLE_POCO_MONGODB=0 \\\n    -DENABLE_POCO_NETSSL=0 \\\n    -DENABLE_POCO_ODBC=0 \\\n    -DENABLE_ODBC=0 \\\n    -DENABLE_CLICKHOUSE_ODBC_BRIDGE=0 \\\n    -DENABLE_HDFS=0 \\\n    -DUSE_INTERNAL_CITYHASH_LIBRARY=ON \\\n    -DCMAKE_CXX_FLAGS=\"-Wno-error\" \\\n    -DCMAKE_C_FLAGS=\"-Wno-error\"\n\n# Set higher memory limit for the build and disable ASAN leak detection\nENV ASAN_OPTIONS=detect_leaks=0:allocator_may_return_null=1\n\n# Build ClickHouse with retry mechanism to handle potential build failures\nRUN for i in 1 2 3; do \\\n        cmake --build . --config Release -- -j$(nproc) && break || \\\n        echo \"Build attempt $i failed, retrying with less parallelism...\" && \\\n        cmake --build . --config Release -- -j2 && break || \\\n        echo \"Build attempt $i failed, retrying with single thread...\" && \\\n        cmake --build . --config Release -- -j1 && break || \\\n        echo \"Build attempt $i failed, will retry...\" && \\\n        sleep 5; \\\n    done\n\n# Add the build directory to PATH\nENV PATH=\"/build/ClickHouse/build/programs:${PATH}\"\n\n# Create directories for ClickHouse data and configuration\nRUN mkdir -p /etc/clickhouse-server/config.d \\\n    && mkdir -p /etc/clickhouse-server/users.d \\\n    && mkdir -p /var/lib/clickhouse\n\n# Create a basic configuration file for ClickHouse server\nRUN echo '<yandex>\\n\\\n    <logger>\\n\\\n        <level>trace</level>\\n\\\n        <console>true</console>\\n\\\n    </logger>\\n\\\n    <listen_host>0.0.0.0</listen_host>\\n\\\n    <path>/var/lib/clickhouse/</path>\\n\\\n    <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>\\n\\\n</yandex>' > /etc/clickhouse-server/config.xml\n\n# Create a README file with instructions\nRUN echo \"# ClickHouse Issue #25322: Kafka _timestamp / _timestamp_ms not working?\\n\\n\\\nThis Docker image is built to validate issue #25322 where Kafka _timestamp and _timestamp_ms virtual columns are returning 0.\\n\\n\\\n## Issue Description\\n\\\nWhen using Kafka engine with JSONEachRow format, the _timestamp and _timestamp_ms virtual columns are returning 0 instead of the actual Kafka message timestamp.\\n\\n\\\n## To test the issue manually\\n\\\n1. Start the ClickHouse server:\\n\\\n   \\`clickhouse-server --config-file=/etc/clickhouse-server/config.xml\\`\\n\\n\\\n2. In another terminal, create the tables and materialized view:\\n\\\n   \\`\\`\\`sql\\n\\\n   clickhouse-client -q \\\"CREATE TABLE kafka (name String) ENGINE=Kafka() SETTINGS kafka_broker_list = 'your_kafka_broker', kafka_topic_list = 'test-events', kafka_group_name='test', kafka_format='JSONEachRow';\\\"\\n\\\n   clickhouse-client -q \\\"CREATE TABLE t (time DateTime64(3), name String) ENGINE=MergeTree() ORDER BY tuple();\\\"\\n\\\n   clickhouse-client -q \\\"CREATE MATERIALIZED VIEW kafka_mv TO t AS SELECT _timestamp_ms, name FROM kafka;\\\"\\n\\\n   \\`\\`\\`\\n\\n\\\n3. Produce messages to Kafka:\\n\\\n   \\`echo '{\\\"name\\\":\\\"test\\\"}' | kafkacat -P -b your_kafka_broker -t test-events\\`\\n\\n\\\n4. Check the contents of the table:\\n\\\n   \\`clickhouse-client -q \\\"SELECT * FROM t;\\\"\\`\\n\\n\\\nExpected: Table should contain proper timestamps rather than 1970-01-01 (0 timestamp).\\n\" > /README.md\n\n# Default command to show README\nCMD [\"cat\", \"/README.md\"]",
  "successful_candidate_index": 4,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "satisfaction_conditions": [
    "Column mapping between source and target must be explicitly defined"
  ]
}