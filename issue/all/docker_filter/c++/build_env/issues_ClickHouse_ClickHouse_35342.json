{
  "number": 35342,
  "title": "AggregateFunction is not backward compatible",
  "created_at": "2022-03-16T18:32:44Z",
  "closed_at": "2022-03-16T20:46:45Z",
  "labels": [
    "question",
    "backward compatibility",
    "question-answered"
  ],
  "url": "https://github.com/ClickHouse/ClickHouse/issues/35342",
  "body": "**Describe the issue**\r\nWe were upgrading our Clickhouse cluster from **21.8.3.44** to **22.1.3.7** and found a lot of our queries are failing due to an error explained below \r\n\r\n**How to reproduce**\r\nCreate table 1\r\n```\r\nCREATE TABLE test.table_1 on cluster '{cluster}'\r\n(\r\n  `date` Date,\r\n  `uniques` AggregateFunction(uniqCombined64(17), Nullable(String))\r\n)\r\nENGINE = MergeTree()\r\nORDER BY date\r\n```\r\n\r\nCreate table 2\r\n```\r\nCREATE TABLE test.table_2 on cluster '{cluster}'\r\n(\r\n  `date` Date,\r\n  `id`  Nullable(String)\r\n)\r\nENGINE = MergeTree()\r\nORDER BY date\r\n```\r\n\r\nInsert data in table 2\r\n```\r\nINSERT INTO test.table_2 (*) VALUES ('2022-04-01', null), ('2022-04-01', '1'), ('2022-04-01', '2'), ('2022-04-01', '3'), ('2022-04-01', '3'), ('2022-04-01', '4'), ('2022-04-01', '5');\r\n```\r\n\r\nInsert data into table 1 using table 1 data\r\n```\r\nINSERT INTO test.table_1 \r\nSELECT\r\n  date,\r\n  uniqCombined64State(17)(id)\r\nFROM test.table_2\r\nGROUP BY date\r\n```\r\n\r\nRun aggregate query on table 1\r\n```\r\nSELECT\r\n  date,\r\n  coalesce(uniqCombined64Merge(uniques), 0) AS uniques\r\nFROM test.table_1\r\nGROUP BY date \r\n```\r\n\r\nVersion **21.8.3.44** gives result\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500date\u2500\u252c\u2500uniques\u2500\u2510\r\n\u2502 2022-04-01 \u2502       5 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n**Error message and/or stacktrace**\r\nVersion **22.1.3.7** throws error\r\n```\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type AggregateFunction(uniqCombined64(17), Nullable(String)) of argument for aggregate function uniqCombined64Merge, expected AggregateFunction(uniqCombined64, Nullable(String)) or equivalent type. (ILLEGAL_TYPE_OF_ARGUMENT)\r\n```\r\n\r\n\r\n**Additional context**\r\nThis is blocking us to upgrade to newer version.\r\n",
  "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/35342/comments",
  "author": "piyushsriv",
  "comments": [
    {
      "user": "den-crane",
      "created_at": "2022-03-16T18:56:30Z",
      "body": ">AggregateFunction(uniqCombined64(17),\r\n> uniqCombined64Merge(uniques)\r\n\r\nThis is a mis-usage which leads to incorrect results with any version.\r\nYou should use `uniqCombined64Merge(17)(uniques)` with any version of CH."
    }
  ],
  "git_commit_info": {
    "sha": "045fd6f55db37059c97c0c276e8914b096e1f6bb",
    "date": "2017-02-07T22:40:08Z",
    "message": "fix build without readline",
    "author": "proller"
  },
  "repository_info": {},
  "llm_calls_before_build": 0,
  "dockerfile_attempt_1": 1,
  "dockerfile_attempt_1_failed": true,
  "dockerfile_build_success": true,
  "llm_calls_total": 10,
  "dockerfile": "FROM ubuntu:20.04\n\n# Avoid interactive prompts during package installation\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies for ClickHouse\nRUN apt-get update && apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    dirmngr \\\n    gnupg \\\n    wget \\\n    sudo \\\n    git \\\n    cmake \\\n    build-essential \\\n    gcc-9 \\\n    g++-9 \\\n    libicu-dev \\\n    libreadline-dev \\\n    libmysqlclient-dev \\\n    unixodbc-dev \\\n    libltdl-dev \\\n    libssl-dev \\\n    libgoogle-perftools-dev \\\n    libbz2-dev \\\n    libzstd-dev \\\n    libboost-dev \\\n    libboost-system-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libboost-program-options-dev \\\n    zlib1g-dev \\\n    liblz4-dev \\\n    libdouble-conversion-dev \\\n    libzookeeper-mt-dev \\\n    libsparsehash-dev \\\n    librdkafka-dev \\\n    libcapnp-dev \\\n    libpoco-dev \\\n    libunwind-dev \\\n    libxml2-dev \\\n    libpcre3-dev \\\n    ninja-build \\\n    python3 \\\n    python3-pip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set gcc-9 as default compiler\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 \\\n    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90 \\\n    && update-alternatives --set gcc /usr/bin/gcc-9 \\\n    && update-alternatives --set g++ /usr/bin/g++-9\n\n# Create build directory\nWORKDIR /build\n\n# Clone ClickHouse repository and checkout specific commit\nRUN git clone https://github.com/ClickHouse/ClickHouse.git \\\n    && cd ClickHouse \\\n    && git checkout 045fd6f55db37059c97c0c276e8914b096e1f6bb\n\n# Create build directory\nWORKDIR /build/ClickHouse/build\n\n# Configure cmake for the build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release\n\n# Build ClickHouse (with retry mechanism to handle potential build failures)\nRUN for i in 1 2 3; do \\\n        cmake --build . -- -j$(nproc) && break || \\\n        echo \"Build attempt $i failed, retrying with less parallelism...\" && \\\n        cmake --build . -- -j2 && break || \\\n        echo \"Build attempt $i failed, retrying with single thread...\" && \\\n        cmake --build . -- -j1 && break || \\\n        echo \"Build attempt $i failed, will retry...\" && \\\n        sleep 5; \\\n    done\n\n# Add the build directory to PATH\nENV PATH=\"/build/ClickHouse/build/programs:${PATH}\"\n\n# Create directories for ClickHouse data and configuration\nRUN mkdir -p /etc/clickhouse-server/config.d \\\n    && mkdir -p /etc/clickhouse-server/users.d \\\n    && mkdir -p /var/lib/clickhouse \\\n    && mkdir -p /var/lib/clickhouse/tmp\n\n# Create a basic configuration file for ClickHouse server\nRUN echo '<clickhouse>\\n\\\n    <logger>\\n\\\n        <level>trace</level>\\n\\\n        <console>true</console>\\n\\\n    </logger>\\n\\\n    <listen_host>0.0.0.0</listen_host>\\n\\\n    <path>/var/lib/clickhouse/</path>\\n\\\n    <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>\\n\\\n</clickhouse>' > /etc/clickhouse-server/config.xml\n\n# Create a users.xml file with default settings\nRUN echo '<clickhouse>\\n\\\n    <users>\\n\\\n        <default>\\n\\\n            <password></password>\\n\\\n            <networks>\\n\\\n                <ip>::/0</ip>\\n\\\n            </networks>\\n\\\n        </default>\\n\\\n    </users>\\n\\\n</clickhouse>' > /etc/clickhouse-server/users.xml\n\n# Create test script to reproduce and validate the issue\nRUN echo '#!/bin/bash\\n\\\necho \"Starting ClickHouse server...\"\\n\\\nclickhouse-server --config=/etc/clickhouse-server/config.xml &\\n\\\nsleep 5\\n\\\n\\n\\\necho \"Creating test database...\"\\n\\\nclickhouse-client --query=\"CREATE DATABASE IF NOT EXISTS test\"\\n\\\n\\n\\\necho \"Creating table_1...\"\\n\\\nclickhouse-client --query=\"CREATE TABLE test.table_1 (\\n\\\n  \\`date\\` Date,\\n\\\n  \\`uniques\\` AggregateFunction(uniqCombined64(17), Nullable(String))\\n\\\n) ENGINE = MergeTree() ORDER BY date\"\\n\\\n\\n\\\necho \"Creating table_2...\"\\n\\\nclickhouse-client --query=\"CREATE TABLE test.table_2 (\\n\\\n  \\`date\\` Date,\\n\\\n  \\`id\\` Nullable(String)\\n\\\n) ENGINE = MergeTree() ORDER BY date\"\\n\\\n\\n\\\necho \"Inserting data into table_2...\"\\n\\\nclickhouse-client --query=\"INSERT INTO test.table_2 (*) VALUES \\n\\\n('\"'\"'2022-04-01'\"'\"', null), \\n\\\n('\"'\"'2022-04-01'\"'\"', '\"'\"'1'\"'\"'), \\n\\\n('\"'\"'2022-04-01'\"'\"', '\"'\"'2'\"'\"'), \\n\\\n('\"'\"'2022-04-01'\"'\"', '\"'\"'3'\"'\"'), \\n\\\n('\"'\"'2022-04-01'\"'\"', '\"'\"'3'\"'\"'), \\n\\\n('\"'\"'2022-04-01'\"'\"', '\"'\"'4'\"'\"'), \\n\\\n('\"'\"'2022-04-01'\"'\"', '\"'\"'5'\"'\"')\"\\n\\\n\\n\\\necho \"Inserting data into table_1 using table_2 data...\"\\n\\\nclickhouse-client --query=\"INSERT INTO test.table_1 \\n\\\nSELECT \\n\\\n  date, \\n\\\n  uniqCombined64State(17)(id) \\n\\\nFROM test.table_2 \\n\\\nGROUP BY date\"\\n\\\n\\n\\\necho \"Running aggregate query on table_1...\"\\n\\\nclickhouse-client --query=\"SELECT \\n\\\n  date, \\n\\\n  coalesce(uniqCombined64Merge(uniques), 0) AS uniques \\n\\\nFROM test.table_1 \\n\\\nGROUP BY date\"\\n\\\n\\n\\\necho \"Test completed.\"\\n\\\n' > /test-issue-35342.sh\n\n# Make the test script executable\nRUN chmod +x /test-issue-35342.sh\n\n# Set working directory\nWORKDIR /\n\n# Default command\nCMD [\"echo\", \"ClickHouse environment prepared for testing issue #35342. Run /test-issue-35342.sh to test the backward compatibility of AggregateFunction.\"]",
  "successful_candidate_index": 1,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "satisfaction_conditions": [
    "Solution must work with Nullable(String) data type"
  ]
}