[
  {
    "number": 2849,
    "title": "Custom background vehicle model in Carla",
    "created_at": "2020-05-12T18:27:53Z",
    "closed_at": "2020-06-30T14:05:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/carla-simulator/carla/issues/2849",
    "body": "Hello,\r\n\r\nThanks for making a great simulator. I am doing a project in which I need to **customize all vehicles' dynamic models** in the Carla environment (for example, the vehicle will get the ground truth information and decide to change the lane or change the acceleration).\r\n\r\nIn order to get information about all the vehicles, I use the following codes:\r\n```\r\nwaypoint_list = [world.get_map().get_waypoint(v.get_location(), project_to_road=True) for v in vehicles_list]\r\n```\r\n\r\nAs I have about 200 vehicles in the Town04 map, I noticed that the line above cost me about 5 seconds each time, which can not meet the real-time requirements. My Carla version is 0.9.9 and runs on Ubuntu 18.04 with i9-9900k and 64 Gb RAM.\r\n\r\nI wonder if there are other solutions to let me **customize the control model** of the vehicles using the **provided PythonAPI**, or I may need to modify the source code of Carla to reach my purpose?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/carla-simulator/carla/issues/2849/comments",
    "author": "miracelplus",
    "comments": [
      {
        "user": "germanros1987",
        "created_at": "2020-06-26T06:04:00Z",
        "body": "@miracelplus you just want to get the location of all the vehicles for a given time instant? @glopezdiest could you provide a more effective way to  do this?"
      },
      {
        "user": "glopezdiest",
        "created_at": "2020-06-26T08:47:49Z",
        "body": "Hey @miracelplus. Could you provide a little more detail to your process? What are you gonna use the waypoint_list for? Isn't the location of the vehicles good enough? From what you've showed, the only recommendation i can tell you is, don't get the map every time, store it in a variable once and call it to get the waypoints."
      },
      {
        "user": "miracelplus",
        "created_at": "2020-06-29T01:57:09Z",
        "body": "Hello,\r\n\r\nThanks for your reply! I\u2019m working on customizing my own vehicle model (car following and lane change). The detailed usage of my application is like this:\r\n\r\n1.For every second, I need to get the information for each vehicle\r\n2.Then, I decide the next-second acceleration for this vehicle. \r\n3.I use waypoint for each vehicle and get the acceleration from my own decision part in order to keep the vehicle on the lane. \r\n4.Calculate the next waypoint the vehicle should achieve given specific acceleration.\r\n5.Teleport the vehicle to the new waypoint\r\n\r\nThat\u2019s how I finish my customized car-following model. I know this may be a dumb usage of provided PythonAPI. Therefore, I wonder if there\u2019s some more efficient ways that I can fulfill my goal?\r\n\r\nThanks!"
      },
      {
        "user": "glopezdiest",
        "created_at": "2020-06-29T11:29:22Z",
        "body": "I see. I'm still a bit confused though.\r\n\r\nFrom what I understand, you only care about the acceleration of the vehicle, which you are using to move (teleport) the vehicle. Are you using this specific approach instead of using a controller for some reason?\r\n\r\nWhy are you using the waypoints instead of the location, because they are in the middle of the road so you only care about going forward?\r\n\r\nYou seem to only care about using waypoints but you are getting them from the vehicle location on each frame (the command you showed at the beginning of this issue). So how are you calculating this \"next waypoint\"? You can just use the *carla.Waypoint.next()* function, which should remove the use of that location-to-waypoint-loop, speeding up the process.\r\n\r\nThose any of this makes sense? I may have just completely missunderstood what you are trying to achieve"
      },
      {
        "user": "miracelplus",
        "created_at": "2020-06-29T19:19:48Z",
        "body": "Hello,\r\n\r\nI\u2019m using this approach instead of a controller is because that some of my customizing model need all the vehicles\u2019 information around one specific vehicle. Therefore, I choose to use the PythonAPI to get all the vehicle\u2019s information and individually control each of them. I wonder if the controller method can get the information of surrounding vehicles (like 5 or 6 vehicles around this vehicle).\r\n\r\nAlso, the usage of waypoint method is that I wish the vehicle can follow the road, for example, the vehicle is on a curve shaped road and I wish to control the \u201clongitudinal\u201d acceleration of it. Is there some more straightforward method to achieve this goal? I\u2019m only using Carla for a short period of time so I may miss some more useful approaches.\r\n\r\nThe waypoint.next method is very helpful to my usage. Deleting the location-to-waypoint method accelerates the running speed.\r\n\r\nThanks for your reply, that means a lot to me."
      },
      {
        "user": "glopezdiest",
        "created_at": "2020-06-30T07:19:35Z",
        "body": "> Is there some more straightforward method to achieve this goal?\r\n\r\nNo, I think you are doing the correct approach here, but I've never though about it so I was confused. \r\n\r\n> The waypoint.next method is very helpful to my usage.\r\n\r\nGood to hear :+1:. I'm leaving this issue open in case your solution isn't final, but please, remember to close it if you find that it's resolved"
      },
      {
        "user": "miracelplus",
        "created_at": "2020-06-30T14:05:49Z",
        "body": "Thanks a lot!"
      }
    ],
    "satisfaction_conditions": [
      "Solution must enable real-time processing for 200+ vehicles",
      "Must provide access to surrounding vehicle information for decision-making",
      "Must maintain road adherence during control",
      "Should clarify PythonAPI capabilities vs engine modification needs",
      "Must support per-vehicle individualized control"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:49:57"
    }
  },
  {
    "number": 449,
    "title": "Error of Compiling Image_Converter ",
    "created_at": "2018-05-24T20:34:23Z",
    "closed_at": "2018-05-28T10:29:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/carla-simulator/carla/issues/449",
    "body": "Hi everyone,\r\nI have an error when compiling the image_converter script following the instructions in the post #165 .\r\nCan someone help me out?\r\nThe following is the error I got when running \"make\" under the directory of /carla/Util/ImageConverter/:\r\n\r\n```\r\nclang++ -Wall -Wextra -std=c++14 -fopenmp -O3 -DNDEBUG -o bin/image_converter main.cpp -lboost_system -lboost_filesystem -lboost_program_options -lpng -ljpeg -ltiff\r\nIn file included from main.cpp:16:\r\nIn file included from ./image_converter.h:10:\r\n./image_io.h:174:5: error: static_assert failed \"I/O format not supported!\"\r\n    static_assert(IO_READER::is_supported, \"I/O format not supported!\");\r\n    ^             ~~~~~~~~~~~~~~~~~~~~~~~\r\nmain.cpp:54:35: note: in instantiation of template class\r\n      'image_converter::image_file<image_converter::tiff_io,\r\n      image_converter::tiff_io, boost::gil::image<boost::gil::pixel<unsigned\r\n      char, boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,\r\n      boost::gil::green_t, boost::gil::blue_t>, boost::mpl::range_c<int, 0, 3> >\r\n      >, false, std::allocator<unsigned char> > >' requested here\r\n  image_converter::image_file<IO> file_io(in_filename);\r\n                                  ^\r\nmain.cpp:71:7: note: in instantiation of function template specialization\r\n      'parse_image<image_converter::tiff_io>' requested here\r\n      parse_image<ic::tiff_io>(in_filename, out_filename, converter);\r\n      ^\r\n1 error generated.\r\nMakefile:11: recipe for target 'release' failed\r\nmake: *** [release] Error 1\r\n```\r\n\r\nBTW, I have followed the README to install all necessary libs. \r\n\r\nAny helps are highly appreciated!\r\nBest regards,\r\nTaylor\r\n\r\n",
    "comments_url": "https://api.github.com/repos/carla-simulator/carla/issues/449/comments",
    "author": "tayloryang722",
    "comments": [
      {
        "user": "nsubiron",
        "created_at": "2018-05-25T09:55:13Z",
        "body": "True, I have the same error.\r\n\r\nInstalling `tiff5` dev library worked for me\r\n\r\n    sudo apt-get install libtiff5-dev"
      },
      {
        "user": "tayloryang722",
        "created_at": "2018-05-25T14:26:46Z",
        "body": "Hi nsubiron,\r\n\r\nThanks for your prompt response.\r\n\r\nThe problem was solved.\r\n\r\nBest,\r\nTaylor"
      }
    ],
    "satisfaction_conditions": [
      "Identifies the root cause of the static_assert error regarding unsupported I/O format",
      "Resolves missing/incompatible library dependencies for TIFF image handling",
      "Provides platform-appropriate installation method for required libraries",
      "Ensures compatibility between Boost.GIL and image format libraries"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:51:42"
    }
  }
]