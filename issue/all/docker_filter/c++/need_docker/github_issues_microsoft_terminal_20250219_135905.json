[
  {
    "number": 5120,
    "title": "An option to swallow the trailing CRLF on paste",
    "created_at": "2020-03-25T21:00:16Z",
    "closed_at": "2021-12-09T18:32:24Z",
    "labels": [
      "Help Wanted",
      "Area-TerminalControl",
      "Area-Settings",
      "Needs-Attention",
      "Product-Terminal",
      "Issue-Task",
      "Needs-Tag-Fix"
    ],
    "url": "https://github.com/microsoft/terminal/issues/5120",
    "body": "<!-- \r\n\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\ud83d\udea8\r\n\r\nI ACKNOWLEDGE THE FOLLOWING BEFORE PROCEEDING:\r\n1. If I delete this entire template and go my own path, the core team may close my issue without further explanation or engagement.\r\n2. If I list multiple bugs/concerns in this one issue, the core team may close my issue without further explanation or engagement.\r\n3. If I write an issue that has many duplicates, the core team may close my issue without further explanation or engagement (and without necessarily spending time to find the exact duplicate ID number).\r\n4. If I leave the title incomplete when filing the issue, the core team may close my issue without further explanation or engagement.\r\n5. If I file something completely blank in the body, the core team may close my issue without further explanation or engagement.\r\n\r\nAll good? Then proceed!\r\n-->\r\n\r\n# Description of the new feature/enhancement\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nDescribe why and how a user would use this new functionality (if applicable).\r\n-->\r\n\r\nWhenever I paste a line with a trailing CRLF in Terminal, it gets executed immediately. I'd like to have an option for Terminal to swallow the trailing CRLF, so it would be safe to paste text.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\n-->\r\n\r\nI don't have any suggestions on implementation, but ConEmu has an option like that.",
    "comments_url": "https://api.github.com/repos/microsoft/terminal/issues/5120/comments",
    "author": "wasker",
    "comments": [
      {
        "user": "DHowett-MSFT",
        "created_at": "2020-03-26T01:09:10Z",
        "body": "Yeah, we might as well have something like this. Somebody needs to suggest a config option (and whether it's profile-specific), and explain how it works when there's multiple newlines.\r\n\r\nFor reference, #395 is the holistic solution to this problem when all shells and applications eventually support it."
      },
      {
        "user": "zadjii-msft",
        "created_at": "2021-12-09T15:23:17Z",
        "body": "You know, we also discussed this over in 9400 and have a proposed fix in #11473. To quoth:\r\n\r\n> just to trim the trailing newline if that's the only one in the paste contents. To quote: \"It doesn't make sense to be warned for multiple lines, but copy a single line and try to paste it AND ONLY SEE ONE LINE IN THE DIALOG. That's dumb\".\r\n\r\n@wasker you think that'll work for you?"
      },
      {
        "user": "wasker",
        "created_at": "2021-12-09T18:29:22Z",
        "body": "@zadjii-msft Yeah, I think this is a decent resolution for this bug, thanks!"
      }
    ],
    "satisfaction_conditions": [
      "Prevents immediate execution of pasted text containing a single trailing newline",
      "Preserves multi-line paste behavior while handling single-line cases",
      "Maintains safety when pasting text"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:48:20"
    }
  },
  {
    "number": 1971,
    "title": "Ctrl+W doesn't terminate shells properly (so they can't do teardown and cleanup things)",
    "created_at": "2019-07-14T23:02:53Z",
    "closed_at": "2020-12-17T17:24:51Z",
    "labels": [
      "Help Wanted",
      "Area-Interop",
      "Issue-Bug",
      "Product-Terminal",
      "Needs-Tag-Fix"
    ],
    "url": "https://github.com/microsoft/terminal/issues/1971",
    "body": "# Environment\r\n\r\nWindows build number: Microsoft Windows [Version 10.0.18917.1000]\r\nWindows Terminal version (if applicable): 0.2.1831.0\r\n\r\n# Steps to reproduce\r\n\r\nExit a mingw bash shell using a keyboard shortcut to close the tab\r\n\r\n# Expected behavior\r\n\r\n`exit` is sent to the shell, process is terminated, if closing a running process the user is warned\r\n\r\n# Actual behavior\r\n\r\nTerminal is detached and not killed",
    "comments_url": "https://api.github.com/repos/microsoft/terminal/issues/1971/comments",
    "author": "axfelix",
    "comments": [
      {
        "user": "zadjii-msft",
        "created_at": "2019-07-15T21:51:54Z",
        "body": "Maybe we need to consider having an `exitCommand` setting? Though, what would happen if you launched a process from bash where `exit` did _not_ exit the program? For example, `vim`. How would we determine when to send `exit` to the commandline application?"
      },
      {
        "user": "axfelix",
        "created_at": "2019-07-15T22:15:51Z",
        "body": "Most terminal apps I've used on other platforms will warn when pressing Ctrl+W if anything else is running, on the assumption that the user probably doesn't want to kill the shell after all, and if they really do then probably all bets are off (you could send Ctrl+C then exit but that's a much less predictable use case anyway). "
      },
      {
        "user": "DHowett-MSFT",
        "created_at": "2019-07-15T22:16:15Z",
        "body": "This is absolutely a bug, we shouldn't go and add a new \"command to send on exit\". That's probably not a winning strategy.\r\n\r\nWe constrain our shells into job objects, so they _should_ absolutely be getting terminated when the tab is closed."
      },
      {
        "user": "wuss912",
        "created_at": "2019-10-25T20:57:22Z",
        "body": "CTRL + W is also used in a number of curses based apps... need a way to disable it as a kill switch so it can pass through instead"
      },
      {
        "user": "axfelix",
        "created_at": "2019-10-25T21:06:15Z",
        "body": "yup, that's why Mac has separation between Ctrl and Cmd, and Linux terminals use Ctrl+Shift for any terminal window shortcuts so that Ctrl shortcuts can be sent directly to the term. Not sure if you want to adopt that convention here too."
      },
      {
        "user": "tats-u",
        "created_at": "2019-10-29T01:46:30Z",
        "body": "Ctrl+Shift+W must be used to close the terminal instead.\r\n\r\nCtrl + W -> Split, Toggle, or something else panes (with alphabetic keys) in Vim, or Cut selected text or Write current file (with Ctrl +X) in Emacs\r\nCtrl + C -> Quit current application\r\nCtrl + V -> Start selecting text in Vim or PageDown in Emacs"
      },
      {
        "user": "shtirlic",
        "created_at": "2020-03-18T18:32:52Z",
        "body": "+1 to `exitCommand `\r\nI use terminal with docker desktop, running as default ENV for development, every new tab started with command like `docker start -ti dev_env zsh`, so when I close the tab, I would like to send `exit 0` to the zsh process, and then tab will be closed since exit code is 0.\n\n---\n\nAlso update I can autoclose background zsh process with setting TMOUT env for idle timeout as workaround but it's not good because when you leave tabs open it's closes after  TMOUT time, since there is no SIGALRM handling."
      },
      {
        "user": "fprimex",
        "created_at": "2020-12-10T04:58:21Z",
        "body": "I was editing in vim and using `:vert sp` when I discovered this behavior trying to change between splits. There should be an option or default behavior to not close the window with Ctrl+W. On non-mac systems, as @tats-u mentioned, ctrl+shift+w is the keyboard shortcut for window closing.\r\n\r\nI feel like this is perhaps a separate issue from not cleaning up the shells. If that's the case I can open a new issue."
      },
      {
        "user": "DHowett",
        "created_at": "2020-12-10T05:17:14Z",
        "body": "Hey @fprimex! Thanks for sticking with us since version 0.2! We actually changed the default for all new users to have `closePane` bound to `ctrl+shift+w` back in v0.3, in July 2019.\r\n\r\nIt might be a good time to refresh your settings file! Back up the bindings and profiles you care about, delete the file, and let Terminal make a new one. Things have changed _a lot_ since the default was `ctrl+w` for that action. :smile: "
      },
      {
        "user": "fprimex",
        "created_at": "2020-12-10T05:33:18Z",
        "body": "Hmm. This is a fresh install from the app store on a recently new-to-me machine that I only got in the past month. All I have changes are the prev & next tab bindings. I will review everything & see if I went wrong somewhere doing the install.\n\n---\n\nAlrighty, seems fine. Not sure where I went wrong. Maybe I managed to fat finger across ctrl and shift twice earlier lol. Thanks!"
      },
      {
        "user": "axfelix",
        "created_at": "2020-12-17T17:24:22Z",
        "body": "This seems to be working now -- I think I'll close this issue. Thanks!"
      }
    ],
    "satisfaction_conditions": [
      "Proper termination of shell processes when closing tabs via keyboard shortcuts",
      "Non-conflicting keyboard shortcuts for common terminal operations"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:48:54"
    }
  }
]