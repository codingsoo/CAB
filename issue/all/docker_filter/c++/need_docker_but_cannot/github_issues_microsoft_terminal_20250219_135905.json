[
  {
    "number": 10163,
    "title": "Saving SETTINGS.JSON starts 11 processes",
    "created_at": "2021-05-24T16:07:51Z",
    "closed_at": "2021-05-24T16:47:40Z",
    "labels": [
      "Help Wanted",
      "Issue-Bug",
      "Area-Settings",
      "Needs-Triage",
      "Product-Terminal",
      "Priority-3"
    ],
    "url": "https://github.com/microsoft/terminal/issues/10163",
    "body": "### Windows Terminal version (or Windows build number)\n\nMicrosoft Windows 10 Pro for Workstations 10.0.19042.985 (2009, 20H2) WindowsTerminal: 1.8.1092.0\n\n### Other Software\n\n_No response_\n\n### Steps to reproduce\n\nWith none of the WSL-related services running, open SETTINGS.JSON vie the settings UI and save it, noting the time.\r\n\r\nObserve the processes that were started at that time.\n\n### Expected Behavior\n\nSaving SETTINGS.JSON should not cause new processes to start.\n\n### Actual Behavior\n\nI saved the file at 11:53:21 and got\r\n\r\n```\r\nStart  Time            Pid       CPU(s)     WS(M)  Name\r\n--------------------------------------------------------------------------------\r\n05/24  11:53:21.392  10204        0.156      12.4  LxssManager             LxssManager\r\n05/24  11:53:21.439   6980        0.016      10.9  vmcompute               Hyper-V Host Compute Service\r\n05/24  11:53:21.587   5088        0.078      12.9  hns                     Host Network Service\r\n05/24  11:53:21.604   5204        0.078       7.5  nvagent                 Network Virtualization Service\r\n05/24  11:53:21.622   7548        0.031      18.8  SharedAccess            Internet Connection Sharing (ICS)\r\n05/24  11:53:21.666   9552        0.125       6.7  NetSetupSvc             NetSetupSvc\r\n05/24  11:53:21.457   9376        0.125      19.3  vmwp.exe\r\n05/24  11:53:21.478   3556        0.531     418.0  vmmem\r\n05/24  11:53:22.215  10188        0.016       4.8  wslhost.exe\r\n05/24  11:53:22.222   8164        0.000      10.9  conhost.exe\r\n05/24  11:53:22.235   3612        0.016       8.8  dllhost.exe\r\n```\r\n\r\nThat does not happen when I start WindowsTerminal, possibly because I have \"Windows.Terminal.Wsl\" among \"disabledProfileSources\".  My guess is that it need not happen when the settings are reloaded.",
    "comments_url": "https://api.github.com/repos/microsoft/terminal/issues/10163/comments",
    "author": "vefatica",
    "comments": [
      {
        "user": "zadjii-msft",
        "created_at": "2021-05-24T16:24:39Z",
        "body": "Huh. Weird that we'd boot WSL even if it is disabled. We probably shouldn't do that."
      },
      {
        "user": "vefatica",
        "created_at": "2021-05-24T16:46:32Z",
        "body": "Hmmm!  Apparently it's happening when the startingDirectory path in my user-defined Ubuntu profile is validated.  It doesn't happen if I comment out the startingDirectory.  Does it have to do that?\r\n\r\n```\r\n\"startingDirectory\": \"\\\\\\\\wsl$\\\\Ubuntu\\\\home\\\\vefatica\"\r\n```\r\n"
      },
      {
        "user": "DHowett",
        "created_at": "2021-05-24T16:47:25Z",
        "body": "Fortunately, I think we just removed the code that does that."
      },
      {
        "user": "zadjii-msft",
        "created_at": "2021-05-24T16:47:40Z",
        "body": "Oh good catch! Turns out, _it won't anymore_! See #10045. We're gonna stop doing that in 1.9."
      },
      {
        "user": "vefatica",
        "created_at": "2021-05-24T16:49:42Z",
        "body": "That sounds good."
      }
    ],
    "satisfaction_conditions": [
      "Prevent WSL-related service activation when saving settings.json with disabled WSL profiles",
      "Avoid path validation that triggers Hyper-V/WSL components for disabled features",
      "Maintain settings reload functionality without unnecessary subsystem initialization"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-04 23:47:54"
    }
  },
  {
    "number": 5936,
    "title": "Opening a new tab with ctrl+shift+1 provides no spoken feedback with NVDA",
    "created_at": "2020-05-16T09:24:01Z",
    "closed_at": "2022-02-16T00:00:47Z",
    "labels": [
      "Resolution-Fix-Available",
      "Help Wanted",
      "Issue-Bug",
      "Area-Accessibility",
      "Product-Terminal",
      "Priority-1"
    ],
    "url": "https://github.com/microsoft/terminal/issues/5936",
    "body": "# Environment\r\n\r\n```none\r\nWindows build number: 10.0.19041.264\r\nWindows Terminal version (if applicable): latest 0.11 preview\r\nNVDA: latest master snapshot alpha-20220,1c4519a6\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n1. With NVDA running, open terminal. Press ctrl+shift+1 to open a new tab.\r\n\r\n# Expected behavior\r\n\r\nNVDA informs me about the newly opened tab. Output from subsequent commands in this new tab are automatically read out by NVDA.\r\n\r\n# Actual behavior\r\n\r\nSilence. No feedback is provided. Additionally, new text is not read until tabbing away and back into terminal (i.e, it needs to regain focus).",
    "comments_url": "https://api.github.com/repos/microsoft/terminal/issues/5936/comments",
    "author": "Neurrone",
    "comments": [
      {
        "user": "codeofdusk",
        "created_at": "2020-05-16T11:02:08Z",
        "body": "Cc @carlos-zamora @DHowett-MSFT."
      },
      {
        "user": "DHowett",
        "created_at": "2020-05-18T23:58:26Z",
        "body": "Thanks! Triaged into near-term."
      },
      {
        "user": "carlos-zamora",
        "created_at": "2022-02-16T00:00:47Z",
        "body": "Looks like this got fixed in #10971 and I'm unable to get a repro of this on 1.13.10395.0 too.\r\n\r\nI'm going to close this issue out as \"Resolution-Fix-Available\", but if you're still experiencing it, let me know and I'll reopen it."
      },
      {
        "user": "Neurrone",
        "created_at": "2022-02-16T06:35:32Z",
        "body": "I can confirm this is fixed now, thanks!"
      }
    ],
    "satisfaction_conditions": [
      "Screen reader announces new tab creation",
      "Terminal automatically provides focus context to screen reader after tab creation",
      "Accessibility events are properly triggered for UI state changes"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-04 23:48:03"
    }
  },
  {
    "number": 3785,
    "title": "Fullscreen on secondary display has has more than double the expected width",
    "created_at": "2019-11-30T09:24:48Z",
    "closed_at": "2020-01-06T21:12:31Z",
    "labels": [
      "Resolution-Fix-Available",
      "Help Wanted",
      "Issue-Bug",
      "Area-UserInterface",
      "Product-Terminal"
    ],
    "url": "https://github.com/microsoft/terminal/issues/3785",
    "body": "# Environment\r\n\r\n```none\r\nWindows build number: 10.0.18363.0\r\nWindows Terminal version (if applicable): 0.7.3291.0\r\n```\r\n\r\nTwo displays on same nvidia GPU (441.41 drivers). Primary is 2560x1440, secondary positioned to the left is 1920x1200.\r\n\r\n# Steps to reproduce\r\n\r\nUse powershell `$Host.UI.RawUI.WindowSize` to check dimensions of terminal both maximized and fullscreen.\r\n\r\n# Expected behavior\r\n\r\nFullscreen terminal should report at most a handful of extra rows/cols compared to a maximized window (accounting for space consumed by window border/task bar).\r\n\r\n# Actual behavior\r\n\r\nFor primary monitor as expected:\r\nMaximized: 229x61\r\nFullscreen: 231x63\r\n\r\nOn secondary monitor *gigantic* width in fullscreen:\r\nMaximized: 171x50\r\nFullscreen: **348**x52\r\n\r\nThe fullscreen window itself is still correctly sized to the display.  The left/top/bottom edges of the terminal content are aligned to the matching edges of the window (or approximately when fullscreened directly from maximized ala #3709).  The extra columns aren't visible beyond the right edge of the window.",
    "comments_url": "https://api.github.com/repos/microsoft/terminal/issues/3785/comments",
    "author": "krage",
    "comments": [
      {
        "user": "DHowett-MSFT",
        "created_at": "2019-12-02T20:54:36Z",
        "body": "This may (???) be helped by #3721?"
      },
      {
        "user": "krage",
        "created_at": "2019-12-03T21:51:53Z",
        "body": "I've built a copy of that branch in #3721 and it does appear to fix this behavior for me.\r\n\r\nI removed my settings file to directly compare the powershell-reported dimensions of the built-in defaults across both:\r\n\r\n## Release Build\r\nPrimary Display Maximized 280x64\r\nPrimary Display Fullscreen (from non-maximized) 280x67\r\nPrimary Display Fullscreen (from maximized) 283x67\r\nSecondary Display Maximized 209x52\r\nSecondary Display Fullscreen (from non-maximized) 423x56\r\nSecondary Display Fullscreen (from maximized) 425x55\r\n\r\n## #3721 Build\r\nPrimary Display Maximized 280x64\r\nPrimary Display Fullscreen (from non-maximized) 280x67\r\nPrimary Display Fullscreen (from maxmimized) 280x67\r\nSecondary Display Maximized 209x52\r\nSecondary Display Fullscreen (from non-maximized) 209x56\r\nSecondary Display Fullscreen (from maximized) 209x56\r\n\r\nSo can confirm on my setup at least that it fixes both the incorrect width on secondary display and the fullscreen from maximize issues.\r\n\r\n\r\n"
      }
    ],
    "satisfaction_conditions": [
      "Ensures terminal reports correct dimensions in fullscreen mode on secondary displays",
      "Maintains consistent window dimensions regardless of how fullscreen is activated (from maximized vs non-maximized state)"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-04 23:48:27"
    }
  },
  {
    "number": 2756,
    "title": "Highlighting (copying) from left edge of window with cursor in full screen fails",
    "created_at": "2019-09-14T05:00:12Z",
    "closed_at": "2019-09-21T14:43:09Z",
    "labels": [
      "Help Wanted",
      "Issue-Bug",
      "Area-UserInterface",
      "Area-TerminalControl",
      "Product-Terminal",
      "Needs-Tag-Fix"
    ],
    "url": "https://github.com/microsoft/terminal/issues/2756",
    "body": "# Environment\r\n10.0.18362.0 Terminal: 0.4.2382.0\r\n\r\n# Steps to reproduce\r\n\r\nMaximize the terminal window.  Move cursor all the way to the left of the screen and start dragging to highlight the text on that row.\r\n\r\n# Expected behavior\r\n\r\nIt starts highlighting the row you are on (the text).  This is similar to putty, cmd, and powershell outside of terminal.\r\n\r\n# Actual behavior\r\n\r\nThe row you are on is not highlighted.  You must click on the first character of the row, not to the left of it.\r\n\r\nThis requires for more precise highlighting to avoid missing what you want to copy and is far slower.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/terminal/issues/2756/comments",
    "author": "mitchcapper",
    "comments": [
      {
        "user": "mcpiroman",
        "created_at": "2019-09-21T12:13:11Z",
        "body": "Does this happen also in non-maximized window and not happen if you disable padding?\r\nIf yes, then this is #1367"
      },
      {
        "user": "mitchcapper",
        "created_at": "2019-09-21T14:43:09Z",
        "body": "@mcpiroman indeed, good catch lets hope #1672 or a similar fix gets merged soon.  For now padding off works to solve:)  Closing as dupe."
      }
    ],
    "satisfaction_conditions": [
      "Text highlighting should work when starting from the left edge of a maximized/full-screen terminal window",
      "Solution must not require pixel-perfect clicking on first character",
      "Padding settings should not interfere with text selection functionality",
      "Behavior should match standard terminal expectations for text selection"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-04 23:48:37"
    }
  }
]