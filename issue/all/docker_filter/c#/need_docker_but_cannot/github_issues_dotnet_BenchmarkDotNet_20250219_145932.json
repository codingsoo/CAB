[
  {
    "number": 1140,
    "title": "Targeting .NET 4.6.2 but executing as 4.7.2",
    "created_at": "2019-04-28T17:57:36Z",
    "closed_at": "2019-04-28T21:07:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/BenchmarkDotNet/issues/1140",
    "body": "I have a small benchmark project that is targeting netcoreapp2 and net462.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp2;net462</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"BenchmarkDotNet\" Version=\"0.11.5\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n\r\nHowever when running this benchmark it only seems to respect the netcoreapp target and not the full framework one. It states that the CLR job was run targeting net472. Could I be doing this wrong or is this an issue? I have targeted only two jobs [CoreJob, ClrJob].\r\n\r\n>   [Host] : .NET Core 2.0.9 (CoreCLR 4.6.26614.01, CoreFX 4.6.26614.01), 64bit RyuJIT\r\n>   Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3394.0\r\n>   Core   : .NET Core 2.0.9 (CoreCLR 4.6.26614.01, CoreFX 4.6.26614.01), 64bit RyuJIT\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/BenchmarkDotNet/issues/1140/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2019-04-28T21:07:48Z",
        "body": "I have also noticed that even if I remove the explicit job attributes and only target my project to net462 the run summary still shows it executes with net472.\n\n---\n\nAfter asking on SO someone pointed out that unlike .net core the full framework does not have side by side installs but a runtime that is upgraded in place. So even with net462 but having 4.7.2 installed means that will be the runtime. Makes sense."
      },
      {
        "user": "adamsitnik",
        "created_at": "2019-04-29T13:02:24Z",
        "body": "This is the default behavior of Full .NET Framework. No matter what version your app targets, it's always executed with the latest .NET Runtime installed on your machine.\r\n\r\nYou can test it with the following example\r\n\r\n```cs\r\nvoid Main() => System.Console.WriteLine(Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment.FrameworkDescription);\r\n```"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of how .NET Framework runtime version selection works compared to .NET Core",
      "Clarification of the relationship between target framework and actual runtime in full .NET Framework",
      "Confirmation of expected behavior when multiple .NET Framework versions are installed",
      "Guidance on testing/verifying runtime environment in full .NET Framework"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:11:53"
    }
  }
]