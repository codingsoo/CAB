[
  {
    "number": 1817,
    "title": "File in use issues in V5",
    "created_at": "2020-09-15T15:52:57Z",
    "closed_at": "2020-09-17T17:07:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1817",
    "body": "I am using LiteDB in a simple desktop app that uses 2 shared db files on an EMC Isilon (CIFS and NFS) file share.\r\n\r\nI upgraded to V5 recently, largely to use LiteDB Studio and for a couple of features like DeleteMany.\r\n\r\nNow my users are continually getting transient \"file in use\" errors trying the read or update the files. Error msgs include.\r\n\r\n\"The process cannot access the file .. because it is being used by another process\"\r\n\"Access to the path is denied\"\r\n\r\nAll LiteDB access is done inside Using blocks. I do a db.Commit() after each transaction.\r\n\r\nI  open/connected to  the file in LiteDB Studio and queried it using Direct mode. When I disconnect I got the \"Access to the path is denied\" error. Next time I tried in Shared mode and got the access denied just trying to connect to file.\r\n\r\nThe locked condition seems to persist for an indeterminant period of time even when no one accesses the file.\r\n\r\nHas anyone seen this behavior and/or have a way to work around it?\r\n\r\nI am having a hard time determining if is enviornmental or something I am doing wrong.\r\n\r\nI never saw this in the same environment in 18 months of using LiteDB V4.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1817/comments",
    "author": "chucksullivancvs",
    "comments": [
      {
        "user": "chucksullivancvs",
        "created_at": "2020-09-15T16:42:51Z",
        "body": "Also, I notice that a file with the same name as the data.db file with \"-log.db\" appended to it. If I rename or delete the -log file the file lock seems to clear. I understand this to be the temp transaction file and should be cleaned up automatically which apparently is not happening.\r\n\r\nWould it be \"safe\" to check for and delete this file as a mitigation? Or might that cause more problems than it solves?\r\n"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-09-16T14:31:50Z",
        "body": "@chucksullivancvs LiteDB v5.0.x does not support network shares. This is because the Shared mode uses an OS-wide mutex to synchronize file access, which obviously doesn't work over the network. v4 used file locks, which are implemented by network file systems, but it has problems of its own.\r\n\r\nI suggest you stay at v4 until we release v5.1, which will use lock files to synchronize file access and, therefore, should work with network shares."
      },
      {
        "user": "chucksullivancvs",
        "created_at": "2020-09-16T20:38:18Z",
        "body": "@lbnascimento - thx. i gone ahead and downgraded to 4.1.4. was pretty easy. just had to get rid ofthe Commit() and rewrite the DeleteMany. So far so good on that. new issue though I will post seperately"
      }
    ],
    "satisfaction_conditions": [
      "Compatibility with network file systems (CIFS/NFS)",
      "Proper cleanup of temporary transaction files",
      "File synchronization method that works across network processes",
      "Backward-compatible error resolution"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:28:10"
    }
  },
  {
    "number": 294,
    "title": "Xamarin ios integration build error",
    "created_at": "2016-09-02T05:54:23Z",
    "closed_at": "2016-09-06T12:52:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/294",
    "body": "Hi,\n\nI want to integrate LiteDB into Xamarin app containing ios & android platform. I have downloaded the source code of LiteDB and given reference of LiteDB.Core.dll into PCL library. However, when I build the source code for xamarin ios it gives below error: \n\n**Error :** \nFailed to resolve \"System.Int32 System.Runtime.InteropServices.Marshal::GetHRForException(System.Exception)\" reference from \"System.Runtime.InteropServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" \n\n**Configuration:**\nXamarin Version: 4.1.1.3\nXamarin iOs Version: 9.8.1.4\nLiteDB.Core Version: 2.0.2.0\niOS SDK Version : 9.2\n\n(Please note it working fine with android).\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/294/comments",
    "author": "romil-zealous",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-09-06T12:30:32Z",
        "body": "Hi @shahromil88, did you reference LiteDB.Core and specific LiteDB.Platform for iOS? LiteDB.Core is a same dll for all platforms, but need a specific LiteDB.Platform.dll that changes in each platform.\n"
      },
      {
        "user": "romil-zealous",
        "created_at": "2016-09-06T12:52:52Z",
        "body": "Hi @mbdavid, I think it is my mistake in assigning references to my project. It is working fine now.\n\nThank you for the prompt response.\n"
      }
    ],
    "satisfaction_conditions": [
      "Identifies the need for platform-specific dependencies in Xamarin iOS",
      "Addresses compatibility between LiteDB.Core and Xamarin iOS targets",
      "Resolves the missing System.Runtime.InteropServices.Marshal method error",
      "Explains differences between PCL and platform-specific implementations",
      "Provides guidance on proper dependency management for Xamarin cross-platform projects"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:34:34"
    }
  }
]