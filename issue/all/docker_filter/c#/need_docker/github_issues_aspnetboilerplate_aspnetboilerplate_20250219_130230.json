[
  {
    "number": 889,
    "title": "Swagger error",
    "created_at": "2016-02-22T08:01:05Z",
    "closed_at": "2016-02-23T04:41:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/889",
    "body": "I've this issue when try to open /swagger:\n`500 : {\"message\":\"An error has occurred.\",\"exceptionMessage\":\"Not supported by Swagger 2.0: Multiple operations with path 'api/AbpServiceProxies' and method 'GET'. See the config setting - \\\"ResolveConflictingActions\\\" for a potential workaround\",\"exceptionType\":\"System.NotSupportedException\"`\n\nIn my API module I don't call swagger beacuse if I try I cacth an exception that say me the path already exists.  \n`Configuration.Modules.AbpWebApi().HttpConfiguration\n                .EnableSwagger(c =>\n                {\n                    c.SingleApiVersion(\"v1\", \"myApp.WebApi\");\n                    c.ResolveConflictingActions(apiDescriptions => apiDescriptions.First());\n                })\n                .EnableSwaggerUi();`\n",
    "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/889/comments",
    "author": "andmattia",
    "comments": [
      {
        "user": "hikalkan",
        "created_at": "2016-02-22T19:56:10Z",
        "body": "Where are you calling this code? In AspNet Zero, we are calling it in Initialize method of WebApi project.\n\nNote that; When you install Swagger, it also includes a configuration class and calls it from Startup file. Remove this configuration file and it's usage.\n"
      },
      {
        "user": "andmattia",
        "created_at": "2016-02-23T04:41:36Z",
        "body": "I call it on AspNet Zero so in my project was in Web.API app_start a class to create/call swagger.\n\nI've remove it and call contructor on web.api initialize and now it works fine.\n\nthks a lot\n\nmat\n"
      }
    ],
    "satisfaction_conditions": [
      "Resolve conflicting Swagger configurations caused by duplicate initialization",
      "Ensure Swagger configuration is initialized in the correct application lifecycle stage"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:55:33"
    }
  },
  {
    "number": 306,
    "title": "How to build latest version from master and then updating nuget package for Zero",
    "created_at": "2015-01-29T18:37:07Z",
    "closed_at": "2015-01-29T20:17:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/306",
    "body": "I'm pulling in the latest Abp.Zero which has a dependency on .0.5.0.4   I've run the .bat file to generate the latest nuget packages.  What's the best way of going about getting 0.5.0.4 nuget package into the Zero project?\n\nThanks so much.\n\nChris\n",
    "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/306/comments",
    "author": "langman66",
    "comments": [
      {
        "user": "jaq316",
        "created_at": "2015-01-29T19:10:59Z",
        "body": "All you need to do is to add the directory where the latest nuget packages was generated as a Package Source in Visual Studio. You can find this setting under:\nTools > Options > NuGet Package Manager > Package Sources\n"
      },
      {
        "user": "langman66",
        "created_at": "2015-01-29T20:17:12Z",
        "body": "Thanks Jacques!  \n\nI went ahead and removed all abp nuget references and added in all the projects so I can debug through all the layers when necessary. \n"
      },
      {
        "user": "hikalkan",
        "created_at": "2015-01-30T23:25:17Z",
        "body": "Hi all,\nPublished ABP and module zero 0.5.1 ;)\n"
      },
      {
        "user": "langman66",
        "created_at": "2015-01-31T00:23:02Z",
        "body": "Thanks.  It was a lot of work to get the sample project working again by building everything manually.  Using this framework makes building my app so easy!   \n"
      }
    ],
    "satisfaction_conditions": [
      "Method to integrate locally built NuGet packages into the project",
      "Approach should enable debugging through layered dependencies",
      "Process should minimize manual configuration work"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:56:46"
    }
  }
]