[
  {
    "number": 641,
    "title": "store configuration in consul  problem on v12.0.0",
    "created_at": "2018-09-28T03:05:12Z",
    "closed_at": "2018-10-15T01:50:37Z",
    "labels": [
      "feature",
      "help wanted",
      "medium effort"
    ],
    "url": "https://github.com/ThreeMammals/Ocelot/issues/641",
    "body": "## Expected Behavior / New Feature\r\nhi\r\n\r\nWhen the configuration is stored in consul, restarting the application causes local ocelot. json information to be synchronized to consul, resulting in loss of consul configuration data;\r\n\r\nI find that every restart application is executed.\r\n\r\n`if(AdministrationApiInUse(adminPath))`\r\n`{`\r\n    `   var fileConfigSetter = builder.ApplicationServices.GetService<IFileConfigurationSetter>();`\r\n    `   await SetFileConfig(fileConfigSetter, fileConfig);`\r\n`}`\r\n## Actual Behavior / Motivation for New Feature\r\n\r\n\r\n## Steps to Reproduce the Problem\r\n\r\n  1.\r\n  1.\r\n  1.\r\n\r\n## Specifications\r\n\r\n  - Version:v12.0.0\r\n  - Platform:\r\n  - Subsystem:\r\n",
    "comments_url": "https://api.github.com/repos/ThreeMammals/Ocelot/issues/641/comments",
    "author": "q315523275",
    "comments": [
      {
        "user": "TomPallister",
        "created_at": "2018-10-13T16:44:41Z",
        "body": "@q315523275 mmmmm I will check this out ASAP, I thought I fixed this already.\n\n---\n\n@q315523275 Ive had a chance to look at this issue, it looks like expected behaviour. If you are using the administration API when Ocelot starts up it writes to ocelot.json and ocelot.{env}.json because users expect both of these configs to be in sync.\r\n\r\nIf you are using consul instead of using DiskFileConfigurationRepository to do the save it uses the Consul version and hence it saves to your consul instance.\r\n\r\nThe fix for this is say if using consul to store ocelot configuration don't save the config when starting Ocelot. This would mean exposing some kind of delegate from Ocelot.Provider.Consul package.\r\n\r\nFor now I would suggest dont use the administration api when using Consul. You shouldnt need both."
      },
      {
        "user": "q315523275",
        "created_at": "2018-10-15T01:50:37Z",
        "body": "@TomPallister Thank you very much for your reply. I will use API management in another way."
      }
    ],
    "satisfaction_conditions": [
      "Prevent local configuration from overwriting Consul-stored configuration during application restarts",
      "Provide a way to disable configuration synchronization when using Consul storage",
      "Document separation between administration API usage and Consul configuration storage",
      "Offer configuration options to choose between different storage synchronization behaviors"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-05 00:10:59"
    }
  }
]