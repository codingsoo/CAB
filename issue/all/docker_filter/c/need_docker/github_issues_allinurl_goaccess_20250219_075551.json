[
  {
    "number": 2267,
    "title": "Token for '%b' specifier is NULL",
    "created_at": "2022-01-22T06:55:06Z",
    "closed_at": "2022-01-23T02:21:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2267",
    "body": "Example log entries:\r\n`192.168.112.89 - - [22/Jan/2022:00:00:01 +0800] \"GET /app/bed/message/unread?admId=18413&X-ARR-CACHE-HIT=0&X-ARR-LOG-ID=ed1bf584-5da6-4010-9435-7ce111a75131&SERVER-STATUS=200 HTTP/1.1\" 200 192`\r\n\r\nGoaccess version:\r\n`GoAccess - version 1.5.4 - Jan 20 2022 11:47:38` \r\n\r\nSo I start goaccess via:\r\n`LANG='zh_CN.UTF-8' LC_TIME='en_US.UTF-8' goaccess goaccess.log -a -o report.html --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"'  --date-format=%d/%b/%Y --time-format=%H:%M:%S`\r\n\r\nAnd i get a fails msg  about  `Token for '%b' specifier is NULL`.\r\n\r\nIf i chang `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"` to `%h %^[%d:%t %^] \"%r\" %s \"%R\" \"%u\"\" \"%u\"` it's work wall.\r\n\r\nSo it's a bug for this version ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2267/comments",
    "author": "snowlyg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-01-22T15:16:08Z",
        "body": "Please try using:\r\n\r\n    goaccess --log-format=COMMON access.log\r\n"
      },
      {
        "user": "snowlyg",
        "created_at": "2022-01-23T02:21:03Z",
        "body": "> Please try using:\r\n> \r\n> ```\r\n> goaccess --log-format=COMMON access.log\r\n> ```\r\n\r\nThanks, It's working."
      }
    ],
    "satisfaction_conditions": [
      "The solution must correctly handle the response size (%b) field in the log format specification",
      "The answer must provide a log format that matches the actual structure of the user's log entries",
      "The solution must avoid NULL values for required log fields"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:53:06"
    }
  },
  {
    "number": 2186,
    "title": "[Help] Need real-time-html report",
    "created_at": "2021-09-20T07:14:29Z",
    "closed_at": "2021-09-22T03:54:44Z",
    "labels": [
      "question",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2186",
    "body": "Recently started using goaccess for our apache base website. We are able to get console running and even was able to generate static HTML page. But again whenever I try to generate report in HTML either static or relatime it shows Websocket interface. Wereas would like to automate a process to generate real-time-html report which runs in background as a daemon or system service. Please can you guide. If this is answered already then please excuse me and share the link for me to refer.   ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2186/comments",
    "author": "JoelDivekar",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-09-21T00:05:07Z",
        "body": "I'm not sure I follow, but if you are interested in running goaccess in the background, you could run it as:\r\n\r\n    goaccess access.log --log-format=COMBINED --daemonize\r\n\r\nOr you could do it through systemd, e.g., #1898 \r\n\r\nLet me know if that helps."
      },
      {
        "user": "JoelDivekar",
        "created_at": "2021-09-22T03:54:43Z",
        "body": "Yes, I did that exactly and it is working fine. But I may have to set it up as a service which will auto start with system reboot. Thanks a lot @allinurl"
      }
    ],
    "satisfaction_conditions": [
      "Solution must enable running GoAccess as a persistent background service/daemon",
      "Service must survive system reboots without manual intervention",
      "Integration with system service management infrastructure"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:53:16"
    }
  },
  {
    "number": 990,
    "title": "--daemonize option does not work",
    "created_at": "2018-01-12T10:54:07Z",
    "closed_at": "2018-01-12T17:33:01Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/990",
    "body": "centos:\r\n\r\nthis work: \r\n```\r\ngoaccess access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html \r\n```\r\nthis do not work (--daemonize), aslo no out put:\r\n\r\n```\r\ngoaccess access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html --daemonize\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/990/comments",
    "author": "ccqgithub",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-12T15:15:38Z",
        "body": "Please try using full paths in every command line option. e.g.,\r\n\r\n    goaccess /var/log/nginx/access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html --daemonize"
      },
      {
        "user": "ccqgithub",
        "created_at": "2018-01-12T17:33:01Z",
        "body": "it work! thanks!"
      }
    ],
    "satisfaction_conditions": [
      "Solution must ensure GoAccess can properly access required files when running as a daemon",
      "Answer must address path resolution issues in background processes",
      "Proposed fix should maintain real-time HTML output functionality while daemonizing"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:58:27"
    }
  },
  {
    "number": 680,
    "title": "Pipe log to GoAccess not working in cronjob without hyphen",
    "created_at": "2017-03-07T15:24:19Z",
    "closed_at": "2017-03-07T15:51:38Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/680",
    "body": "**In Cronjob:**\r\nIn version 1.1.1 the following call worked in cronjob:\r\n`zgrep -h '\\[07/Mar/2017' /var/log/apache2/access.log.gz |  goaccess --no-progress -q > /path/to/file.html`\r\n\r\nIn version 1.2 this call works only when I insert a hyphen to goaccess:\r\n`zgrep -h '\\[07/Mar/2017' /var/log/apache2/access.log.gz |  goaccess - --no-progress -q > /path/to/file.html`\r\nIf the hyphen is not used, I get the help output (goaccess without args)\r\n\r\n**Terminal**\r\nIn bash terminal both variants work well\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/680/comments",
    "author": "spy1986",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-07T15:30:57Z",
        "body": "Thanks for reporting this. The hyphen is now required in v1.2 if used from the cron. This fixes #647."
      },
      {
        "user": "spy1986",
        "created_at": "2017-03-07T15:46:14Z",
        "body": "Ok, Thanks"
      },
      {
        "user": "TCB13",
        "created_at": "2017-04-01T17:49:59Z",
        "body": "~@allinurl is this supposed to happen even indirectly? I'm using cron to run a bash script that will run `goaccess` and I have this issue... See #711. Thank you!~\r\n\r\n**Nevermind, exactly my issue at #647 and already answered!**"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of why GoAccess v1.2 requires a hyphen when used in cronjobs but not in interactive terminals",
      "Clarification of version-specific changes in argument handling for non-interactive environments",
      "Identification of environment-specific requirements for piping data to GoAccess"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:00:10"
    }
  }
]