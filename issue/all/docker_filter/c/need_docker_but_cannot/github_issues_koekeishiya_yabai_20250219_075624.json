[
  {
    "number": 2080,
    "title": "Command stopped working with new update",
    "created_at": "2024-02-06T21:23:26Z",
    "closed_at": "2024-02-08T10:21:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/2080",
    "body": "Hi, I was using this command pretty heavily (I found it here on github a couple of months ago):\r\n```\r\nshift + alt - t: layer=\"$(yabai --message query --windows --window | jq --raw-output .layer)\" && yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```\r\nSuddenly it stopped working, could someone help me understading why? \r\n\r\nThank's",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/2080/comments",
    "author": "edofe99",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2024-02-07T16:07:20Z",
        "body": "Read the query parameter value `sub-layer` instead of `layer` #2062 "
      },
      {
        "user": "edofe99",
        "created_at": "2024-02-07T16:09:30Z",
        "body": "What's the difference between sub-layer and sub-level?"
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-07T16:11:20Z",
        "body": "sub-level is the actual integer number reported by the macOS API; sub-layer is the yabai mapping to give it meaning from a user pov."
      },
      {
        "user": "edofe99",
        "created_at": "2024-02-08T12:51:15Z",
        "body": "Yabai .config: \r\n```\r\n# layer\r\nyabai -m rule --add app=\".*\" layer=below\r\n```\r\n\r\nskhd config: \r\n```\u00a0\r\nshift + alt - t: layer=\"$(yabai --message query --windows --window | jq --raw-output .layer)\" && yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```\r\n\r\nSo, I've tried multiple combinations, like: \r\n```\u00a0\r\nshift + alt - t: layer=\"$(yabai --message query --windows --window | jq --raw-output .sub-layer)\" && yabai --message window --sub-layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```\r\nBut it does not work. Can you please help me to fix the skhd code? Thank's. "
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-08T12:57:30Z",
        "body": "This one works for me:\r\n\r\n```\r\nshift + alt - t: layer=$(yabai --message query --windows --window | jq -re '.\"sub-layer\"') && yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```"
      },
      {
        "user": "edofe99",
        "created_at": "2024-02-08T12:59:20Z",
        "body": "Perfect. Thank's so much and sorry for bothering you. "
      }
    ],
    "satisfaction_conditions": [
      "Explanation of why the original parameter 'layer' stopped working and what replaced it",
      "Correct handling of JSON key with hyphen in jq query",
      "Working toggle mechanism between 'below' and 'normal' layers",
      "Compatibility with latest yabai version's layer management"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:04:38"
    }
  },
  {
    "number": 1434,
    "title": "How to auto-focus first window of current display when a floating window is closed?",
    "created_at": "2022-09-21T07:26:21Z",
    "closed_at": "2022-09-21T13:47:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1434",
    "body": "Dear yabai developer and enthusiasts,\r\n\r\nThe following line in the configuration file seems not working..\r\n\r\n```\r\nyabai -m signal -add event=window_destroyed action=\"yabai -m window --focus first\"\r\n```\r\n\r\nThank you in advance!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1434/comments",
    "author": "patricorgi",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-21T13:43:16Z",
        "body": "`yabai -m window --focus first` will attempt to focus the first bsp-managed window on screen. If you simply want the most recently used window on screen, use this signal:\r\n\r\n```\r\nyabai -m signal --add event=window_destroyed active=yes action=\"yabai -m window --focus \\$(yabai -m query --windows --space | jq '.[0].id')\"\r\n```"
      },
      {
        "user": "patricorgi",
        "created_at": "2022-09-21T13:46:57Z",
        "body": "@koekeishiya Thank you! I just realized I was missing a hyphen in the `--add` option. Your suggested command is also very helpful!"
      }
    ],
    "satisfaction_conditions": [
      "Correctly configure event-driven focus switching when windows close",
      "Handle focus transition specifically within the current display/space",
      "Account for window management type (bsp-managed vs floating)",
      "Use proper signal subscription syntax",
      "Prioritize most recently used windows when applicable"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:05:13"
    }
  },
  {
    "number": 1407,
    "title": "Trigger focus app under mouse",
    "created_at": "2022-09-12T10:04:56Z",
    "closed_at": "2022-09-12T11:08:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1407",
    "body": "Hi,\r\n\r\nI don't use the focus_follow_mouse option but I was wondering if there was a way to trigger a focus window under mouse through a yabai command.\r\n\r\nI work on a little script and it looks like it would be helpful.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1407/comments",
    "author": "mickaelperrin",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-12T10:26:55Z",
        "body": "`yabai -m window --focus mouse` should do the trick?"
      },
      {
        "user": "mickaelperrin",
        "created_at": "2022-09-12T11:08:14Z",
        "body": "Nice thanks !"
      }
    ],
    "satisfaction_conditions": [
      "Provides a yabai command to programmatically focus the window under the mouse cursor",
      "Works without enabling focus_follow_mouse behavior",
      "Suitable for integration into automation scripts"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:05:31"
    }
  },
  {
    "number": 1369,
    "title": "Yabai automatically refreshing on Mac M1 Monterey 12.5",
    "created_at": "2022-08-23T15:24:29Z",
    "closed_at": "2022-08-30T05:08:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1369",
    "body": "I am facing an unusual issue. Windows keep refreshing automatically in 5 seconds or so. I do not have anything as such in config file. Also, I have disabled automatic window arrangement. \r\n\r\nWhat might be the issue here ?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1369/comments",
    "author": "prajinkhadka",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-08-23T15:31:49Z",
        "body": "Sounds like a crash. Make sure you are using the latest released version of yabai (v4.0.2)."
      },
      {
        "user": "prajinkhadka",
        "created_at": "2022-08-30T05:08:04Z",
        "body": "Yup !! That solved it. \r\n\r\nThank you @koekeishiya  "
      }
    ],
    "satisfaction_conditions": [
      "Identifies potential causes related to software version compatibility",
      "Addresses unexpected crashes/restarts of the window manager",
      "Provides stability verification steps for system components"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:05:40"
    }
  },
  {
    "number": 1362,
    "title": "[Question] Move all instances of application to a different desktop",
    "created_at": "2022-08-18T13:44:27Z",
    "closed_at": "2022-08-18T14:41:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1362",
    "body": "Hello guys.\r\n\r\nFirst of all, great job you're doing here with Yabai.\r\n\r\nI have a simple question, let's say we have multiple instances of the same app (Chrome, VSCode, whatever), what is the easiest way to move all of them at once to another desktop?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1362/comments",
    "author": "carlosmiei",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-08-18T13:49:21Z",
        "body": "The following command should do it.  \r\nReplace `\"kitty`\" with `\"Google Chrome\"` or whatever the name of the application is, and the `1` in `--space 1` with the desktop number.\r\n\r\n`yabai -m query --windows | jq 'map(select(.app==\"kitty\") | .id) | join(\" \")' | tr -d '\"' | xargs -n1 -I{} yabai -m window {} --space 1`"
      },
      {
        "user": "carlosmiei",
        "created_at": "2022-08-18T14:21:08Z",
        "body": "@koekeishiya nice, thanks! \ud83d\ude42 "
      }
    ],
    "satisfaction_conditions": [
      "Solution must move all windows of a specified application to a target desktop",
      "Must work for any application name without code modification",
      "Must handle multiple windows simultaneously",
      "Must allow specifying destination desktop programmatically"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:05:51"
    }
  },
  {
    "number": 943,
    "title": "external_bar and native-fullscreen",
    "created_at": "2021-06-29T07:58:58Z",
    "closed_at": "2021-07-04T18:09:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/943",
    "body": "Is the external_bar option supposed work on spaces that have windows in native-fullscreen? The wiki does not have any indication that external_bar **applies only to spaces in which windows are either not fullscreen** or are **in zoom-fullscreen mode**.\r\n\r\nThis is what I'm trying to achieve - for my most frequently used apps, I use one space per app with each window in native-fullscreen mode. I want simple-bar to be visible at the bottom of each space, but currently it looks like this is not possible unless I use the windows in zoom-fullscreen. Is this correct? I am using v.3.3.8",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/943/comments",
    "author": "blink-twice",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-06-30T15:10:09Z",
        "body": "This is a restriction in macOS. When an application is in native-fullscreen space, the size is controlled by macOS and we have no way to say that we want to leave empty space as padding. \r\n\r\nIn general, it is not possible to show other applications/windows on a native-fullscreen space. Technically, there is a way to do this and the bar that used to be built into yabai (v2.x.x) did this, but I doubt simple-bar supports it as it utilizes \u00dcbersicht.\r\n\r\nRegardless, a native-fullscreen space is not something that we have control over."
      },
      {
        "user": "blink-twice",
        "created_at": "2021-07-04T18:09:59Z",
        "body": "Thank you for the confirmation! It would be great to have it clarified in the Wiki as well. "
      }
    ],
    "satisfaction_conditions": [
      "Clarification of macOS limitations regarding native-fullscreen spaces",
      "Documentation update about native-fullscreen behavior",
      "Explanation of native-fullscreen vs zoom-fullscreen differences"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:06:02"
    }
  },
  {
    "number": 741,
    "title": "Native window/desktop switching moves windows between spaces",
    "created_at": "2020-11-30T20:24:32Z",
    "closed_at": "2020-12-01T18:08:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/741",
    "body": "To reproduce this:\r\n\r\n1. Create multiple spaces.\r\n2. Keep an app like a browser in space 1\r\n3. Have another an app in space 8 (say, a text editor)\r\n4. Cmd+Tab to pick the browser\r\n5. This should trigger OSX's native desktop change animation to bring space 1 (and desktop 1) into focus\r\n6. The app has moved from space 8 to space 2. Other windows have moved spaces too (if I were to guess, they all moved one space to the right)\r\n\r\nFor step 3, I can avoid using cmd+tab, but this behavior is unavoidable when for example, clicking openable links that triggers the native desktop-switch animation to bring the browser into focus.\r\n\r\nBasically, it seems like the native desktop change animation is garbling the assignment of windows to spaces. Any way to fix this? I'd like the windows to be pinned to specific spaces unless I reassign them myself.\r\n\r\nI'm on yabai-v3.1.0 and on MacOS Catalina 10.15.7.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/741/comments",
    "author": "lalithsuresh",
    "comments": [
      {
        "user": "lalithsuresh",
        "created_at": "2020-11-30T20:28:31Z",
        "body": "Also reproducible on yabai-v3.3.4"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-01T08:26:11Z",
        "body": "Check this setting:\r\n\r\nIn the Mission Control preferences pane in System Preferences, the setting \"Automatically rearrange Spaces based on most recent use\" should be disabled for commands that rely on the ordering of spaces to work reliably."
      },
      {
        "user": "lalithsuresh",
        "created_at": "2020-12-01T18:08:22Z",
        "body": "That fixes it. Thanks!"
      }
    ],
    "satisfaction_conditions": [
      "Disables automatic space rearrangement triggered by application switching",
      "Preserves manual window-to-space assignments during focus changes",
      "Addresses macOS-level space management behavior"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:06:10"
    }
  },
  {
    "number": 731,
    "title": "disable SIP on big sur",
    "created_at": "2020-11-20T16:40:09Z",
    "closed_at": "2020-11-20T16:55:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/731",
    "body": "i use this command as per wiki\r\n\r\n```\r\ncsrutil disable --with kext --with dtrace --with nvram --with basesystem\r\n```\r\n\r\nhowever, `csrutil status` still give me this\r\n\r\n\r\n```\r\nSystem Integrity Protection status: unknown (Custom Configuration).\r\n\r\nConfiguration:\r\n        Apple Internal: disabled\r\n        Kext Signing: enabled\r\n        Filesystem Protections: disabled\r\n        Debugging Restrictions: disabled\r\n        DTrace Restrictions: enabled\r\n        NVRAM Protections: enabled\r\n        BaseSystem Verification: enabled\r\n\r\nThis is an unsupported configuration, likely to break in the future and leave your machine in an unknown state.\r\n```\r\n\r\nwhich seesm dtrace/nvram and basesystem restriction still enabled",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/731/comments",
    "author": "tuananh",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-20T16:53:36Z",
        "body": "yep, that means its working as intended. yabai only requires filesystem protections and debugging restrictions to be disabled.\u00a8\r\n\r\nEdit: the \"unsupported configuration\" warning can be safely ignored."
      },
      {
        "user": "tuananh",
        "created_at": "2020-11-20T16:55:08Z",
        "body": "Thanks!"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of which specific SIP components need to be disabled for the user's requirements",
      "Clarification that the 'unsupported configuration' warning can be safely ignored",
      "Differentiation between required vs optional SIP component states for the user's specific needs"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:06:16"
    }
  },
  {
    "number": 719,
    "title": "How to focus most recent window in a space after switching spaces",
    "created_at": "2020-11-15T23:19:05Z",
    "closed_at": "2020-11-16T16:18:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/719",
    "body": "After switching spaces I often have to manually focus a window in that space, which gets really annoying really quickly. Instead I'd like yabai to always focus the most recent window in the space I'm in. I tried the following commands in my skhdrc (here shown for spaces 1 and 2):\r\n\r\n```\r\nalt - 1 : yabai -m space --focus 1 && yabai -m window --focus \"$(yabai -m query --windows --space | jq .[0].id)\"\r\nalt - 2 : yabai -m space --focus 2 && yabai -m window --focus \"$(yabai -m query --windows --space | jq .[0].id)\"\r\n```\r\n\r\nbut those didn't seem to solve anything.\r\n\r\nBtw, I have `When switching to an application, switch to a Space with open windows for the application` unchecked in System Preferences -> Mission Control.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/719/comments",
    "author": "noib3",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-16T15:38:14Z",
        "body": "You can use the following signal(s):\r\n\r\n```\r\n# focus window after active space changes\r\nyabai -m signal --add event=space_changed action=\"yabai -m window --focus \\$(yabai -m query --windows --space | jq .[0].id)\"\r\n\r\n# focus window after active display changes\r\nyabai -m signal --add event=display_changed action=\"yabai -m window --focus \\$(yabai -m query --windows --space | jq .[0].id)\"\r\n```\r\n\r\nNo need to modify your focus binds."
      },
      {
        "user": "noib3",
        "created_at": "2020-11-16T16:18:50Z",
        "body": "Thanks, that solved it!"
      },
      {
        "user": "badloop",
        "created_at": "2023-02-14T15:04:03Z",
        "body": "For anyone still running into this issue, I found that Microsoft Teams was usurping the 0 spot in the window array on space that it had been seen on (Great job, Microsoft.... :-( ) I tend to have a single space for most of my windows that is labeled with the name of the application that will be open on it, so I wrote a little helper function using the above so that whenever I switch to a space, it will focus the window that has the same name as the space.  Hope this helps!\r\n\r\n```bash\r\nfocus_window () {\r\n    SPACE_NAME=$(yabai -m query --spaces --space | jq \".label\")\r\n    WINDOW_ID=$(yabai -m query --windows --space | jq \".[] | select (.app=${SPACE_NAME}).id\")\r\n    yabai -m window --focus \"${WINDOW_ID}\"\r\n}\r\n\r\n# focus window after active space changes\r\nyabai -m signal --add event=space_changed action=\"focus_window\"\r\n\r\n# focus window after active display changes\r\nyabai -m signal --add event=display_changed action=\"focus_window\"\r\n```\r\n"
      },
      {
        "user": "Arelav",
        "created_at": "2023-06-30T15:07:39Z",
        "body": "@koekeishiya Thanks a lot. \r\n> No need to modify your focus binds.\r\n\r\nI'll leave it here just in case it won't work for somebody as in my case. I had a floating MS Teams window and to make it work I changed it to `jq .[-1].id` to use a last window.\r\n"
      },
      {
        "user": "webavant",
        "created_at": "2024-04-04T22:04:52Z",
        "body": "Using a third-party tool, `synergy-core`, I had the same problem @badloop mentioned above. A working solution included selecting the first visible window using `jq`:\r\n\r\n```shell\r\nyabai -m signal --add event=space_changed action='yabai -m window --focus $(yabai -m query --windows --space | jq -r '\\''[.[]|select(.\"is-visible\")][0].id'\\'')'\r\n```"
      }
    ],
    "satisfaction_conditions": [
      "Automatically focuses a window when switching spaces/displays without manual interaction",
      "Reliably identifies the correct target window in the new space",
      "Works with yabai's event system rather than keybind modifications",
      "Allows customization of window selection criteria"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:06:41"
    }
  },
  {
    "number": 712,
    "title": "Focusing desktop not working on Big Sur",
    "created_at": "2020-11-13T00:59:12Z",
    "closed_at": "2020-11-13T16:21:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/712",
    "body": "Attempting to focus a desktop via `yabai -m window --space 2` does not work. I tried running `sudo yabai --load-sa` but the issue persists.\r\n\r\nEdit: To add, window shadows and opacity are also not working.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/712/comments",
    "author": "capaldo",
    "comments": [
      {
        "user": "marcusmyers",
        "created_at": "2020-11-13T03:48:20Z",
        "body": "When running the `sudo yabai --load-sa` I get the following error:\r\n\r\n```\r\ncould not retrieve task port for pid: 3849\r\nyabai: scripting-addition failed to inject payload into Dock.app!\r\n```\r\n\r\n@capaldo Is that what you receive as well?"
      },
      {
        "user": "SxC97",
        "created_at": "2020-11-13T03:54:37Z",
        "body": "I get the following error when running `sudo yabai --load-sa`\r\n\r\n```\r\ncould not load bootstrap object file\r\nyabai: scripting-addition failed to inject payload into Dock.app!\r\n```"
      },
      {
        "user": "chilledsaint0716",
        "created_at": "2020-11-13T07:37:38Z",
        "body": "Attempting to focus a desktop via `yabai -m space --focus 3` does not work either.\r\nI got the following error:\r\n`cannot focus space due to an error with the scripting-addition.`"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-11-13T08:48:52Z",
        "body": "Make sure sip is (partially) disabled, and reinstall the scripting-addition. check the wiki for installation instructions."
      },
      {
        "user": "chilledsaint0716",
        "created_at": "2020-11-13T10:05:50Z",
        "body": "sudo yabai --uninstall-sa\r\nsudo yabai --install-sa\r\nsudo yabai --load-sa\r\n\r\nfixed, thx bro."
      },
      {
        "user": "zakroma",
        "created_at": "2020-11-13T11:31:34Z",
        "body": "Reinstalling and reloading SA doesn't work for me. It does work until the reboot/logout. Then it doesnt work, trying the `sudo yabai --load-sa` results in \"Payload doesn't support this macOS version!\"\r\n\r\nReinstalling yabai and skhd does nothing too.\r\n\r\n**Update:**\r\nFor some reason `tail -f /usr/local/var/log/yabai/yabai.err.log` showed that there was an error in my .yabairc:\r\n`/Users/zakroma/.yabairc: line 1: !/usr/bin/env: No such file or directory`\r\n\r\nchanging `!/usr/bin/env sh` --> `#!/usr/bin/env zsh`\r\nhas completely fixed all the problems!"
      },
      {
        "user": "capaldo",
        "created_at": "2020-11-13T16:21:03Z",
        "body": "> Reinstalling and reloading SA doesn't work for me. It does work until the reboot/logout. Then it doesnt work, trying the `sudo yabai --load-sa` results in \"Payload doesn't support this macOS version!\"\r\n> \r\n> Reinstalling yabai and skhd does nothing too.\r\n> \r\n> **Update:**\r\n> For some reason `tail -f /usr/local/var/log/yabai/yabai.err.log` showed that there was an error in my .yabairc:\r\n> `/Users/zakroma/.yabairc: line 1: !/usr/bin/env: No such file or directory`\r\n> \r\n> changing `!/usr/bin/env sh` --> `!/usr/bin/env zsh`\r\n> has completely fixed all the problems!\r\n\r\nThis worked. Thank you @koekeishiya and @zakroma."
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T16:29:09Z",
        "body": "@capaldo That seems strange.\r\n\r\nThis ist a fresh Big Sur upgrade:\r\n`\u2570\u2500\u27a4  file /bin/sh\r\n\r\n/bin/sh: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64] [arm64e:Mach-O 64-bit executable arm64e]\r\n\r\n/bin/sh (for architecture x86_64):\tMach-O 64-bit executable x86_64\r\n/bin/sh (for architecture arm64e):\tMach-O 64-bit executable arm64e\r\n\r\n\u2570\u2500\u27a4  /usr/bin/env sh\r\n\r\nsh-3.2$\r\n`\r\nHowever, your shebang (#!) is missing the hash sign."
      },
      {
        "user": "capaldo",
        "created_at": "2020-11-13T16:32:22Z",
        "body": "> @capaldo That seems strange.\n> \n> \n> \n> This ist a fresh Big Sur upgrade:\n> \n> `\u2570\u2500\u27a4  file /bin/sh\n> \n> \n> \n> /bin/sh: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64] [arm64e:Mach-O 64-bit executable arm64e]\n> \n> \n> \n> /bin/sh (for architecture x86_64):\tMach-O 64-bit executable x86_64\n> \n> /bin/sh (for architecture arm64e):\tMach-O 64-bit executable arm64e\n> \n> \n> \n> \u2570\u2500\u27a4  /usr/bin/env sh\n> \n> \n> \n> sh-3.2$\n> \n> `\n> \n> However, your shebang (#!) is missing the hash sign.\n\nI added it with a hash sign.\n"
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T16:37:11Z",
        "body": "What gives \"file /bin/sh\" and \"/usr/bin/env sh\"?"
      },
      {
        "user": "zakroma",
        "created_at": "2020-11-13T16:55:20Z",
        "body": "> What gives \"file /bin/sh\" and \"/usr/bin/env sh\"?\r\n\r\nNot sure I got what you're asking, but I've changed mine to `#!/bin/zsh` as using the env tool resulted in errors."
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T16:58:06Z",
        "body": "Try to execute whats inside the quotes, as mine is working with #!/usr/bin/env sh"
      },
      {
        "user": "zakroma",
        "created_at": "2020-11-13T17:03:39Z",
        "body": "> Try to execute whats inside the quotes, as mine is working with #!/usr/bin/env sh\r\n\r\nResults in the same output that you mentioned above.\r\n\r\nAdding a proper shebang actually does fix the problem. "
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T17:05:06Z",
        "body": "\ud83d\udc4d"
      }
    ],
    "satisfaction_conditions": [
      "Ensure the yabai scripting-addition is properly installed and loaded",
      "Validate correct configuration file syntax (especially shebang lines)",
      "Verify System Integrity Protection (SIP) compatibility",
      "Provide error diagnosis through log inspection"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:06:50"
    }
  },
  {
    "number": 670,
    "title": "Switch space on currently focused monitor",
    "created_at": "2020-09-25T10:35:47Z",
    "closed_at": "2020-09-25T21:11:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/670",
    "body": "Hi, this is more of a question. I was wondering if it is possible to tell yabai to switch space based on where the mouse is?\r\n\r\nI have two monitors and I want to be able to use a shortcut to switch spaces based on where the mouse, like this:\r\n\r\n```\r\nyabai -m space --focus 2 --display mouse\r\n```\r\n\r\nUnfortunately `--display mouse` seems to move the mouse in the second space\r\n\r\nIs something like this possible?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/670/comments",
    "author": "patrick91",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-09-25T11:13:05Z",
        "body": "The following will focus the 2nd space on the display that has the mouse cursor.\r\n```\r\nyabai -m space --focus $(yabai -m query --displays --display mouse | jq -r '.spaces[1]') \r\n```\r\nAlternatively you can remove the mouse selector for it to default to the currently focused display (according to macOS):\r\n```\r\nyabai -m space --focus $(yabai -m query --displays --display | jq -r '.spaces[1]') \r\n``` \r\n\r\nThe command above will query information of the display that currently holds the mouse cursor (or the currently focused display), select the spaces list and return the value in the specified index of the array. The unfiltered output looks like this:\r\n```\r\n~ yabai -m query --displays --display mouse                                                                                                                                                     \r\n{\r\n        \"id\":69731904,\r\n        \"uuid\":\"F466F621-B5FA-04A0-0800-CFA6C258DECD\",\r\n        \"index\":1,\r\n        \"spaces\":[1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n        \"frame\":{\r\n                \"x\":0.0000,\r\n                \"y\":0.0000,\r\n                \"w\":1440.0000,\r\n                \"h\":900.0000\r\n}\r\n```"
      },
      {
        "user": "patrick91",
        "created_at": "2020-09-25T21:11:42Z",
        "body": "That's awesome, thank you! Works pretty well!"
      }
    ],
    "satisfaction_conditions": [
      "Solution must determine the target display based on mouse cursor position",
      "Space switching must occur on the display containing the mouse cursor without moving it"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:07:11"
    }
  },
  {
    "number": 606,
    "title": "Tooltips causing rapid relayouts",
    "created_at": "2020-07-09T06:40:06Z",
    "closed_at": "2020-07-10T05:21:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/606",
    "body": "This is perhaps related to #331 and #424 \r\n\r\nI've been using yabai for the last couple of weeks, and loving it. However, I notice that when mouse is hovering over some UI-layout, like the nav-bar in VS-Code, the windows starts flickering. Is this because yabai is trying to manage the tooltips as well? How would I ignore tooltips? I've tried the suggestions in the linked issues.\r\n\r\n```\r\nyabai-v3.2.1\r\n```\r\n\r\nHere is my config:\r\n\r\n```\r\n#!/usr/bin/env sh\r\n\r\n# bar settings\r\nyabai -m config top_padding 26\r\n# \r\n\r\n# borders (experimental 2020-06-13\r\n\r\nyabai -m config active_window_border_color 0xff06526D\r\nyabai -m config normal_window_border_color 0xff555555\r\nyabai -m config window_border on\r\nyabai -m config window_border_width 6\r\nyabai -m rule --add app=Terminal border=off\r\nyabai -m window --toggle border\r\n\r\n# global settings\r\nyabai -m config active_window_opacity 1.0\r\nyabai -m config active_window_opacity 1.0\r\nyabai -m config auto_balance on\r\nyabai -m config focus_follows_mouse off\r\nyabai -m config mouse_action1 move\r\nyabai -m config mouse_action2 resize\r\nyabai -m config mouse_follows_focus off\r\nyabai -m config mouse_modifier fn\r\nyabai -m config normal_window_opacity 0.9\r\nyabai -m config normal_window_opacity 0.90\r\nyabai -m config split_ratio 0.50\r\nyabai -m config window_opacity on\r\nyabai -m config window_opacity_duration 0.0\r\nyabai -m config window_placement second_child\r\nyabai -m config window_shadow on\r\nyabai -m config window_topmost off\r\n\r\n# general space settings\r\n#yabai -m config top_padding                  0\r\nyabai -m config bottom_padding 0\r\nyabai -m config layout bsp\r\nyabai -m config left_padding 0\r\nyabai -m config right_padding 0\r\nyabai -m config window_gap 0\r\n\r\n# window rules\r\n\r\n#yabai -m rule --add app=\"(System Preferences|Music|Finder|Parallels|LastPass|Jetbrains Toolbox)\" manage=off\r\n#yabai -m rule --add title=\".*\" manage=off\r\nyabai -m rule --add app=\"^(XCode|Alacritty|Brave Browser|Firefox|Teams|Airmail|Spark|Google Chrome|Safari|Slack|iTerm2|Goland|Code|WebStorm|GitKraken)$\" manage=on\r\nyabai -m rule --add title=\"^Opening .*$\" manage=off\r\n# yabai -m config debug_output on\r\n\r\n\r\nyabai -m rule --add app=\"(Alacritty|Brave|Firefox)\" space=3\r\nyabai -m rule --add app=\"(Code|WebStorm)\" space=2\r\nyabai -m rule --add app=\"(GitKraken)\" space=6\r\nyabai -m rule --add app=\"(GoLand)\" space=1\r\nyabai -m rule --add app=\"(Teams|Airmail|Spark)\" space=5\r\n\r\n# It is a bit annoying that this has to be managed manually\r\nyabai -m rule --add app=\"^Firefox$\" title=\"^Opening .*$\" manage=off       # Ignore dialogs in FireFox\r\nyabai -m rule --add app=\".*Brave.*\" title=\".*Media Files.*\" manage=off    # Ignore Medie Files on dokuwiki\r\nyabai -m rule --add app=\"Spark\" title!=\"Spark -.*\" manage=off             # Ignore all excepts Sparks main-window\r\nyabai -m rule --add app=\"WebStorm\" title=\"Preferences\" manage=off             # Ignore all excepts Sparks main-window\r\nyabai -m rule --add app=\"Electron\"  manage=off             # Ignore Electron-development-window\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/606/comments",
    "author": "runar-indico",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-09T06:50:09Z",
        "body": "This rule is the culprit: You're forcing _every_ window of those applications to be tiled, including tooltip windows. Using rules with `manage=on` is almost always wrong. The windows you want tiled should be tiled by default, even without the rule.\r\n\r\n```\r\nyabai -m rule --add app=\"^(XCode|Alacritty|Brave Browser|Firefox|Teams|Airmail|Spark|Google Chrome|Safari|Slack|iTerm2|Goland|Code|WebStorm|GitKraken)$\" manage=on\r\n```"
      },
      {
        "user": "runar-indico",
        "created_at": "2020-07-10T05:21:22Z",
        "body": "Nice, that worked. Thank you.\r\n\r\nI changed to these settings:\r\n\r\n```bash\r\nyabai -m rule --add app=\"(System Preferences|Music|Finder|Parallels|LastPass|Jetbrains Toolbox)\" manage=off\r\n```"
      }
    ],
    "satisfaction_conditions": [
      "Identify and resolve window management rules that incorrectly target transient UI elements like tooltips",
      "Provide a way to exclude non-primary windows (tooltips/dialogs) from being managed by yabai",
      "Prevent rapid layout recalculations caused by temporary windows",
      "Maintain proper window management for primary application windows while ignoring auxiliary elements"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:07:22"
    }
  },
  {
    "number": 542,
    "title": "Add ability to move between spaces while in Mission Control with \"fast focus desktop\" command.",
    "created_at": "2020-05-28T06:27:24Z",
    "closed_at": "2020-05-31T20:50:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/542",
    "body": "I have `ctrl + left|right` set to the `fast focus desktop` command, unfortunately this doesn't work while in Mission Control.\r\n\r\nIs it possible to add this feature? Perhaps just allow `fast focus desktop` to function as regular `move to left|right space` command while in Mission Control?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/542/comments",
    "author": "SxC97",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-05-29T13:33:33Z",
        "body": "Unlikely to happen, but if/when I get to fixing #181 this could be solved with a fallback definition in your skhd config or w/e hotkey mechansim you use."
      },
      {
        "user": "SxC97",
        "created_at": "2020-05-31T07:46:32Z",
        "body": "Would it be possible to use the `mission_control_enter` and `mission_control_exit` actions in Yabai to temporarily enable an skhd mode in which `ctrl + left|right` are remapped? "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-31T16:31:13Z",
        "body": "So apparently I'm just stupid. The particular case you are looking for has already been solved. If you try to focus a space using `space --focus` while inside mission-control, the command will fail with a non-zero exit code. You can set the space switching shortcuts in System Preferences > Keyboard > Mission Control > left/right to some combination you don't use; eg: `ctrl+cmd+alt+left|right`\r\n\r\nThen in your skhd config:\r\n```\r\nctrl - left : yabai -m space --focus prev || skhd -k \"ctrl + cmd + alt - left\"\r\nctrl - right : yabai -m space --focus next || skhd -k \"ctrl + cmd + alt - right\"\r\n```"
      },
      {
        "user": "SxC97",
        "created_at": "2020-05-31T20:50:50Z",
        "body": "This worked perfectly, thank you!"
      }
    ],
    "satisfaction_conditions": [
      "Enable seamless space switching with the same keyboard shortcut in both normal mode and Mission Control",
      "Provide fallback mechanism when native space focusing fails",
      "Maintain compatibility with system Mission Control shortcuts",
      "Work without modifying core functionality of Mission Control"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:07:35"
    }
  },
  {
    "number": 538,
    "title": "\"scripting-addition\" \"payload is not installed, some features will not work!\"",
    "created_at": "2020-05-25T02:28:27Z",
    "closed_at": "2020-05-25T14:36:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/538",
    "body": "Hello,\r\n\r\n> \"scripting-addition\r\n> payload is not installed, some features will not work!\"\r\n\r\nI keep getting this message after starting yabai. Do I need to fully disable SIP? I believe I followed all of the instructions correctly.\r\n\r\n1. Rebooted in cmd-R mode; `csrutil enable --without debug`\r\n2. Compiled and installed via brew\r\n3. `brew services start yabai`\r\n4. Added yabai to the accessibility whitelist \r\n5. `sudo yabai --install-sa`\r\n6. `brew services stop yabai`\r\n7. `brew services start yabai`\r\n\r\nI also can't get it to focus to different spaces. `yabai --check-sa` doesn't return anything. I've also restarted the computer a few times. Output from `csrutil status` is below.\r\n\r\nThank you, I'm excited to get yabai up and running!\r\n\r\nMacBook Pro (13-inch, Late 2011)\r\nMacOS High Sierra v10.13.6 (max version supported)\r\nyabai v3.0.2\r\nxCode v9.4.1\r\n```\r\n$ csrutil status\r\nSystem Integrity Protection status: enabled (Custom Configuration).\r\n\r\nConfiguration:\r\n    Apple Internal: disabled\r\n    Kext Signing: enabled\r\n    Filesystem Protections: enabled\r\n    Debugging Restrictions: disabled\r\n    DTrace Restrictions: enabled\r\n    NVRAM Protections: enabled\r\n    BaseSystem Verification: enabled\r\n\r\nThis is an unsupported configuration, likely to break in the future and leave your machine in an unknown state.\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/538/comments",
    "author": "occultrefuse",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-05-25T09:13:29Z",
        "body": "I don't actually have a High Sierra system to test on these days, but what I did in the past when I was running 10.13.6:\r\n\r\n1. Disable SIP completely. (Reboot into recovery, open terminal and type: `csrutil disable`)\r\n2. After rebooting, install the scripting addition: `sudo yabai --install-sa`. Verify that it installed correctly by checking the exit-code: `echo $?` should output 0. Double check that you now have a folder called `yabai.osax` in `/System/Library/ScriptingAdditions`.\r\n3. Reboot into recovery and reenable SIP, `csrutil enable`. (You can do this since you are still on High Sierra. Mojave and newer cannot reenable.)\r\n4. Reboot and everything should now be fine.\r\n5. If you need to update the scripting addition in the future (should get a notification saying it is out of date if an updated version of yabai has changes to the scripting addition), you need to repeat these steps.\r\n\r\n`yabai --check-sa` also does not output anything, but it sets the exit-code which you can check using `echo $?` as mentioned above. (exit-code 0 means it is up to date)."
      },
      {
        "user": "occultrefuse",
        "created_at": "2020-05-25T14:36:39Z",
        "body": "It seems that fully disabling the SIP fixed the issue! No more error message upon starting yabai, and the exit code (`echo $?`) after running `sudo yabai --install-sa` is  `0`. Before fully disabling SIP, it was `1`. \r\n\r\n`yabai.osax` is now in `/System/Library/ScriptingAdditions`.\r\n\r\nThank you!"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-26T11:18:32Z",
        "body": "I've edited the wiki instructions."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-05-26T12:40:40Z",
        "body": "For what it's worth, this most certainly is a user error."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-26T13:12:53Z",
        "body": "Maybe, I can't verify either way as I only have Catalina installed (and Mojave in a vm for 32bit support). I don't think it is a big deal as people on High Sierra should just re-enable SIP after installing anyway."
      },
      {
        "user": "sundevilyang",
        "created_at": "2021-11-07T13:54:55Z",
        "body": "> I don't actually have a High Sierra system to test on these days, but what I did in the past when I was running 10.13.6:\r\n> \r\n> 1. Disable SIP completely. (Reboot into recovery, open terminal and type: `csrutil disable`)\r\n> 2. After rebooting, install the scripting addition: `sudo yabai --install-sa`. Verify that it installed correctly by checking the exit-code: `echo $?` should output 0. Double check that you now have a folder called `yabai.osax` in `/System/Library/ScriptingAdditions`.\r\n> 3. Reboot into recovery and reenable SIP, `csrutil enable`. (You can do this since you are still on High Sierra. Mojave and newer cannot reenable.)\r\n> 4. Reboot and everything should now be fine.\r\n> 5. If you need to update the scripting addition in the future (should get a notification saying it is out of date if an updated version of yabai has changes to the scripting addition), you need to repeat these steps.\r\n> \r\n> `yabai --check-sa` also does not output anything, but it sets the exit-code which you can check using `echo $?` as mentioned above. (exit-code 0 means it is up to date).\r\n\r\nhey @koekeishiya  , I need your help , much thanks. The blowing is the info\r\n```shell\r\n> brew list koekeishiya/formulae/yabai --versions\r\nyabai 3.3.10\r\n> echo $?\r\n0\r\n> exa --icons /System/Library/ScriptingAdditions\r\n Digital Hub Scripting.osax   StandardAdditions.osax\r\n> sudo yabai --install-sa\r\nPassword:\r\n> exa --icons /System/Library/ScriptingAdditions\r\nDigital Hub Scripting.osax   StandardAdditions.osax\r\n> echo $?\r\n0\r\n> csrutil status\r\nSystem Integrity Protection status: disabled.\r\n```"
      },
      {
        "user": "marpes",
        "created_at": "2021-11-08T14:17:11Z",
        "body": "Since updating to macOS Monterey Version 12.0.1 I'm getting the same error every minute or so with yabai restarting even if I have disabled SIP completely.\r\n\r\n```\r\n$ csrutil status\r\nSystem Integrity Protection status: disabled.\r\n$ sudo yabai --check-sa\r\n$ echo $?\r\n1\r\n$ sudo yabai --uninstall-sa\r\n$ echo $?\r\n0\r\n$ sudo yabai --install-sa\r\n$ echo $?\r\n2\r\n$ brew list koekeishiya/formulae/yabai --versions\r\nyabai 3.3.10 HEAD-39b910b\r\n```"
      },
      {
        "user": "Liquidmantis",
        "created_at": "2021-11-08T15:12:44Z",
        "body": "@marpes see #923"
      }
    ],
    "satisfaction_conditions": [
      "Clear explanation of SIP requirements for scripting addition installation",
      "Verification method for successful scripting addition installation",
      "Resolution of feature limitations caused by missing payload",
      "Guidance on SIP re-enablement compatibility",
      "Troubleshooting for persistent installation failures"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:07:46"
    }
  },
  {
    "number": 496,
    "title": "Firefox picture-in-picture",
    "created_at": "2020-04-27T19:46:37Z",
    "closed_at": "2020-05-24T00:47:53Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/496",
    "body": "I've been using yabai for a while now, and I really love it. But I've run into an issue today, where after restarting my computer, yabai will not pick up and resize the picture-in-picture window when watching a video in Firefox. It's been working for me for at least a couple months, and now I can't get it to work.\r\n\r\nAny help is appreciated. Thanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/496/comments",
    "author": "willus10245",
    "comments": [
      {
        "user": "b4k3s",
        "created_at": "2020-05-11T03:07:26Z",
        "body": "I noticed this too. Are you using Nightly? It seems that Mozilla has changed the way that the OS should observe the PIP window because for me, the regular Firefox still tiles the PIP video as it did before. After messing around with it for a few minutes, I have found that simply telling yabai to tile the application manually corrected the problem on my system, so I offer my solution to you. Just add the following to your yabairc:\r\n\r\n`yabai -m rule --add app=\"^Firefox Nightly$\" manage=on`\r\n\r\nThere are a few strange behaviors with this though. First, yabai sometimes, though rarely, tries to tile the PIP video's browser window even if it is minimized, leaving a gap where yabai thinks the window ought to be. I'm assuming this is probably because it is an \"extension\" of the window rather than its own separate browser window. Second, the PIP window tends to move to the focused space, even if you attempt to add `sticky=off` to the rule. This isn't a problem for me personally, but I thought I'd mention it.\r\n\r\nHope this helps."
      },
      {
        "user": "willus10245",
        "created_at": "2020-05-11T12:19:49Z",
        "body": "That worked. Thanks so much! I'm actually using Firefox Developer Edition. Idk how the release cadence differs from regular Firefox, but I'd imagine it's probably closer to Nightly"
      },
      {
        "user": "b4k3s",
        "created_at": "2020-05-11T22:35:57Z",
        "body": "Happy to help! Correct. The Dev Edition and Nightly are very similar. Both receive features months ahead of the regular Firefox. Nightly just gets daily updates."
      },
      {
        "user": "nicola",
        "created_at": "2020-06-21T20:27:19Z",
        "body": "having trouble to make the picture in picture window to not follow the yabai tiling. Any suggestion?"
      },
      {
        "user": "johnallen3d",
        "created_at": "2020-07-15T17:36:03Z",
        "body": "Hello @nicola, if I understand your question correctly, I think you're looking for the following rule:\r\n\r\n```sh\r\nyabai -m rule --add label=\"Firfox PIP\" app=\"^Firefox$\" title=\"^(Picture-in-Picture)$\" manage=off\r\n```\n\n---\n\nI came here with a slightly different question/problem. I have the Firefox PIP window \"un-managed\" and that works great. However, (I'm guessing) because it's always-on-top, whenever I jump to a space that has the PIP window present it becomes the focused window. Further, since it's not managed, I can't simply use my binding to navigate (east/west etc). There's probably no way around this but I thought I'd throw it out there in case someone else has a clever solution that I'm overlooking."
      }
    ],
    "satisfaction_conditions": [
      "Solution must ensure yabai recognizes and manages Firefox's picture-in-picture window",
      "Approach must handle variations in Firefox versions (Nightly/Developer Edition/Regular)",
      "Must address unexpected window management side effects",
      "Solution should allow control over window management without breaking picture-in-picture functionality"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:08:08"
    }
  },
  {
    "number": 469,
    "title": "Sluggish on Chromium-based browser (when immediately switching to another tab after opening a new tab)",
    "created_at": "2020-04-03T03:23:51Z",
    "closed_at": "2020-04-14T21:18:03Z",
    "labels": [
      "question",
      "performance"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/469",
    "body": "Hi,\r\nI have been experiencing this issue for a long time when using yabai. \r\n\r\nThe thing is: in Chrome, open a new tab by clicking the \"+\" button and then **immediately** click the tab next to it on its left. There is a significant delay to switch to that tab (around 1\\~2 seconds). Also, similarly, after I open a new tab, I immediately click the \"x\" button of the tab next to it instead of the tab itself, this tab will be closed after 1~2 seconds. \r\n\r\nHowever, if I stop the yabai service (by running `brew services stop yabai`), the issue I described above is gone and the smooth is back. \r\n\r\nExcept for Chrome, I have tried other Chromium-based browsers such as Brave, and all of them have the same issue. I also tried Firefox and Safari but both of them performed very well as normal. \r\n\r\nI don't know how to investigate the source of this issue. Please do me a favor. Thank you very much.\r\n\r\nyabai version: the latest\r\nmacOS: 10.15.3 (the latest)",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/469/comments",
    "author": "rockyzhang24",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-04-03T14:59:34Z",
        "body": "So this appears to be happening because Chrome sends a ton of *window title changed* notifications, which causes yabai to trigger a status bar update (for every window title changed notification reported), which is a bit of an expensive operation (and it performs a couple of AX calls to the focused application - Chrome in this case):\r\n\r\n```\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\n```\r\n\r\nAfter disabling the status bar I could no longer reproduce this issue."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-04-03T18:51:00Z",
        "body": "Okay, I see. Thank you so much to make me clear. Is there some approach to solve this except for totally disabling the status bar? Is it possible to add a config to toggle between showing the window title on the status bar or not? \r\n\r\nBTW, which browser are you using now? \r\n\r\nThanks!!!"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-04-03T19:58:17Z",
        "body": "I mostly use Safari. Sometimes I'll use Chrome, but I interact mostly using keyboard shortcuts (for creating, closing and moving between tabs), so I don't really experience this slowdown."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-04-03T20:07:11Z",
        "body": "Got it. Thank you. "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-04-14T16:16:12Z",
        "body": "Think I found a way to solve this issue (ref #376). Please try the latest master."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-04-14T20:14:32Z",
        "body": "@koekeishiya Bingo!! It seems this issue is totally solved. I tested using Chrome and other Chromium-based browsers (Brave and Chromium). All of them were very smooth when I tried to reproduce this issue. Not sluggish at all when I open a new tab and immediately try to close a previous tab. Good job!\r\n\r\nThank you so much for your effort and make our life easier. :P"
      }
    ],
    "satisfaction_conditions": [
      "Eliminates the 1-2 second delay when switching tabs or closing adjacent tabs in Chromium-based browsers while yabai is running",
      "Maintains status bar functionality while handling Chrome's window title change events efficiently",
      "Addresses performance impact from Chrome's frequent window title change notifications",
      "Works across all Chromium-based browsers (Chrome, Brave, etc.)",
      "Does not require users to change their browser interaction patterns"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:08:17"
    }
  },
  {
    "number": 367,
    "title": "config --space do not work correctly with external monitor",
    "created_at": "2020-01-17T15:04:55Z",
    "closed_at": "2020-01-20T09:53:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/367",
    "body": "Hi, \r\n\r\nthe `--space` option in the .yabai config file seems to ignore spaces on a second monitor and mess with space numbers.\r\n\r\nWith the following configuration, the 120 padding is applied to the screen named \"Desktop 1\" in mission control. I tried to change the value after the --space option but the screens on the external monitor seems to be out of reach.\r\n\r\n ```\r\nyabai -m config layout                       bsp\r\nyabai -m config top_padding                  50\r\nyabai -m config bottom_padding               50\r\nyabai -m config left_padding                 50\r\nyabai -m config right_padding                50\r\nyabai -m config window_gap                   20\r\n\r\nyabai -m config --space 2 top_padding     120\r\nyabai -m config --space 2 bottom_padding  120\r\nyabai -m config --space 2 left_padding    200\r\nyabai -m config --space 2 right_padding   200\r\nyabai -m config --space 2 window_gap      50\r\n```\r\n\r\n```\r\nExternal Monitor:\r\n[Fullscreen App] - [Fullscreen App] - [Desktop 3]\r\n\r\nMacbook screen:\r\n[Fullscreen App] - [Desktop 1] - [Desktop 2]\r\n```\r\n\r\nOS: Catalina 10.15.1\r\n\r\n\u26a0\ufe0f The System Integrity Protection is not disabled on my computer.\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/367/comments",
    "author": "Morniak",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-01-18T12:05:23Z",
        "body": "yabai counts Fullscreen App spaces, because it is necessary/useful to interact with them for other purposes. The index is then simply increased by 1 for each space.\r\n\r\n\r\n```\r\nExternal Monitor:\r\n[Fullscreen App] (space 4) - [Fullscreen App] (space 5) - [Desktop 3] (space 6)\r\n\r\nMacbook screen:\r\n[Fullscreen App] (space 1) - [Desktop 1] (space 2) - [Desktop 2] (space 3)\r\n```"
      },
      {
        "user": "Morniak",
        "created_at": "2020-01-20T09:53:09Z",
        "body": "Coming from chunkwm I was not expecting this behavior. \r\nThanks for the answer \ud83d\udc4d  "
      }
    ],
    "satisfaction_conditions": [
      "Explanation of how yabai's space numbering works across multiple monitors",
      "Clarification of how external monitor spaces are indexed relative to primary display",
      "Recognition of differences from chunkwm's behavior"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:08:34"
    }
  },
  {
    "number": 326,
    "title": "Float the next window going to be opened",
    "created_at": "2019-11-29T05:04:45Z",
    "closed_at": "2019-11-29T12:44:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/326",
    "body": "I used the following to open iTerm in floating mode (only when I wanted to) - in chunkwm\r\n``` \r\n cmd  - return      : chunkc set window_float_next 1; /Applications/iTerm.app/Contents/MacOS/iTerm2 \r\n```\r\nHow can I implement an equivalent in yabai wm. The following didn't work (the new window remains titled)\r\n``` \r\ncmd  - return      : /Applications/iTerm.app/Contents/MacOS/iTerm2 ;\\\r\n       \t\t     yabai -m window --toggle float \r\n```\r\nWhat am I missing? Sorry, if it has already been addressed/answered and that I didn't search properly.\r\nAny help is highly appreciated.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/326/comments",
    "author": "jack836",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T05:38:08Z",
        "body": "What you're missing with your second approach is that you're toggling float on the focused window, which isn't iTerm2 if you've just opened it.\r\n\r\nSomething like this works pretty well:\r\n\r\n```sh\r\nyabai -m signal --add label=float_next app='^iTerm2$' event=window_created action='yabai -m signal --remove float_next; yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n```\r\n\r\nNote that the `event=window_created` signal doesn't trigger when windows are _restored_ when an application launches, so the logic would need to be adapted for this to also works for restored windows."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T06:54:44Z",
        "body": "Thank you @dominiklohmann  for quickly putting up a solution.\r\n\r\nI tested it on my machine, adding the above line to yabairc.\r\nWhen I fire-up a new iTerm2, it fails to float and gets tiled (it also appears that the window gets floated for a fraction of a second at start, but then falls back to be tiled immediately). I have no other rules/signals set for iTerm2. I killed all iTerm2 windows, restarted yabai etc, but nothing worked. It feels as if it's getting overridden by some other setting?\r\n\r\n[Update]  It has to do something with the way I launch iTerm2. When I launch iTerm through Launchpad --> iTerm2 OR  iTerm2-Menu --> Shell --> New Window; then the newly spanned iTerm2 window actually FLOATS. So, wondering what's wrong doing the same through shkd using \r\n`cmd  - return      : /Applications/iTerm.app/Contents/MacOS/iTerm2 `"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T07:06:25Z",
        "body": "I explained that caveat above.\r\n\r\n> Note that the `event=window_created` signal doesn't trigger when windows are _restored_ when an application launches, so the logic would need to be adapted for this to also works for restored windows.\r\n\r\nYou'll have to hook into `event=application_launched`, which carries `$YABAI_PROCESS_ID`, which can then be turned into a set of window ids on start.\r\n\r\nSomething like this (off the top of my head, this is not battle-tested):\r\n\r\n```sh\r\n# trigger on window_created\r\nyabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n\r\n# trigger on application_launched\r\nyabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float'\r\n```\r\n\r\nYes, this workaround is ugly. And no, there is no unified window_spawned event that does this for you.\r\n\r\nTo make this really robust you'd also need to check whether the target windows are not already floating."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T07:11:39Z",
        "body": "Thank you again.\r\n@dominiklohmann I did update my previous comment - in case you missed it ...\r\n[Update] It has to do something with the way I launch iTerm2. When I launch iTerm through Launchpad --> iTerm2 OR iTerm2-Menu --> Shell --> New Window; then the newly spanned iTerm2 window actually FLOATS. So, wondering what's wrong doing the same through shkd using\r\ncmd - return : /Applications/iTerm.app/Contents/MacOS/iTerm2\r\n\r\nBTW,  I am not trying to restore a window that is already created. I believe I am spawning a new window always (let me know if that is not the case). Thank you again."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T07:17:37Z",
        "body": "I did read your update, and I think you're still misunderstanding the difference between _restored_ windows and _created_ windows on a semantic level.\r\n\r\nWhen an application first launches, the windows opened by it are _restored_. They do not trigger an `event=window_created` signal, but rather an `event=application_launched` signal. Note that this can be multiple windows at the same time, which is why the signal carries a process id, and you need to do an additional query to get all windows that belong to that process id.\r\n\r\nOpening additional windows _creates_ them. These do trigger `event=window_created`, but not `event=application_launched`. This is always just a single window, which is why this signal carries the window id directly."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T07:28:19Z",
        "body": "Thank you for the explanation and being very helpful. I think I got the point this time. \r\n\r\nSo, now I am trying to think if it is possible to replicate process involved in doing (clicking)`Launchpad --> iTerm2 OR iTerm2-Menu --> Shell --> New Window` using an apple-script (then trigger it from shkd). I  am not good in apple-script either and hence could not think of a possibility.\r\n\r\nSorry, if I again missed/mis-understood some thing. Thank you for being considerate and helpful."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T07:57:13Z",
        "body": "The easiest is just to create triggers for both signals as I've shown above:\r\n\r\n> ```shell\r\n> # trigger on window_created\r\n> yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n> \r\n> # trigger on application_launched\r\n> yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float'\r\n> ```\r\n\r\nE.g., in your .skhdrc:\r\n\r\n```sh\r\n cmd - return : \\\r\n    yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float' ; \\\r\n    yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float' ; \\\r\n    /Applications/iTerm.app/Contents/MacOS/iTerm2 \r\n```\r\n\r\nObviously you could replace the way you open iTerm2 with some sophisticated AppleScript, but that's out of scope for this issue."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T10:55:32Z",
        "body": "I did add the above lines to my .skhdrc for a quick test, but the spanned iTerm2 windows again failed to float.\r\nReading those lines I am convinced that it should float the next spawned window, but didn't. May be I am still missing/mis-understanding something.... Hope someone successfully gets it to work.\r\n\r\nI sincerely appreciate all the efforts of @dominiklohmann "
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T11:02:32Z",
        "body": "I've simply pasted what's below into my skhdrc and it works. Only thing I've exchanged is how I open iTerm2.\r\n\r\n```\r\n cmd - return : \\\r\n    yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float' ; \\\r\n    yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float' ; \\\r\n    osascript -e 'tell application \"iTerm2\" to create window with default profile command \"\"' || open -b com.googlecode.iTerm2\r\n```\r\n\r\nAs a sidenote, I am not convinced that <kbd>cmd</kbd> + <kbd>return</kbd> is a good shortcut, since that actually overrides system functionality (confirm input/form while still in a text field of that input/form). For example, I can send the issue reply I am currently writing by pressing <kbd>cmd</kbd> + <kbd>return</kbd> without leaving the text field."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T11:15:56Z",
        "body": "I tried with your last script and it WORKED ! Yes, the new iTerm window did FLOAT this time.\r\nWhen I went back again to `/Applications/iTerm.app/Contents/MacOS/iTerm2 ` , it didn't work.\r\nSo, Yes the way you open iTerm2 really matters here (at-least for me).\r\n\r\nAnyway, happy to have a nice feature (that I missed for quite a while). Thanks to the command-line wizardry of @dominiklohmann "
      }
    ],
    "satisfaction_conditions": [
      "Handle both application_launched and window_created events for iTerm2",
      "Ensure window float state persists without being overridden",
      "Work with different application launch methods",
      "Automatically clean up signal listeners after execution",
      "Explain the distinction between restored and created windows"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:08:39"
    }
  },
  {
    "number": 198,
    "title": "Support for After Effects",
    "created_at": "2019-08-06T17:06:54Z",
    "closed_at": "2019-08-19T09:18:39Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/198",
    "body": "Would it be possible to add support for After Effects? Some of the Creative Cloud apps (e.g. Illustrator, Indesign) are already managed by yabai but After Effects is not.\r\n\r\n### window information:\r\n```\r\n{\r\n\t\"id\":4960,\r\n\t\"pid\":41041,\r\n\t\"app\":\"Adobe After Effects CC 2018.3 (15.1.2)\",\r\n\t\"title\":\"Adobe After Effects CC 2018 - Unbenanntes Projekt\",\r\n\t\"frame\":{\r\n\t\t\"x\":222.0000,\r\n\t\t\"y\":186.0000,\r\n\t\t\"w\":3440.0000,\r\n\t\t\"h\":1440.0000\r\n\t},\r\n\t\"level\":0,\r\n\t\"role\":\"AXWindow\",\r\n\t\"subrole\":\"AXFloatingWindow\",\r\n\t\"movable\":1,\r\n\t\"resizable\":1,\r\n\t\"display\":1,\r\n\t\"space\":2,\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"split\":\"none\",\r\n\t\"floating\":1,\r\n\t\"sticky\":0,\r\n\t\"border\":0,\r\n\t\"zoom-parent\":0,\r\n\t\"zoom-fullscreen\":0,\r\n\t\"native-fullscreen\":0\r\n},{\r\n\t\"id\":3056,\r\n\t\"pid\":14564,\r\n\t\"app\":\"Adobe Illustrator CC 2018\",\r\n\t\"title\":\"Unbenannt-1* bei 150 % (RGB/GPU-Vorschau) \",\r\n\t\"frame\":{\r\n\t\t\"x\":0.0000,\r\n\t\t\"y\":0.0000,\r\n\t\t\"w\":3440.0000,\r\n\t\t\"h\":1440.0000\r\n\t},\r\n\t\"level\":0,\r\n\t\"role\":\"AXWindow\",\r\n\t\"subrole\":\"AXStandardWindow\",\r\n\t\"movable\":1,\r\n\t\"resizable\":1,\r\n\t\"display\":1,\r\n\t\"space\":2,\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"split\":\"none\",\r\n\t\"floating\":0,\r\n\t\"sticky\":0,\r\n\t\"border\":0,\r\n\t\"zoom-parent\":0,\r\n\t\"zoom-fullscreen\":0,\r\n\t\"native-fullscreen\":0\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/198/comments",
    "author": "hrvstr",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2019-08-17T12:18:33Z",
        "body": "Does `yabai -m rule --add app=\"Adobe After Effects CC 2018.3 (15.1.2)\" manage=on` not work?"
      },
      {
        "user": "hrvstr",
        "created_at": "2019-08-19T08:32:25Z",
        "body": "No, does not seem to have any effect."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-08-19T09:09:42Z",
        "body": "That's because the regex is invalid, you need to escape both parantheses."
      },
      {
        "user": "hrvstr",
        "created_at": "2019-08-19T09:17:51Z",
        "body": "Yes, now it is working. Thanks!\r\n\r\n`yabai -m rule --add app=\"Adobe After Effects CC *\" manage=on`\r\n\r\nI now added this rule to make it update proof."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-08-19T09:19:45Z",
        "body": "Just `app=\"^Adobe After Effects CC\"` should be sufficient. `^` denotes the start of the line, and yabai looks for partial matches anyways. The star you added doesn't mean \"anything after this\" but instead denotes \"whatever character was before this, repeated any times (or 0 times)\"."
      }
    ],
    "satisfaction_conditions": [
      "Solution must address regex pattern matching requirements for Adobe application names",
      "Solution must account for version variations in Adobe application names",
      "Explanation of regex syntax requirements for yabai rules",
      "Must enable window management parity between After Effects and other Adobe apps"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:08:55"
    }
  },
  {
    "number": 687,
    "title": "Empty space does not get focused",
    "created_at": "2020-10-13T01:40:06Z",
    "closed_at": "2020-12-18T15:38:07Z",
    "labels": [
      "help wanted",
      "undetermined"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/687",
    "body": "I have disabled the desktop because I don't use it, and its just cludder. It causes a weird issue with focus on empty spaces on multi monitors. If I jump to an empty space yabai focuses a window on my other monitor. This causes issues where I cannot refocus the empty space. Note this is only an issue when I want to remove an empty space. My workaround is to move a window to the space and delete the space that way.\r\n```\r\n# TO DISABLE DESKTOP\r\ndefaults write com.apple.finder CreateDesktop -bool false\r\nkillall Finder\r\n\r\n# TO ENABLE DESKTOP\r\ndefaults write com.apple.finder CreateDesktop -bool true\r\nkillall Finder\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/687/comments",
    "author": "brorbw",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-10-17T10:46:58Z",
        "body": "Do you get this bug with desktop enabled, but simply having nothing on it? Is there a reason why that is not a feasible solution for you? I suspect whatever this command is doing, interferes with how we can focus monitors, because we need to do so by actually focusing the invisible finder desktop window, if  no windows are currently visible. There is no API call to simply focus a monitor or space itself."
      },
      {
        "user": "brorbw",
        "created_at": "2020-10-17T14:43:46Z",
        "body": "Yes, the bug only happens when the desktop is disabled but the command only disables icons and desktop, and I'm not sure how that impacts the way spaces are focused"
      },
      {
        "user": "WesleyYue",
        "created_at": "2020-12-06T03:38:06Z",
        "body": "@koekeishiya I have a similar problem here in that I cannot do a \"move window to next space and focus on next space\" command in a multi-monitor setup when there is only one window left in the space. When I try, the window will be moved to the next space, but since there is nothing left in the space, the focus is immediately stolen by my second monitor such that when the \"focus on next space\" command occurs, it is switching the space in my other monitor.\r\n\r\nIt seems like the best solution for my issue at least is an atomic command that does both the moving and focusing in one instruction."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-12-11T14:41:22Z",
        "body": "Not sure if this can be considered an issue. I think documenting this as unsupported should be enough."
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-12T18:10:42Z",
        "body": "@dominiklohmann by that reasoning most bugs could be labelled as unsupported"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-12-12T18:22:18Z",
        "body": "If you run this command and use multiple displays you cannot even focus the display without yabai if there are no other windows on it. The reason is quite simple: The command stops the Dock from creating the Desktop window, and if there is no window on a display, it also cannot be focused. The command you're using here isn't documented anywhere as far as I can tell."
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-15T13:11:35Z",
        "body": "@dominiklohmann you are absolutely right - but I don't see why this isn't an issue that can be fixed inside yabai.\r\n\r\nEdit: A simple solution would be to create an invisible window on each space"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-18T15:25:39Z",
        "body": "Why do you need to run this command. Can't you just not utilise the desktop; what's the difference?\r\n\r\nCreating and managing an invisible window on each space is not actually as trivial as you make it seem, and complexity like this quickly snowballs if we are to support weird quirks (not just this one in particular, but a line has to be drawn at some point).\r\n\r\nThere are also other issues such as the user manipulating spaces through either mission-control or alternative software that we have no way of interacting with, thus, making our invisible window solution go out of sync. You can argue that this is an edge-case, but my point is simply that for the software to be robust and work well in a consistent manner, such solutions are not something I opt to implement without a very good reason."
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-18T15:38:05Z",
        "body": "This is an egde case, but screenshots etc end up on the desktop and there is afaik no workaround. \r\n\r\nI have no issues with this being unsupported or drawing a line somewhere. The point of the software working in a consistent way does however negate the argument for not implementing a system to handle the oddballs. I'm very pleased with yabai and appreciate the time and effort everyone puts into it. I merely pointed out an observed bug/odd behaviour and wanted to investigate. I off work for Christmas and might look into a solution of using the mouse to focus the monitor. \r\n\r\nMerry Christmas \ud83c\udf84 "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-18T15:42:16Z",
        "body": "@brorbw \r\n\r\nIf someone can come up with a robust solution for supporting this, then I will happily implement that. The issue I have is implementing workarounds that aren't fully robust solutions, that just snowballs the complexity for something that only solves the issue when particular assumptions are true. If you want to try and investigate this further I am open for suggestions.\r\n\r\nHappy Christmas \u2603\ufe0f"
      },
      {
        "user": "24unix",
        "created_at": "2020-12-19T18:45:36Z",
        "body": "@brorbw \r\n\r\nyou can use \r\ndefaults write com.apple.screencapture location <mylocation>\r\n\r\n"
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-20T13:39:56Z",
        "body": "@24unix that totally solves the issue"
      }
    ],
    "satisfaction_conditions": [
      "Solution allows managing empty spaces without requiring the desktop to be enabled",
      "Addresses screenshot/file management without desktop clutter",
      "Works consistently in multi-monitor setups with empty spaces",
      "Does not require complex window management workarounds"
    ],
    "_classification": {
      "category": "Requires build environment but hard to be dockerized",
      "timestamp": "2025-04-05 00:09:03"
    }
  }
]