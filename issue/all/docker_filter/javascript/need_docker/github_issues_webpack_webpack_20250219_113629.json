[
  {
    "number": 12925,
    "title": "Compiled app doesn't start",
    "created_at": "2021-03-18T01:44:48Z",
    "closed_at": "2021-03-22T16:29:45Z",
    "labels": [
      "question",
      "webpack-5"
    ],
    "url": "https://github.com/webpack/webpack/issues/12925",
    "body": "<!-- Please don't delete this template because we'll close your issue -->\r\n<!-- Before creating an issue please make sure you are using the latest version of webpack. -->\r\n\r\n# Bug report\r\n\r\nI've been trying to understand this all day. If I specify `runtimeChunk`, and (maybe?) it gets minified my app doesn't start. If I comment out `runtimeChunk` my app starts. The sources all look okay and are loading, but the entry point doesn't exec.\r\n\r\n**What is the current behavior?**\r\nBlank screen after build.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce.**\r\n\r\nI've been trying to isolate this but haven't yet. I'm sorry. I just wanted to get this out there hoping someone else has ideas.\r\n\r\n**What is the expected behavior?**\r\nthe entry point should execute.\r\n\r\n**Other relevant information:**\r\nwebpack version:  5.26.3\r\nNode.js version: 15.12.0\r\nOperating System: linux\r\nAdditional tools:\r\n",
    "comments_url": "https://api.github.com/repos/webpack/webpack/issues/12925/comments",
    "author": "jsg2021",
    "comments": [
      {
        "user": "alexander-akait",
        "created_at": "2021-03-18T12:15:27Z",
        "body": "Sorry, information is not enough to help you, maybe you forget to add something to your HTML file"
      },
      {
        "user": "vadimka123",
        "created_at": "2021-03-18T12:49:22Z",
        "body": "I has same problem on rebuild on watch mode or build when not have previous build \r\nProblem started after upgrade to 5.26.0, in version 5.25.1 all working fine "
      },
      {
        "user": "alexander-akait",
        "created_at": "2021-03-18T12:50:26Z",
        "body": "@vadimka123 Maybe you can create example?"
      },
      {
        "user": "vadimkuragkovskiy",
        "created_at": "2021-03-18T13:14:17Z",
        "body": "hey Guys, \r\n\r\nI'm using MacOS and also have similar issue. My teammates don't have it on linux. \r\n\r\nSo we upgraded our webpack to the version `\"webpack\": \"5.26.3\"` and the initial build is ok but the rebuild is broken. \r\n\r\nHere is command \r\n```\r\nwebpack --progress --watch --mode development\r\n```\r\n\r\nwhen I apply some changes to the file, my webpack does rebuild automatically and I'm getting blank screen without any errors in console. \r\n\r\nHow I fixed this issue temporary. I reverted my webpack to the version \"webpack\": \"5.25.1\" and on this version everything works well. Perhaps 5.26.0 works also fine, I just didn't check that.\r\n\r\n\r\nwebpack config looks like\r\n```js\r\nmodule.exports = {\r\n\tmode: NODE_ENV,\r\n\tentry: ['./app/App.jsx'],\r\n\toutput: {\r\n\t\tpath: buildDir,\r\n\t\tfilename: DEBUG_ON ? '[name].[fullhash].js' : '[name].[contenthash].js',\r\n\t\tpublicPath: cdn_url + '/build/',\r\n\t},\r\n\twatchOptions: {\r\n\t\tignored: /node_modules/,\r\n\t\taggregateTimeout: 300,\r\n\t},\r\n\tplugins: plugins,\r\n\tdevtool: DEBUG_ON ? 'eval-source-map' : 'source-map',\r\n\tresolve: {\r\n\t\talias: {\r\n\t\t\tringlead_utils: path.resolve(__dirname, 'app/utils'),\r\n\t\t},\r\n\t\textensions: ['.js', '.jsx'],\r\n\t\tfallback: { url: false },\r\n\t},\r\n\toptimization: {\r\n\t\truntimeChunk: 'single',\r\n\t\tsplitChunks: {\r\n\t\t\tautomaticNameDelimiter: '.',\r\n\t\t\tchunks: 'all',\r\n\t\t\tmaxAsyncRequests: 10,\r\n\t\t\tmaxInitialRequests: 10,\r\n\t\t\tcacheGroups: {\r\n\t\t\t\tdefaultVendors: {\r\n\t\t\t\t\treuseExistingChunk: true,\r\n\t\t\t\t\tenforce: true,\r\n\t\t\t\t},\r\n\t\t\t\tmain: {\r\n\t\t\t\t\treuseExistingChunk: true,\r\n\t\t\t\t\ttest: /[\\\\/]app[\\\\/]/,\r\n\t\t\t\t},\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tminChunks: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmodule: {\r\n\t\trules: [\r\n\t\t\t{\r\n\t\t\t\ttest: /\\.jsx?$/,\r\n\t\t\t\texclude: /(node_modules|bower_components)/,\r\n\t\t\t\tuse: {\r\n\t\t\t\t\tloader: 'babel-loader',\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tpresets: [\r\n\t\t\t\t\t\t\t['@babel/env', { targets: '> 0.25%, not dead' }],\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'@babel/preset-react',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\truntime: 'automatic',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tplugins: [\r\n\t\t\t\t\t\t\t['@babel/plugin-proposal-decorators', { legacy: true }],\r\n\t\t\t\t\t\t\t'@babel/plugin-proposal-class-properties',\r\n\t\t\t\t\t\t\t'@babel/plugin-syntax-dynamic-import',\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'@babel/plugin-transform-classes',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tloose: true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t'@babel/plugin-transform-computed-properties',\r\n\t\t\t\t\t\t\t'@babel/plugin-transform-shorthand-properties',\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttest: /\\.css$/i,\r\n\t\t\t\texclude: [path.resolve(__dirname, 'node_modules/react-phone-input-2/lib/style.css')],\r\n\t\t\t\tuse: [DEBUG_ON ? 'style-loader' : MiniCssExtractPlugin.loader, 'css-loader'],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttest: /\\.css$/i,\r\n\t\t\t\tinclude: [path.resolve(__dirname, 'node_modules/react-phone-input-2/lib/style.css')],\r\n\t\t\t\tuse: ['style-loader', 'css-loader'],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n};\r\n```\r\n\r\npackage.json config (removed couple private things):\r\n\r\n```js\r\n\r\n{\r\n\t\"name\": \"\",\r\n\t\"description\": \"\",\r\n\t\"version\": \"2.0.0\",\r\n\t\"scripts\": {\r\n\t\t\"build\": \"NODE_ENV=production webpack --progress --mode production\",\r\n\t\t\"watch\": \"webpack --progress --watch --mode development\",\r\n\t\t\"watch-analyze\": \"webpack --progress --watch --display-modules\",\r\n\t\t\"analyze\": \"webpack --progress --json --display-modules | webpack-bundle-size-analyzer\",\r\n\t\t\"build-win\": \"NODE_ENV=production webpack --progress --mode production\",\r\n\t\t\"watch-win\": \"webpack --progress --watch\",\r\n\t\t\"test\": \"webpack\",\r\n\t\t\"eslint\": \"node_modules/.bin/eslint --ext .jsx,.js,.json --fix --ignore-pattern='!.eslintrc.js' --max-warnings=0 ./app\"\r\n\t},\r\n\t\"license\": \"ISC\",\r\n\t\"dependencies\": {\r\n\t\t\"@clientio/rappid\": \"file:vendor/rappid.tgz\",\r\n\t\t\"@date-io/dayjs\": \"1.3.13\",\r\n\t\t\"@material-ui/core\": \"4.11.3\",\r\n\t\t\"@material-ui/icons\": \"4.11.2\",\r\n\t\t\"@material-ui/pickers\": \"3.3.10\",\r\n\t\t\"axios\": \"0.21.1\",\r\n\t\t\"backbone\": \"1.4.0\",\r\n\t\t\"clsx\": \"1.1.1\",\r\n\t\t\"connected-react-router\": \"6.8.0\",\r\n\t\t\"dayjs\": \"1.10.4\",\r\n\t\t\"highcharts\": \"9.0.1\",\r\n\t\t\"history\": \"4.10.1\",\r\n\t\t\"jquery\": \"3.6.0\",\r\n\t\t\"js-cookie\": \"2.2.1\",\r\n\t\t\"lodash\": \"4.17.21\",\r\n\t\t\"notistack\": \"1.0.5\",\r\n\t\t\"nprogress\": \"0.2.0\",\r\n\t\t\"object-hash\": \"2.1.1\",\r\n\t\t\"prop-types\": \"15.7.2\",\r\n\t\t\"react\": \"17.0.1\",\r\n\t\t\"react-dnd\": \"14.0.1\",\r\n\t\t\"react-dnd-html5-backend\": \"14.0.0\",\r\n\t\t\"react-dom\": \"17.0.1\",\r\n\t\t\"react-dropzone\": \"11.3.1\",\r\n\t\t\"react-phone-input-2\": \"2.13.9\",\r\n\t\t\"react-redux\": \"7.2.2\",\r\n\t\t\"react-router\": \"5.2.0\",\r\n\t\t\"react-router-dom\": \"5.2.0\",\r\n\t\t\"react-select\": \"[custom private repo was here]\",\r\n\t\t\"react-window\": \"1.8.6\",\r\n\t\t\"redux\": \"4.0.5\",\r\n\t\t\"redux-logger\": \"3.0.6\",\r\n\t\t\"redux-thunk\": \"2.3.0\",\r\n\t\t\"reselect\": \"4.0.0\",\r\n\t\t\"socket.io-client\": \"4.0.0\"\r\n\t},\r\n\t\"devDependencies\": {\r\n\t\t\"@babel/core\": \"7.13.10\",\r\n\t\t\"@babel/eslint-parser\": \"7.13.10\",\r\n\t\t\"@babel/parser\": \"7.13.11\",\r\n\t\t\"@babel/plugin-proposal-class-properties\": \"7.13.0\",\r\n\t\t\"@babel/plugin-proposal-decorators\": \"7.13.5\",\r\n\t\t\"@babel/plugin-syntax-dynamic-import\": \"7.8.3\",\r\n\t\t\"@babel/plugin-transform-classes\": \"7.13.0\",\r\n\t\t\"@babel/plugin-transform-computed-properties\": \"7.13.0\",\r\n\t\t\"@babel/plugin-transform-runtime\": \"7.13.10\",\r\n\t\t\"@babel/plugin-transform-shorthand-properties\": \"7.12.13\",\r\n\t\t\"@babel/preset-env\": \"7.13.10\",\r\n\t\t\"@babel/preset-react\": \"7.12.13\",\r\n\t\t\"@babel/runtime\": \"7.13.10\",\r\n\t\t\"babel-loader\": \"8.2.2\",\r\n\t\t\"css-loader\": \"5.1.3\",\r\n\t\t\"eslint\": \"7.22.0\",\r\n\t\t\"eslint-config-prettier\": \"8.1.0\",\r\n\t\t\"eslint-config-react-app\": \"6.0.0\",\r\n\t\t\"eslint-plugin-flowtype\": \"5.4.0\",\r\n\t\t\"eslint-plugin-import\": \"2.22.1\",\r\n\t\t\"eslint-plugin-json\": \"2.1.2\",\r\n\t\t\"eslint-plugin-jsx-a11y\": \"6.4.1\",\r\n\t\t\"eslint-plugin-prettier\": \"3.3.1\",\r\n\t\t\"eslint-plugin-react\": \"7.22.0\",\r\n\t\t\"eslint-plugin-react-hooks\": \"4.2.0\",\r\n\t\t\"eslint-plugin-simple-import-sort\": \"7.0.0\",\r\n\t\t\"eslint-plugin-sonarjs\": \"0.6.0\",\r\n\t\t\"html-webpack-plugin\": \"5.3.1\",\r\n\t\t\"husky\": \"4.3.8\",\r\n\t\t\"lint-staged\": \"10.5.4\",\r\n\t\t\"mini-css-extract-plugin\": \"1.3.9\",\r\n\t\t\"prettier\": \"2.2.1\",\r\n\t\t\"style-loader\": \"2.0.0\",\r\n\t\t\"webpack\": \"5.25.1\",\r\n\t\t\"webpack-bundle-tracker\": \"0.4.3\",\r\n\t\t\"webpack-cli\": \"4.5.0\"\r\n\t},\r\n\t\"lint-staged\": {\r\n\t\t\"*.{js,jsx,json}\": [\r\n\t\t\t\"node_modules/.bin/eslint --fix --ignore-pattern '!.eslintrc.js' --max-warnings=0\",\r\n\t\t\t\"prettier --write\"\r\n\t\t]\r\n\t},\r\n\t\"husky\": {\r\n\t\t\"hooks\": {\r\n\t\t\t\"pre-commit\": \"lint-staged\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n```\r\n"
      },
      {
        "user": "alexander-akait",
        "created_at": "2021-03-18T13:18:22Z",
        "body": "Please avoid posting configurations in posts, it is unreadable and very rare helps, thanks"
      },
      {
        "user": "vadimkuragkovskiy",
        "created_at": "2021-03-18T13:31:19Z",
        "body": "hey @alexander-akait could you please let me the desired way? I'll update my previous post to keep it looks good for the rest community "
      },
      {
        "user": "alexander-akait",
        "created_at": "2021-03-18T13:37:54Z",
        "body": "@vadimkuragkovskiy \r\n\r\n> hey @alexander-akait could you please let me the desired way?\r\n\r\nYep, just create small reproducible test repo in own account, it is easy to debug and search a problem(s)"
      },
      {
        "user": "jsg2021",
        "created_at": "2021-03-18T14:35:41Z",
        "body": "> Sorry, information is not enough to help you, maybe you forget to add something to your HTML file\n\nYeah, i know. This is a project that's been fine for years. I'm still trying to figure out the minimum reproduction. \n\nI think it has something to do with mixing mode: development and runtimeChunk... but i'm not 100% there. \n\nI'll keep trying to find a min repro."
      },
      {
        "user": "vadimka123",
        "created_at": "2021-03-22T08:36:48Z",
        "body": "Working fine in version 5.27.1\r\nCan be closed"
      },
      {
        "user": "sokra",
        "created_at": "2021-03-22T12:00:31Z",
        "body": "@jsg2021 Could you try 5.27.1?"
      },
      {
        "user": "jsg2021",
        "created_at": "2021-03-22T16:29:44Z",
        "body": "I will give it a try today\n\n---\n\nThis does appear to be fixed."
      }
    ],
    "satisfaction_conditions": [
      "Identifies the root cause of runtimeChunk interaction failures in webpack 5.26.x",
      "Ensures entry point execution works with runtimeChunk optimization in both initial builds and watch mode rebuilds",
      "Maintains existing code splitting configuration while resolving execution failures",
      "Provides compatibility with the project's React/Babel toolchain"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:42:51"
    }
  },
  {
    "number": 12564,
    "title": "Way to recognize when initial compilation with lazy plugin has finished.",
    "created_at": "2021-02-02T15:53:28Z",
    "closed_at": "2021-02-03T21:08:27Z",
    "labels": [
      "question",
      "webpack-5"
    ],
    "url": "https://github.com/webpack/webpack/issues/12564",
    "body": "\r\n## Feature request\r\n\r\nI have tried the new lazy compilation option and it's awesome!\r\nI am creating a Create-React-App type of app using webpack-dev-middleware and one thing I noticed is that Webpack marks itself as ready (using `done` hook) before the entry point is compiled. This means if I cold start my app and immediately open the browser, I get an empty white page.\r\n\r\nIt would be nice to have a way to figure out when the initial compilation is done so only then we can open the browser for better DX. Does something like this in form of a hook already exist?\r\n\r\n**What is the expected behavior?**\r\nWebpack only changing to a ready state once the webapp can be visited\r\n\r\n**What is motivation or use case for adding/changing the behavior?**\r\nBetter developer experience\r\n\r\n**How should this be implemented in your opinion?**\r\nFor example using a hook, or changing when when Webpack calls the 'done' hook. The PR #12553 which could disable lazy importing for certain files also looks promising, because then maybe I could disable it for my entry files.\r\n\r\n**Are you willing to work on this yourself?**\r\nno\r\n",
    "comments_url": "https://api.github.com/repos/webpack/webpack/issues/12564/comments",
    "author": "JonnyBurger",
    "comments": [
      {
        "user": "alexander-akait",
        "created_at": "2021-02-02T15:58:31Z",
        "body": "I don't think you need hook here, you can do it on tool/application side"
      },
      {
        "user": "JonnyBurger",
        "created_at": "2021-02-02T16:03:03Z",
        "body": "@alexander-akait Can you tell me how I could implement it on the application side?"
      },
      {
        "user": "alexander-akait",
        "created_at": "2021-02-02T16:09:24Z",
        "body": "You have `__webpack_hash__` so you can check it was changed or not"
      },
      {
        "user": "sokra",
        "created_at": "2021-02-02T18:39:41Z",
        "body": "There are multiple things that you could do about that:\r\n\r\nIf your application has only a single entrypoint it make sense to disable lazy compilation for entrypoints, because there is no benefit in only compiling it when visited (since you can only visit this entrypoint). We should make this the default when there is only a single entrypoint.\r\n\r\nAbove thing will also give the the experience that the browser only opens when the page is ready.\r\n\r\nLazy Compilation has the option to create a custom User Interface when lazy compiling via the `experiments.lazyCompilation.client` option. This allows to disable e. g. a spinner and a message in the browser.\r\n\r\n"
      },
      {
        "user": "JonnyBurger",
        "created_at": "2021-02-03T21:08:27Z",
        "body": "Thanks a lot! With the new webpack version that came out today, I can do the following:\r\n\r\n```console\r\n\texperiments: {\r\n\t\tlazyCompilation: {\r\n\t\t\tentries: false,\r\n\t\t},\r\n\t}\r\n```\r\n\r\nand it works perfectly! \ud83e\udd73 \r\n\r\nThanks a lot for the swift help and my issue is resolved!"
      },
      {
        "user": "rodrigofariow",
        "created_at": "2021-10-08T16:04:25Z",
        "body": "Hey there!\r\n\r\nThis looks very helpful! Thanks @sokra \r\n\r\n> We should make this the default when there is only a single entrypoint.\r\n\r\nI was wondering if it is still your intent to do this by default. \r\nFrom my tests with `webpack@5.58.1` and the following config\r\n```\r\n  ...\r\n  entry: './src/index.tsx', // single entry point\r\n  experiments: {\r\n    lazyCompilation: true,\r\n  },\r\n```\r\nIt doesn't look like `entries=false` is the default yet.\r\n\r\nMaybe you will only do this when `lazyCompilation` is no longer experimental but I wanted to confirm so.\r\n\r\nThank you for your time!"
      }
    ],
    "satisfaction_conditions": [
      "Ensures entry points are fully compiled before signaling readiness",
      "Provides a way to determine initial compilation completion for critical assets",
      "Offers configuration control over lazy compilation behavior",
      "Maintains developer experience improvements from lazy compilation"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:43:00"
    }
  },
  {
    "number": 2416,
    "title": "\"ERROR in Entry module not found\" for module that exists",
    "created_at": "2016-04-29T21:01:16Z",
    "closed_at": "2016-04-30T22:27:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/webpack/webpack/issues/2416",
    "body": "Bash log:\n\n``` bash\n~/code/blockai/merkletree$ npm run gh-pages:build\n\n> merkletree@1.4.0 gh-pages:build /Users/olalonde/code/blockai/merkletree\n> cd demo && rm -rf dist && webpack\n\nHash: 396f0bfb9d565b6f60f0\nVersion: webpack 1.13.0\nTime: 25ms\n\nERROR in Entry module not found: Error: Cannot resolve module 'app.js' in /Users/olalonde/code/blockai/merkletree/demo/src\n~/code/blockai/merkletree$ ls /Users/olalonde/code/blockai/merkletree/demo/src\napp.js\n~/code/blockai/merkletree$ cat demo/webpack.config.js\nmodule.exports = {\n  context: `${__dirname}/src`,\n  entry: 'app.js',\n  output: {\n    filename: 'bundle.js',\n    path: `${__dirname}/dist`,\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel',\n        query: {\n          presets: ['react', 'es2015'],\n        },\n      },\n    ],\n  },\n}\n~/code/blockai/merkletree$ node --version\nv6.0.0\n```\n\nThe module exists on the filesystem, etc. but webpack says it can't resolve the module. Here's the content of `app.js`:\n\n``` javascript\nimport ReactDOM from 'react-dom'\nimport React from 'react'\n\nconst App = () => (\n  <p>hello world!</p>\n)\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n)\n```\n",
    "comments_url": "https://api.github.com/repos/webpack/webpack/issues/2416/comments",
    "author": "olalonde",
    "comments": [
      {
        "user": "olalonde",
        "created_at": "2016-04-29T21:05:58Z",
        "body": "Hmm, replacing\n\n``` javascript\n  context: `${__dirname}/src`,\n  entry: 'app.js',\n```\n\nwith \n\n``` javascript\n  // context: `${__dirname}/src/`,\n  entry: `${__dirname}/src/app.js`,\n```\n\nfixed the error. Maybe I'm misunderstanding the meaning of the `context` option?\n"
      },
      {
        "user": "sokra",
        "created_at": "2016-04-30T22:23:38Z",
        "body": "``` js\n  context: `${__dirname}/src`,\n  entry: './app.js',\n```\n\nentry is a module request, `app.js` will look for a module named `app.js` in your node_modules\n"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of how webpack's context configuration interacts with entry paths",
      "Clarification of module resolution rules for entry points in webpack",
      "Guidance on proper path syntax for webpack configuration files",
      "Explanation of difference between module names and file paths in webpack"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:44:44"
    }
  },
  {
    "number": 1335,
    "title": "Has someone met this error: Maximum setlocal recursion level reached",
    "created_at": "2015-08-08T07:01:10Z",
    "closed_at": "2015-11-16T06:30:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/webpack/webpack/issues/1335",
    "body": "I'm on window 10,\nwhen I run `webpack` from cmd\nI see this error: Maximum setlocal recursion level reached\n",
    "comments_url": "https://api.github.com/repos/webpack/webpack/issues/1335/comments",
    "author": "littlee",
    "comments": [
      {
        "user": "bebraw",
        "created_at": "2015-11-14T17:35:43Z",
        "body": "@littlee Can you try against the current version? We are going to need a lot more information than that.\n"
      },
      {
        "user": "littlee",
        "created_at": "2015-11-16T03:45:16Z",
        "body": "current version works. I will provide more error information when I see it again. Thanks.\n"
      }
    ],
    "satisfaction_conditions": [
      "Solution must be compatible with the current version of webpack",
      "Answer must address scenarios where detailed error reproduction information isn't available"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:47:04"
    }
  }
]