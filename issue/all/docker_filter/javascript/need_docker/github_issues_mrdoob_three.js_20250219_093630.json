[
  {
    "number": 2545,
    "title": "Blender 2.64 Using Node Editor for Material Editing... Export Has No mapDiffuse etc",
    "created_at": "2012-10-21T20:40:55Z",
    "closed_at": "2012-10-23T07:52:43Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/2545",
    "body": "Hey guys, I've imported a .obj file into Blender 2.64 and applied spec, color and bump to it using the Node Editor, then when exporting no image files are specified in the .js.\n\nI'm a total Blender to Three.js newbie so maybe I'm doing something wrong.\n\nWhen I apply a material and texture to the object without using the Node Editor, the output to .js is as expected and includes the file I used as the texture in the js as the mapDiffuse property.\n\nNot really sure if this is something I'm doing wrong or a bug! :)\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/2545/comments",
    "author": "Irrelon",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2012-10-22T23:20:58Z",
        "body": "There is no support in Blender exporter for materials defined in Node Editor, only material parameters that are defined in straightforward regular simple materials would get exported (and even there just some very specific subset of parameters works, it's difficult to match completely different material systems).\n"
      },
      {
        "user": "Irrelon",
        "created_at": "2012-10-23T14:37:14Z",
        "body": "Ahh ok! :) Thanks for clarifying that for me. I'll use the normal materials panel.\n"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of Blender exporter limitations regarding Node Editor materials",
      "Confirmation that standard material panel usage is required for successful export",
      "Clarification about compatibility between Blender's material systems and Three.js exporter"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:06:39"
    }
  },
  {
    "number": 1605,
    "title": "Small particles flicker when moved",
    "created_at": "2012-03-30T00:04:18Z",
    "closed_at": "2012-03-30T11:37:06Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1605",
    "body": "Hi, I'm using a particle system to create a star field for a background in my project. When the basic texture was applied to them they rotated smoothly, though now I have added a very simple circle png image to them, the very small stars flicker profusely. I've found this to happen slightly in Chrome, although more obviously in Safari and Firefox.\n\nI wondered if there was a reason this is happening and if there is any way I could prevent it happening while retaining the circular shape of the stars?\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1605/comments",
    "author": "creativekidney",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-03-30T01:37:18Z",
        "body": "I think it's because the texture is 20x20 and the textures need to be power of two in order to use mipmap filtering. Try with 16x16.\n"
      },
      {
        "user": "creativekidney",
        "created_at": "2012-03-30T11:36:30Z",
        "body": "I did wonder how the same image material on varying sizes of particles worked properly, mipmapping looks great! \n\nYour fix worked a treat, thanks again!\n"
      }
    ],
    "satisfaction_conditions": [
      "Solution must address texture filtering requirements for small particles",
      "Solution must maintain circular visual appearance of particles",
      "Solution must explain the relationship between texture dimensions and rendering artifacts",
      "Solution must work across multiple browsers (Chrome, Safari, Firefox)"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-05 00:10:31"
    }
  }
]