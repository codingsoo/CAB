[
  {
    "number": 7480,
    "title": "Can't deploy to AWS China regions",
    "created_at": "2020-03-18T09:45:09Z",
    "closed_at": "2020-03-24T13:17:01Z",
    "labels": [
      "question",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/7480",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\n1. What did you do?\r\ncreate an simple lambda function using aws-nodejs sample. \r\nDeploy the application using sls deploy.\r\n\r\n1. What happened?\r\n\r\nReceived error saying security token is invalid. I did have IAM admin AK/SK configured for AWS China regions. \r\n\r\n```bash\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ aws sts get-caller-identity --profile china --region cn-northwest-1\r\n{\r\n    \"Account\": \"xxxxxxxxxxxxx\",\r\n    \"UserId\": \"AIDAOUZ3VMBZOM4GMPZ7E\",\r\n    \"Arn\": \"arn:aws-cn:iam::xxxxxxxxxxxxx:user/admin\"\r\n}\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ sls deploy --profile china --region cn-northwest-1\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  The security token included in the request is invalid.\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n\r\n\r\n```\r\n1. What should've happened?\r\n\r\nThe deploy should succeed. \r\n\r\n1. What's the content of your `serverless.yml` file?\r\n\r\n```\r\n\r\nservice: projects\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs12.x\r\n\r\n  stage: dev\r\n  region: cn-northwest-1\r\n  endpointType: REGIONAL\r\n\r\nfunctions:\r\n  hello:\r\n    handler: handler.hello\r\n\r\n\r\n```\r\n\r\n\r\n1. What's the output you get when you use the `SLS_DEBUG=*` environment variable (e.g. `SLS_DEBUG=* serverless deploy`)\r\n\r\n```\r\nServerless: Load command interactiveCli\r\nServerless: Load command config\r\nServerless: Load command config:credentials\r\nServerless: Load command config:tabcompletion\r\nServerless: Load command config:tabcompletion:install\r\nServerless: Load command config:tabcompletion:uninstall\r\nServerless: Load command create\r\nServerless: Load command install\r\nServerless: Load command package\r\nServerless: Load command deploy\r\nServerless: Load command deploy:function\r\nServerless: Load command deploy:list\r\nServerless: Load command deploy:list:functions\r\nServerless: Load command invoke\r\nServerless: Load command invoke:local\r\nServerless: Load command info\r\nServerless: Load command logs\r\nServerless: Load command metrics\r\nServerless: Load command print\r\nServerless: Load command remove\r\nServerless: Load command rollback\r\nServerless: Load command rollback:function\r\nServerless: Load command slstats\r\nServerless: Load command plugin\r\nServerless: Load command plugin\r\nServerless: Load command plugin:install\r\nServerless: Load command plugin\r\nServerless: Load command plugin:uninstall\r\nServerless: Load command plugin\r\nServerless: Load command plugin:list\r\nServerless: Load command plugin\r\nServerless: Load command plugin:search\r\nServerless: Load command config\r\nServerless: Load command config:credentials\r\nServerless: Load command rollback\r\nServerless: Load command rollback:function\r\nServerless: Load command upgrade\r\nServerless: Load command uninstall\r\nServerless: Load command login\r\nServerless: Load command logout\r\nServerless: Load command generate-event\r\nServerless: Load command test\r\nServerless: Load command dashboard\r\nServerless: Load command output\r\nServerless: Load command output:get\r\nServerless: Load command output:list\r\nServerless: Load command param\r\nServerless: Load command param:get\r\nServerless: Load command param:list\r\nServerless: Invoke deploy\r\nServerless: Invoke package\r\nServerless: Invoke aws:common:validate\r\nServerless: Invoke aws:common:cleanupTempDir\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\nServerless: Invoke aws:package:finalize\r\nServerless: Invoke aws:common:moveArtifactsToPackage\r\nServerless: Invoke aws:common:validate\r\nServerless: Invoke aws:deploy:deploy\r\nServerless: [AWS cloudformation 403 1.528s 0 retries] describeStacks({ StackName: 'projects-dev' })\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  ServerlessError: The security token included in the request is invalid.\r\n      at /Users/sunhua/.nvm/versions/node/v12.16.1/lib/node_modules/serverless/lib/plugins/aws/provider/awsProvider.js:331:27\r\n      at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/7480/comments",
    "author": "bnusunny",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2020-03-23T03:23:56Z",
        "body": "@bnusunny thanks for report. Such error happens if security token as provided in AWS credentials is outdated. Are you sure your credentials configuration is up to date?"
      },
      {
        "user": "bnusunny",
        "created_at": "2020-03-23T13:54:04Z",
        "body": "@medikoo Yes, I'm sure my credential is up to date. As you can see in the following tests. I can use aws cli to get back my IAM identity, and immediately after that, I do the deployment, it fails. \r\n\r\nUser accounts in AWS China regions and global regions are completed seperated. AWS China region's IAM credentials can only be used in AWS China regions. If serverless cli sent the request to AWS global regions, the request would fail.  \r\n\r\n```bash\r\n\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ aws sts get-caller-identity --profile china --region cn-northwest-1\r\n{\r\n    \"Account\": \"xxxxxxxxxxxxx\",\r\n    \"UserId\": \"AIDAOUZ3VMBZOM4GMPZ7E\",\r\n    \"Arn\": \"arn:aws-cn:iam::xxxxxxxxxxxxx:user/admin\"\r\n}\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ sls deploy --profile china --region cn-northwest-1\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  The security token included in the request is invalid.\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "medikoo",
        "created_at": "2020-03-24T00:18:34Z",
        "body": "Thanks @bnusunny for futher clarifications. It's probably an issue with hardcoded AWS partition (`:aws:` token) sowewhere.\r\n\r\nWe'll try to look into it shortly. Otherwise if anyone has quick idea where's the source of a problem PR with a fix is welcome!"
      },
      {
        "user": "drexler",
        "created_at": "2020-03-24T11:51:17Z",
        "body": "@bnusunny  i see you deploying with `sls deploy --profile china --region cn-northwest-1`\r\n\r\ndoes the following work for you?: \r\n`sls deploy --aws-profile china --region cn-northwest-1`"
      },
      {
        "user": "bnusunny",
        "created_at": "2020-03-24T13:17:01Z",
        "body": "It works! Thanks for pointing out my mistake. \r\n\r\nClosing this issue. "
      },
      {
        "user": "myfreax",
        "created_at": "2021-05-17T13:36:16Z",
        "body": "thanks"
      }
    ],
    "satisfaction_conditions": [
      "Explanation of how to properly configure AWS China region credentials in Serverless Framework",
      "Identification of required parameter format for AWS China region deployments",
      "Clear distinction between AWS global and China region credential handling"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:49:09"
    }
  },
  {
    "number": 6824,
    "title": "`npm run test-ci` fails with  lib/classes/PluginManager.test.js",
    "created_at": "2019-10-12T08:21:24Z",
    "closed_at": "2019-10-15T17:28:20Z",
    "labels": [
      "question",
      "cat/plugin"
    ],
    "url": "https://github.com/serverless/serverless/issues/6824",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\nWhen I run `npm run test-ci` with the latest commit aba4e09c7be7e1c89b14728428f0f1a3bf9ccbbb, it fails and shows following message:\r\n\r\n```\r\n  105 passing (8s)\r\n  1 failing\r\n\r\n  1) PluginManager\r\n       #loadAllPlugins()\r\n         should throw an error when trying to load unknown plugin:\r\n\r\n      AssertionError: expected [Function] to throw 'ServerlessError' but 'TypeError: Cannot read property \\'realPath\\' of null' was thrown\r\n      + expected - actual\r\n\r\n      -TypeError: Cannot read property 'realPath' of null\r\n      +ServerlessError\r\n      \r\n      at Context.it (lib/classes/PluginManager.test.js:710:74)\r\n      at process._tickCallback (internal/process/next_tick.js:61:11)\r\n\r\n\r\n\r\nlib/classes/PluginManager.test.js failed\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! serverless@1.54.0 test-isolated: `mocha-isolated`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the serverless@1.54.0 test-isolated script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /Users/akito/.npm/_logs/2019-10-12T07_00_32_589Z-debug.log\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! serverless@1.54.0 test-ci: `npm run prettier-check-updated && npm run lint-updated && npm run test-isolated`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the serverless@1.54.0 test-ci script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n```\r\n\r\nCommit 050cb90684c03559fd484c89fb13ab380b3c263a may be related to this issue.\r\nWhen I run the same command with the previous commit, 4d9006bcdf783f96ca89c4901947c7159ea64121, it gets success.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6824/comments",
    "author": "kdnakt",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-14T07:52:21Z",
        "body": "@kdnakt ensure to update dependencies with `npm install` (error is like you've pulled new changes but didn't update the dependencies)"
      },
      {
        "user": "kdnakt",
        "created_at": "2019-10-15T17:28:20Z",
        "body": "@medikoo Thanks for your advise, I got success after running `npm install`!"
      }
    ],
    "satisfaction_conditions": [
      "Identifies the root cause of the test failure related to dependency management",
      "Explains the relationship between code changes and dependency requirements",
      "Provides a general troubleshooting approach for test failures after code updates",
      "Addresses proper environment synchronization procedures"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-04 23:49:33"
    }
  }
]