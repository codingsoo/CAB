{
  "number": 1648,
  "title": "_.isEqual on \"[object HTMLCanvasElement]\" elements with different content",
  "created_at": "2014-05-22T09:50:59Z",
  "closed_at": "2014-05-22T12:30:44Z",
  "labels": [
    "question",
    "duplicate"
  ],
  "url": "https://github.com/jashkenas/underscore/issues/1648",
  "body": "With two canvas of the same size and same properties, but different contents (and different results from \"toDataURL()\"), _.isEqual returns true.\n\nI'm not sure what should be the expected result in this case. Maybe it's a bug, maybe it should lead to a warning in the documentation.\n",
  "comments_url": "https://api.github.com/repos/jashkenas/underscore/issues/1648/comments",
  "author": "Volune",
  "comments": [
    {
      "user": "akre54",
      "created_at": "2014-05-22T12:30:44Z",
      "body": "`_.isEqual` is undefined for Elements (do a search through the issues for some background). It's much better to write the comparison by hand and `mixin` it into your own Underscore copy if you need it.\n\n``` js\n_.mixin({\n  isCanvasEqual: function(a, b) { return a.toDataUrl() === b.toDataUrl() }\n});\n```\n"
    },
    {
      "user": "michaelficarra",
      "created_at": "2014-05-22T14:30:42Z",
      "body": "You could also define `HTMLCanvasElement.prototype.isEqual`.\n\n``` js\nHTMLCanvasElement.prototype.isEqual = function(otherCanvas) {\n  return this.toDataUrl() === otherCavas.toDataUrl();\n};\n```\n"
    },
    {
      "user": "Volune",
      "created_at": "2014-05-22T14:56:58Z",
      "body": "A \"isCanvasEqual\" function is not usable for objects that may or may not contain a canvas (as it was in my case)\n\nThe HTMLCanvasElement.prototype.isEqual function is a good solution, thanks.\n"
    },
    {
      "user": "jdalton",
      "created_at": "2014-05-22T15:53:00Z",
      "body": "Yap, the current Underscore method of handling DOM elements puts devs in a jam because it either works on some browsers, doesn't, or locks up the browser. That's not a good experience and seems to be common enough to warrant action.\n\nExtending DOM prototypes is a losing game too (see Prototype.js).\n\nUnderscore could detect DOM elements, avoid crawling, and do a strict equality check, `===`. This prevents the inconsistent behavior and browser freezes. Then Underscore could add support for a customizing callback to allow devs to tailor `_.isEqual` to their needs.\n\n``` js\nvar eq = _.partial(_.isEqual, _, _, function(value, other) {\n  if (_.isElement(value) && _.isElement(other) &&\n        value.nodeName.toLowerCase() == 'canvas' &&\n        other.nodeName.toLowerCase() == 'canvas'\n      ){\n    return value.toDataUrl() == other.toDataUrl();\n  }\n});\n```\n"
    },
    {
      "user": "akre54",
      "created_at": "2014-05-22T17:46:28Z",
      "body": "Yeah extending prototypes is usually a no-go. @jdalton's solution is the way to go here. Given the number of edge cases and the murkily-defined equality semantics for elements of any type, it's much better to add this yourself to your own app.\n"
    }
  ],
  "satisfaction_conditions": [
    "Handles canvas element comparison based on actual content rather than object reference",
    "Works with objects that may or may not contain canvas elements",
    "Avoids browser inconsistencies and freezes with DOM element comparison",
    "Doesn't require modifying native prototypes",
    "Integrates with existing Underscore comparison logic"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-04-05 00:32:40"
  },
  "git_commit_info": {
    "sha": "0e8ca3cb978f4fe0205a25ba94dd0564b5c2fc83",
    "date": "2010-06-12T21:10:48Z",
    "message": "NaN is never equal to NaN. Fixed in underscore.js and underscore-min.js, updated tests in test/objects.js",
    "author": "Ryan W Tenney"
  },
  "repository_info": {
    "structure_summary": ".\n./.git\n./.git/branches\n./.git/description\n./.git/hooks\n./.git/hooks/applypatch-msg.sample\n./.git/hooks/commit-msg.sample\n./.git/hooks/post-update.sample\n./.git/hooks/pre-applypatch.sample\n./.git/hooks/pre-commit.sample\n./.git/hooks/pre-merge-commit.sample\n./.git/hooks/pre-push.sample\n./.git/hooks/pre-receive.sample\n./.git/hooks/push-to-checkout.sample\n./.git/hooks/update.sample\n./.git/hooks/fsmonitor-watchman.sample\n./.git/hooks/pre-rebase.sample\n./.git/hooks/prepare-commit-msg.sample\n./.git/hooks/sendemail-validate.sample\n./.git/info\n./.git/info/exclude\n./.git/config\n./.git/objects\n./.git/objects/pack\n./.git/objects/pack/pack-874ecf54d78f5d66c2134ef7ca81e04505ef0f54.pack\n./.git/objects/pack/pack-874ecf54d78f5d66c2134ef7ca81e04505ef0f54.rev\n./.git/objects/pack/pack-874ecf54d78f5d66c2134ef7ca81e04505ef0f54.idx\n./.git/objects/info\n./.git/HEAD\n./.git/refs\n./.git/refs/heads\n./.git/refs/heads/master\n./.git/refs/tags\n./.git/refs/remotes\n./.git/refs/remotes/origin\n./.git/refs/remotes/origin/HEAD\n./.git/packed-refs\n./.git/logs\n./.git/logs/refs\n./.git/logs/refs/remotes\n./.git/logs/refs/remotes/origin\n./.git/logs/refs/remotes/origin/HEAD\n./.git/logs/refs/heads\n./.git/logs/refs/heads/master\n./.git/logs/HEAD\n./.git/index\n./test\n./test/vendor\n./test/vendor/jquery.js\n./test/vendor/jslitmus.js\n./test/vendor/qunit.css\n./test/vendor/qunit.js\n./test/arrays.js\n./test/chaining.js\n./test/collections.js\n./test/functions.js\n./test/objects.js\n./test/speed.js\n./test/temp.js\n./test/temp_tests.html\n./test/test.html\n./test/utility.js\n./LICENSE\n./README\n./Rakefile\n./index.html\n./package.json\n./underscore-min.js\n./underscore.js\n",
    "readme": "\n--- ./README ---\n                   __                                                         \n                  /\\ \\                                                         __           \n __  __    ___    \\_\\ \\     __   _ __   ____    ___    ___   _ __    __       /\\_\\    ____  \n/\\ \\/\\ \\ /' _ `\\  /'_  \\  /'__`\\/\\  __\\/ ,__\\  / ___\\ / __`\\/\\  __\\/'__`\\     \\/\\ \\  /',__\\ \n\\ \\ \\_\\ \\/\\ \\/\\ \\/\\ \\ \\ \\/\\  __/\\ \\ \\//\\__, `\\/\\ \\__//\\ \\ \\ \\ \\ \\//\\  __/  __  \\ \\ \\/\\__, `\\\n \\ \\____/\\ \\_\\ \\_\\ \\___,_\\ \\____\\\\ \\_\\\\/\\____/\\ \\____\\ \\____/\\ \\_\\\\ \\____\\/\\_\\ _\\ \\ \\/\\____/\n  \\/___/  \\/_/\\/_/\\/__,_ /\\/____/ \\/_/ \\/___/  \\/____/\\/___/  \\/_/ \\/____/\\/_//\\ \\_\\ \\/___/ \n                                                                              \\ \\____/      \n                                                                               \\/___/\n\nUnderscore is a utility-belt library for JavaScript that provides \na lot of the functional programming support that you would expect \nin Prototype.js (or Ruby), but without extending any of the built-\nin JavaScript objects. It's the tie to go along with jQuery's tux.\n\nFor Docs, License, Tests, and pre-packed downloads, see:\nhttp://documentcloud.github.com/underscore/\n\nMany thanks to our contributors:\n\n  Dmitry Baranovskiy\n  Tim Caswell\n  Mathieu D'Amours\n  Rick Fletcher\n  Mike Frawley\n  Kirill Ishanov\n  Kris Kowal\n  Jed Schmidt\n  Noah Sloan\n  Luke Sutton\n  John Wright\n\n\n",
    "readme_filenames": [
      "./README"
    ]
  },
  "llm_calls_before_build": 0,
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM node:18-slim\n\n# Set working directory\nWORKDIR /app\n\n# Install system dependencies: git for cloning, python3/make for node-gyp, ruby/rubygems for Rake\nRUN apt-get update && \\\n    apt-get install -y git python3 make ruby rubygems && \\\n    gem install rake && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Clone repository and checkout specific commit\nRUN git clone https://github.com/jashkenas/underscore.git . && \\\n    git checkout 0e8ca3cb978f4fe0205a25ba94dd0564b5c2fc83\n\n# Install npm dependencies\nRUN npm install\n\n# Build the project using Rake (if required by build process)\n# Note: Commented out since actual build command isn't specified in user requirements\n# RUN rake",
  "dockerfile_build_success": true,
  "successful_candidate_index": 4,
  "successful_candidate_attempt": 1,
  "successful_candidate_improvement_attempt": 0,
  "llm_calls_total": 5
}