{
  "number": 802,
  "title": "Sharp fails to build on Centos7 x64 using Node LTS",
  "created_at": "2017-05-08T21:42:02Z",
  "closed_at": "2017-05-09T08:59:45Z",
  "labels": [
    "question"
  ],
  "url": "https://github.com/lovell/sharp/issues/802",
  "body": "inside of ../node_modules/sharp\r\n\r\n```\r\n$ node-gyp rebuild\r\ngyp info it worked if it ends with ok\r\ngyp info using node-gyp@3.6.1\r\ngyp info using node@6.10.3 | linux | x64\r\ngyp info spawn /usr/bin/python2\r\ngyp info spawn args [ '/usr/lib/node_modules/node-gyp/gyp/gyp_main.py',\r\ngyp info spawn args   'binding.gyp',\r\ngyp info spawn args   '-f',\r\ngyp info spawn args   'make',\r\ngyp info spawn args   '-I',\r\ngyp info spawn args   '/vagrant/client-website/node_modules/sharp/build/config.gypi',\r\ngyp info spawn args   '-I',\r\ngyp info spawn args   '/usr/lib/node_modules/node-gyp/addon.gypi',\r\ngyp info spawn args   '-I',\r\ngyp info spawn args   '/home/vagrant/.node-gyp/6.10.3/include/node/common.gypi',\r\ngyp info spawn args   '-Dlibrary=shared_library',\r\ngyp info spawn args   '-Dvisibility=default',\r\ngyp info spawn args   '-Dnode_root_dir=/home/vagrant/.node-gyp/6.10.3',\r\ngyp info spawn args   '-Dnode_gyp_dir=/usr/lib/node_modules/node-gyp',\r\ngyp info spawn args   '-Dnode_lib_file=node.lib',\r\ngyp info spawn args   '-Dmodule_root_dir=/vagrant/client-website/node_modules/sharp',\r\ngyp info spawn args   '-Dnode_engine=v8',\r\ngyp info spawn args   '--depth=.',\r\ngyp info spawn args   '--no-parallel',\r\ngyp info spawn args   '--generator-output',\r\ngyp info spawn args   'build',\r\ngyp info spawn args   '-Goutput_dir=.' ]\r\nPackage vips was not found in the pkg-config search path.\r\nPerhaps you should add the directory containing `vips.pc'\r\nto the PKG_CONFIG_PATH environment variable\r\nNo package 'vips' found\r\ngyp: Call to 'PKG_CONFIG_PATH=\":$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig\" pkg-config --libs vips' returned exit status 1 while in binding.gyp. while trying to load binding.gyp\r\ngyp ERR! configure error\r\ngyp ERR! stack Error: `gyp` failed with exit code: 1\r\ngyp ERR! stack     at ChildProcess.onCpExit (/usr/lib/node_modules/node-gyp/lib/configure.js:336:16)\r\ngyp ERR! stack     at emitTwo (events.js:106:13)\r\ngyp ERR! stack     at ChildProcess.emit (events.js:191:7)\r\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:215:12)\r\ngyp ERR! System Linux 3.10.0-514.16.1.el7.x86_64\r\ngyp ERR! command \"/usr/bin/node\" \"/usr/bin/node-gyp\" \"rebuild\"\r\ngyp ERR! cwd /vagrant/client-website/node_modules/sharp\r\ngyp ERR! node -v v6.10.3\r\ngyp ERR! node-gyp -v v3.6.1\r\ngyp ERR! not ok\r\n```\r\n\r\nshould I try installing vips from source? ",
  "comments_url": "https://api.github.com/repos/lovell/sharp/issues/802/comments",
  "author": "troyxmccall",
  "comments": [
    {
      "user": "lovell",
      "created_at": "2017-05-08T22:13:17Z",
      "body": "Hello, which version of sharp is this? Does the latest v0.17.3 work?"
    },
    {
      "user": "troyxmccall",
      "created_at": "2017-05-08T22:21:41Z",
      "body": "hey @lovell, it's sharp@0.11.4 from Laravel Elixir/ gulp-responsive, if I do a clean install of sharp@0.17.3 it works. Apologies, it's probably a dependency issue. I should've checked that before filing this issue. "
    }
  ],
  "satisfaction_conditions": [
    "Resolves version compatibility between sharp and its dependencies",
    "Addresses dependency management in the build environment",
    "Ensures compatibility with CentOS7 environment constraints"
  ],
  "_classification": {
    "category": "Can be dockerized without any issue",
    "timestamp": "2025-04-05 00:02:59"
  },
  "git_commit_info": {
    "sha": "177a4f574c67461d74ecffb190c3026a94f2133b",
    "date": "2014-11-17T12:08:05Z",
    "message": "Minimum version of libvips now 7.40.0 #74",
    "author": "Lovell Fuller"
  },
  "repository_info": {
    "structure_summary": ".\n./.git\n./.git/branches\n./.git/description\n./.git/hooks\n./.git/hooks/applypatch-msg.sample\n./.git/hooks/commit-msg.sample\n./.git/hooks/post-update.sample\n./.git/hooks/pre-applypatch.sample\n./.git/hooks/pre-commit.sample\n./.git/hooks/pre-merge-commit.sample\n./.git/hooks/pre-push.sample\n./.git/hooks/pre-receive.sample\n./.git/hooks/push-to-checkout.sample\n./.git/hooks/update.sample\n./.git/hooks/fsmonitor-watchman.sample\n./.git/hooks/pre-rebase.sample\n./.git/hooks/prepare-commit-msg.sample\n./.git/hooks/sendemail-validate.sample\n./.git/info\n./.git/info/exclude\n./.git/config\n./.git/objects\n./.git/objects/pack\n./.git/objects/pack/pack-85ef02072dcf432e5013a4d14db36a25383e16fc.pack\n./.git/objects/pack/pack-85ef02072dcf432e5013a4d14db36a25383e16fc.rev\n./.git/objects/pack/pack-85ef02072dcf432e5013a4d14db36a25383e16fc.idx\n./.git/objects/info\n./.git/HEAD\n./.git/refs\n./.git/refs/heads\n./.git/refs/heads/main\n./.git/refs/tags\n./.git/refs/remotes\n./.git/refs/remotes/origin\n./.git/refs/remotes/origin/HEAD\n./.git/packed-refs\n./.git/logs\n./.git/logs/refs\n./.git/logs/refs/remotes\n./.git/logs/refs/remotes/origin\n./.git/logs/refs/remotes/origin/HEAD\n./.git/logs/refs/heads\n./.git/logs/refs/heads/main\n./.git/logs/HEAD\n./.git/index\n./LICENSE\n./src\n./src/common.cc\n./src/common.h\n./src/metadata.cc\n./src/metadata.h\n./src/resize.cc\n./src/resize.h\n./src/sharp.cc\n./src/utilities.cc\n./src/utilities.h\n./test\n./test/bench\n./test/bench/package.json\n./test/bench/parallel.js\n./test/bench/perf.js\n./test/bench/random.js\n./test/fixtures\n./test/fixtures/4.webp\n./test/fixtures/50020484-00001.png\n./test/fixtures/Channel_digital_image_CMYK_color.jpg\n./test/fixtures/Channel_digital_image_CMYK_color_no_profile.jpg\n./test/fixtures/Crash_test.gif\n./test/fixtures/G31D.TIF\n./test/fixtures/Landscape_5.jpg\n./test/fixtures/Landscape_8.jpg\n./test/fixtures/blackbug.png\n./test/fixtures/gamma_dalai_lama_gray.jpg\n./test/fixtures/2569067123_aca715a2ee_o.jpg\n./test/fixtures/index.js\n./test/leak\n./test/leak/leak.sh\n./test/leak/sharp.supp\n./test/unit\n./test/unit/alpha.js\n./test/unit/blur.js\n./test/unit/colourspace.js\n./test/unit/crop.js\n./test/unit/embed.js\n./test/unit/extract.js\n./test/unit/gamma.js\n./test/unit/interpolation.js\n./test/unit/io.js\n./test/unit/jshint.js\n./test/unit/metadata.js\n./test/unit/resize.js\n./test/unit/rotate.js\n./test/unit/sharpen.js\n./test/unit/util.js\n./.gitignore\n./.jshintignore\n./.jshintrc\n./.npmignore\n./.travis.yml\n./README.md\n./binding.gyp\n./icc\n./icc/USWebCoatedSWOP.icc\n./index.js\n./package.json\n./preinstall.sh\n",
    "readme": "\n--- ./README.md ---\n# sharp\n\n* [Installation](https://github.com/lovell/sharp#installation)\n* [Usage examples](https://github.com/lovell/sharp#usage-examples)\n* [API](https://github.com/lovell/sharp#api)\n* [Testing](https://github.com/lovell/sharp#testing)\n* [Performance](https://github.com/lovell/sharp#performance)\n* [Thanks](https://github.com/lovell/sharp#thanks)\n* [Licence](https://github.com/lovell/sharp#licence)\n\nThe typical use case for this high speed Node.js module is to convert large images of many formats to smaller, web-friendly JPEG, PNG and WebP images of varying dimensions.\n\nThe performance of JPEG resizing is typically 8x faster than ImageMagick and GraphicsMagick, based mainly on the number of CPU cores available.\n\nMemory usage is kept to a minimum, no child processes are spawned, everything remains non-blocking thanks to _libuv_ and Promises/A+ are supported.\n\nThis module supports reading and writing JPEG, PNG and WebP images to and from Streams, Buffer objects and the filesystem. It also supports reading images of many other types from the filesystem via libmagick++ or libgraphicsmagick++ if present.\n\nWhen generating JPEG output all metadata is removed and Huffman tables optimised without having to use separate command line tools like [jpegoptim](https://github.com/tjko/jpegoptim) and [jpegtran](http://jpegclub.org/jpegtran/).\n\nAnyone who has used the Node.js bindings for [GraphicsMagick](https://github.com/aheckmann/gm) will find the API similarly fluent.\n\nThis module is powered by the blazingly fast [libvips](https://github.com/jcupitt/libvips) image processing library, originally created in 1989 at Birkbeck College and currently maintained by [John Cupitt](https://github.com/jcupitt).\n\n## Installation\n\n\tnpm install sharp\n\n### Prerequisites\n\n* Node.js v0.10+\n* [libvips](https://github.com/jcupitt/libvips) v7.40.0+ (7.42.0+ recommended)\n\nTo install the most suitable version of libvips on the following Operating Systems:\n\n* Mac OS\n  * Homebrew\n  * MacPorts\n* Debian Linux\n  * Debian 7, 8\n  * Ubuntu 12.04, 14.04, 14.10, 15.04\n  * Mint 13, 17\n* Red Hat Linux\n  * RHEL/Centos/Scientific 6, 7\n  * Fedora 21, 22\n\nrun the following as a user with `sudo` access:\n\n\tcurl -s https://raw.githubusercontent.com/lovell/sharp/master/preinstall.sh | sudo bash -\n\nor run the following as `root`:\n\n\tcurl -s https://raw.githubusercontent.com/lovell/sharp/master/preinstall.sh | bash -\n\nThe [preinstall.sh](https://github.com/lovell/sharp/blob/master/preinstall.sh) script requires `curl` and `pkg-config`.\n\n### Mac OS tips\n\nManual install via homebrew:\n\n\tbrew install homebrew/science/vips --with-webp --with-graphicsmagick\n\nA missing or incorrectly configured _Xcode Command Line Tools_ installation [can lead](https://github.com/lovell/sharp/issues/80) to a `library not found for -ljpeg` error. If so, please try:\n\n\txcode-select --install\n\nThe _gettext_ dependency of _libvips_ [can lead](https://github.com/lovell/sharp/issues/9) to a `library not found for -lintl` error. If so, please try:\n\n\tbrew link gettext --force\n\n### Install libvips on Heroku\n\n[Alessandro Tagliapietra](https://github.com/alex88) maintains an [Heroku buildpack for libvips](https://github.com/alex88/heroku-buildpack-vips) and its dependencies.\n\n### Using with gulp.js\n\n[Eugeny Vlasenko](https://github.com/mahnunchik) maintains [gulp-responsive](https://www.npmjs.org/package/gulp-responsive) and [Mohammad Prabowo](https://github.com/rizalp) maintains [gulp-sharp](https://www.npmjs.org/package/gulp-sharp).\n\n## Usage examples\n\n```javascript\nvar sharp = require('sharp');\n```\n\n```javascript\nsharp('input.jpg').resize(300, 200).toFile('output.jpg', function(err) {\n  if (err) {\n    throw err;\n  }\n  // output.jpg is a 300 pixels wide and 200 pixels high image\n  // containing a scaled and cropped version of input.jpg\n});\n```\n\n```javascript\nvar transformer = sharp().resize(300, 200).crop(sharp.gravity.north);\nreadableStream.pipe(transformer).pipe(writableStream);\n// Read image data from readableStream, resize and write image data to writableStream\n```\n\n```javascript\nvar image = sharp(inputJpg);\nimage.metadata(function(err, metadata) {\n  image.resize(metadata.width / 2).webp().toBuffer(function(err, outputBuffer, info) {\n    // outputBuffer contains a WebP image half the width and height of the original JPEG\n  });\n});\n```\n\n```javascript\nvar pipeline = sharp()\n  .rotate()\n  .resize(null, 200)\n  .progressive()\n  .toBuffer(function(err, outputBuffer, info) {\n    if (err) {\n      throw err;\n    }\n    // outputBuffer contains 200px high progressive JPEG image data,\n    // auto-rotated using EXIF Orientation tag\n    // info.width and info.height contain the dimensions of the resized image\n  });\nreadableStream.pipe(pipeline);\n```\n\n```javascript\nsharp('input.png')\n  .rotate(180)\n  .resize(300)\n  .flatten()\n  .background('#ff6600')\n  .sharpen()\n  .withMetadata()\n  .quality(90)\n  .webp()\n  .toBuffer()\n  .then(function(outputBuffer) {\n    // outputBuffer contains upside down, 300px wide, alpha channel flattened\n    // onto orange background, sharpened, with metadata, 90% quality WebP image\n    // data\n  });\n```\n\n```javascript\nhttp.createServer(function(request, response) {\n  response.writeHead(200, {'Content-Type': 'image/webp'});\n  sharp('input.jpg').rotate().resize(200).webp().pipe(response);\n}).listen(8000);\n// Create HTTP server that always returns auto-rotated 'input.jpg',\n// resized to 200 pixels wide, in WebP format\n```\n\n```javascript\nsharp(input)\n  .extract(top, left, width, height)\n  .toFile(output);\n  // Extract a region of the input image, saving in the same format.\n```\n\n```javascript\nsharp(input)\n  .extract(topOffsetPre, leftOffsetPre, widthPre, heightPre)\n  .resize(width, height)\n  .extract(topOffsetPost, leftOffsetPost, widthPost, heightPost)\n  .toFile(output);\n  // Extract a region, resize, then extract from the resized image\n```\n\n```javascript\nsharp(inputBuffer)\n  .resize(200, 300)\n  .interpolateWith(sharp.interpolator.nohalo)\n  .background('white')\n  .embed()\n  .toFile('output.tiff')\n  .then(function() {\n    // output.tiff is a 200 pixels wide and 300 pixels high image\n    // containing a bicubic scaled version, embedded on a white canvas,\n    // of the image data in inputBuffer\n  });\n```\n\n```javascript\nsharp('input.gif')\n  .resize(200, 300)\n  .background({r: 0, g: 0, b: 0, a: 0})\n  .embed()\n  .webp()\n  .toBuffer(function(err, outputBuffer) {\n    if (err) {\n      throw err;\n    }\n    // outputBuffer contains WebP image data of a 200 pixels wide and 300 pixels high\n    // containing a scaled version, embedded on a transparent canvas, of input.gif\n  });\n```\n\n```javascript\nsharp(inputBuffer)\n  .resize(200, 200)\n  .max()\n  .jpeg()\n  .toBuffer().then(function(outputBuffer) {\n    // outputBuffer contains JPEG image data no wider than 200 pixels and no higher\n    // than 200 pixels regardless of the inputBuffer image dimensions\n  });\n```\n\n## API\n\n### Input methods\n\n#### sharp([input])\n\nConstructor to which further methods are chained. `input`, if present, can be one of:\n\n* Buffer containing JPEG, PNG, WebP or TIFF image data, or\n* String containing the filename of an image, with most major formats supported.\n\nThe object returned implements the [stream.Duplex](http://nodejs.org/api/stream.html#stream_class_stream_duplex) class.\n\nJPEG, PNG, WebP or TIFF format image data can be streamed into the object when `input` is not provided.\n\nJPEG, PNG or WebP format image data can be streamed out from this object.\n\n#### metadata([callback])\n\nFast access to image metadata without decoding any compressed image data.\n\n`callback`, if present, gets the arguments `(err, metadata)` where `metadata` has the attributes:\n\n* `format`: Name of decoder to be used to decompress image data e.g. `jpeg`, `png`, `webp` (for file-based input additionally `tiff` and `magick`)\n* `width`: Number of pixels wide\n* `height`: Number of pixels high\n* `space`: Name of colour space interpretation e.g. `srgb`, `rgb`, `scrgb`, `cmyk`, `lab`, `xyz`, `b-w` [...](https://github.com/jcupitt/libvips/blob/master/libvips/iofuncs/enumtypes.c#L522)\n* `channels`: Number of bands e.g. `3` for sRGB, `4` for CMYK\n* `hasAlpha`: Boolean indicating the presence of an alpha transparency channel\n* `orientation`: Number value of the EXIF Orientation header, if present\n\nA Promises/A+ promise is returned when `callback` is not provided.\n\n#### sequentialRead()\n\nAn advanced setting that switches the libvips access method to `VIPS_ACCESS_SEQUENTIAL`. This will reduce memory usage and can improve performance on some systems.\n\n### Image transformation options\n\n#### resize(width, [height])\n\nScale output to `width` x `height`. By default, the resized image is cropped to the exact size specified.\n\n`width` is the Number of pixels wide the resultant image should be. Use `null` or `undefined` to auto-scale the width to match the height.\n\n`height` is the Number of pixels high the resultant image should be. Use `null` or `undefined` to auto-scale the height to match the width.\n\n#### extract(top, left, width, height)\n\nExtract a region of the image. Can be used with or without a `resize` operation.\n\n`top` and `left` are the offset, in pixels, from the top-left corner.\n\n`width` and `height` are the dimensions of the extracted image.\n\nUse `extract` before `resize` for pre-resize extraction. Use `extract` after `resize` for post-resize extraction. Use `extract` before and after for both.\n\n#### crop([gravity])\n\nCrop the resized image to the exact size specified, the default behaviour.\n\n`gravity`, if present, is an attribute of the `sharp.gravity` Object e.g. `sharp.gravity.north`.\n\nPossible values are `north`, `east`, `south`, `west`, `center` and `centre`. The default gravity is `center`/`centre`.\n\n#### max()\n\nPreserving aspect ratio, resize the image to the maximum `width` or `height` specified.\n\nBoth `width` and `height` must be provided via `resize` otherwise the behaviour will default to `crop`.\n\n#### background(rgba)\n\nSet the background for the `embed` and `flatten` operations.\n\n`rgba` is parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n\nThe alpha value is a float between `0` (transparent) and `1` (opaque).\n\nThe default background is `{r: 0, g: 0, b: 0, a: 1}`, black without transparency.\n\n#### embed()\n\nPreserving aspect ratio, resize the image to the maximum `width` or `height` specified then embed on a background of the exact `width` and `height` specified.\n\nIf the background contains an alpha value then WebP and PNG format output images will contain an alpha channel, even when the input image does not.\n\n#### flatten()\n\nMerge alpha transparency channel, if any, with `background`.\n\n#### rotate([angle])\n\nRotate the output image by either an explicit angle or auto-orient based on the EXIF `Orientation` tag.\n\n`angle`, if present, is a Number with a value of `0`, `90`, `180` or `270`.\n\nUse this method without `angle` to determine the angle from EXIF data. Mirroring is supported and may infer the use of a `flip` operation.\n\n#### flip()\n\nFlip the image about the vertical Y axis. This always occurs after rotation, if any.\n\n#### flop()\n\nFlop the image about the horizontal X axis. This always occurs after rotation, if any.\n\n#### withoutEnlargement()\n\nDo not enlarge the output image if the input image width *or* height are already less than the required dimensions.\n\nThis is equivalent to GraphicsMagick's `>` geometry option: \"change the dimensions of the image only if its width or height exceeds the geometry specification\".\n\n#### blur([radius])\n\nWhen used without parameters, performs a fast, mild blur of the output image. This typically reduces performance by 10%.\n\nWhen a `radius` is provided, performs a slower, more accurate Gaussian blur. This typically reduces performance by 30%.\n\n* `radius`, if present, is an integral Number representing the approximate blur mask radius in pixels.\n\n#### sharpen([radius], [flat], [jagged])\n\nWhen used without parameters, performs a fast, mild sharpen of the output image. This typically reduces performance by 10%.\n\nWhen a `radius` is provided, performs a slower, more accurate sharpen of the L channel in the LAB colour space. Separate control over the level of sharpening in \"flat\" and \"jagged\" areas is available. This typically reduces performance by 50%.\n\n* `radius`, if present, is an integral Number representing the sharpen mask radius in pixels.\n* `flat`, if present, is a Number representing the level of sharpening to apply to \"flat\" areas, defaulting to a value of 1.0.\n* `jagged`, if present, is a Number representing the level of sharpening to apply to \"jagged\" areas, defaulting to a value of 2.0.\n\n#### interpolateWith(interpolator)\n\nUse the given interpolator for image resizing, where `interpolator` is an attribute of the `sharp.interpolator` Object e.g. `sharp.interpolator.bicubic`.\n\nPossible interpolators, in order of performance, are:\n\n* `nearest`: Use [nearest neighbour interpolation](http://en.wikipedia.org/wiki/Nearest-neighbor_interpolation), suitable for image enlargement only.\n* `bilinear`: Use [bilinear interpolation](http://en.wikipedia.org/wiki/Bilinear_interpolation), the default and fastest image reduction interpolation.\n* `bicubic`: Use [bicubic interpolation](http://en.wikipedia.org/wiki/Bicubic_interpolation), which typically reduces performance by 5%.\n* `vertexSplitQuadraticBasisSpline`: Use [VSQBS interpolation](https://github.com/jcupitt/libvips/blob/master/libvips/resample/vsqbs.cpp#L48), which prevents \"staircasing\" and typically reduces performance by 5%.\n* `locallyBoundedBicubic`: Use [LBB interpolation](https://github.com/jcupitt/libvips/blob/master/libvips/resample/lbb.cpp#L100), which prevents some \"[acutance](http://en.wikipedia.org/wiki/Acutance)\" and typically reduces performance by a factor of 2.\n* `nohalo`: Use [Nohalo interpolation](http://eprints.soton.ac.uk/268086/), which prevents acutance and typically reduces performance by a factor of 3.\n\n#### gamma([gamma])\n\nApply a gamma correction by reducing the encoding (darken) pre-resize at a factor of `1/gamma` then increasing the encoding (brighten) post-resize at a factor of `gamma`.\n\n`gamma`, if present, is a Number betweem 1 and 3. The default value is `2.2`, a suitable approximation for sRGB images.\n\nThis can improve the perceived brightness of a resized image in non-linear colour spaces.\n\nJPEG input images will not take advantage of the shrink-on-load performance optimisation when applying a gamma correction.\n\n#### grayscale() / greyscale()\n\nConvert to 8-bit greyscale; 256 shades of grey.\n\nThis is a linear operation. If the input image is in a non-linear colour space such as sRGB, use `gamma()` with `greyscale()` for the best results.\n\nThe output image will still be web-friendly sRGB and contain three (identical) channels.\n\n### Output options\n\n#### jpeg()\n\nUse JPEG format for the output image.\n\n#### png()\n\nUse PNG format for the output image.\n\n#### webp()\n\nUse WebP format for the output image.\n\n#### quality(quality)\n\nThe output quality to use for lossy JPEG, WebP and TIFF output formats. The default quality is `80`.\n\n`quality` is a Number between 1 and 100.\n\n#### progressive()\n\nUse progressive (interlace) scan for JPEG and PNG output. This typically reduces compression performance by 30% but results in an image that can be rendered sooner when decompressed.\n\n#### withMetadata()\n\nInclude all metadata (ICC, EXIF, XMP) from the input image in the output image. The default behaviour is to strip all metadata.\n\n#### compressionLevel(compressionLevel)\n\nAn advanced setting for the _zlib_ compression level of the lossless PNG output format. The default level is `6`.\n\n`compressionLevel` is a Number between 0 and 9.\n\n#### withoutAdaptiveFiltering()\n\n_Requires libvips 7.41.0+_\n\nAn advanced and experimental PNG output setting to disable adaptive row filtering.\n\n### Output methods\n\n#### toFile(filename, [callback])\n\n`filename` is a String containing the filename to write the image data to. The format is inferred from the extension, with JPEG, PNG, WebP and TIFF supported.\n\n`callback`, if present, is called with two arguments `(err, info)` where:\n\n* `err` contains an error message, if any.\n* `info` contains the output image `format`, `width` and `height`.\n\nA Promises/A+ promise is returned when `callback` is not provided.\n\n#### toBuffer([callback])\n\nWrite image data to a Buffer, the format of which will match the input image by default. JPEG, PNG and WebP are supported.\n\n`callback`, if present, gets three arguments `(err, buffer, info)` where:\n\n* `err` is an error message, if any.\n* `buffer` is the output image data.\n* `info` contains the output image `format`, `width` and `height`.\n\nA Promises/A+ promise is returned when `callback` is not provided.\n\n### Utility methods\n\n#### sharp.cache([memory], [items])\n\nIf `memory` or `items` are provided, set the limits of _libvips'_ operation cache.\n\n* `memory` is the maximum memory in MB to use for this cache, with a default value of 100\n* `items` is the maximum number of operations to cache, with a default value of 500\n\nThis method always returns cache statistics, useful for determining how much working memory is required for a particular task.\n\n```javascript\nvar stats = sharp.cache(); // { current: 75, high: 99, memory: 100, items: 500 }\nsharp.cache(200); // { current: 75, high: 99, memory: 200, items: 500 }\nsharp.cache(50, 200); // { current: 49, high: 99, memory: 50, items: 200}\n```\n\n#### sharp.concurrency([threads])\n\n`threads`, if provided, is the Number of threads _libvips'_ should create for image processing. The default value is the number of CPU cores. A value of `0` will reset to this default.\n\nThis method always returns the current concurrency.\n\n```javascript\nvar threads = sharp.concurrency(); // 4\nsharp.concurrency(2); // 2\nsharp.concurrency(0); // 4\n```\n\n#### sharp.counters()\n\nProvides access to internal task counters.\n\n* `queue` is the number of tasks this module has queued waiting for _libuv_ to provide a worker thread from its pool.\n* `process` is the number of resize tasks currently being processed.\n\n```javascript\nvar counters = sharp.counters(); // { queue: 2, process: 4 }\n```\n\n## Testing\n\n### Functional tests\n\n#### Coverage\n\n[![Test Coverage](https://coveralls.io/repos/lovell/sharp/badge.png?branch=master)](https://coveralls.io/r/lovell/sharp?branch=master)\n\n#### Ubuntu 12.04\n\n[![Ubuntu 12.04 Build Status](https://travis-ci.org/lovell/sharp.png?branch=master)](https://travis-ci.org/lovell/sharp)\n\n#### Centos 6.5\n\n[![Centos 6.5 Build Status](https://snap-ci.com/lovell/sharp/branch/master/build_image)](https://snap-ci.com/lovell/sharp/branch/master)\n\n#### It worked on my machine\n\n```\nnpm test\n```\n\n### Memory leak tests\n\n```\ncd sharp/test/leak\n./leak.sh\n```\n\nRequires _valgrind_:\n\n```\nbrew install valgrind\n```\n\n```\nsudo apt-get install -qq valgrind\n```\n\n### Benchmark tests\n\n```\ncd sharp/test/bench\nnpm install\nnpm test\n```\n\nRequires both _ImageMagick_ and _GraphicsMagick_:\n\n```\nbrew install imagemagick\nbrew install graphicsmagick\n```\n\n```\nsudo apt-get install -qq imagemagick graphicsmagick libmagick++-dev\n```\n\n```\nsudo yum install ImageMagick\nsudo yum install -y http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nsudo yum install -y --enablerepo=epel GraphicsMagick\n```\n\n## Performance\n\n### Test environment\n\n* AWS EC2 [c3.xlarge](http://aws.amazon.com/ec2/instance-types/#Compute_Optimized)\n* Ubuntu 14.04\n* libvips 7.40.8\n* liborc 0.4.22\n\n### The contenders\n\n* [imagemagick-native](https://github.com/mash/node-imagemagick-native) v1.2.2 - Supports Buffers only and blocks main V8 thread whilst processing.\n* [imagemagick](https://github.com/yourdeveloper/node-imagemagick) v0.1.3 - Supports filesystem only and \"has been unmaintained for a long time\".\n* [gm](https://github.com/aheckmann/gm) v1.16.0 - Fully featured wrapper around GraphicsMagick.\n* sharp v0.6.2 - Caching within libvips disabled to ensure a fair comparison.\n\n### The task\n\nDecompress a 2725x2225 JPEG image, resize and crop to 720x480, then compress to JPEG.\n\n### Results\n\n| Module                | Input  | Output | Ops/sec | Speed-up |\n| :-------------------- | :----- | :----- | ------: | -------: |\n| imagemagick-native    | buffer | buffer |    1.58 |        1 |\n| imagemagick           | file   | file   |    6.23 |      3.9 |\n| gm                    | buffer | file   |    5.32 |      3.4 |\n| gm                    | buffer | buffer |    5.32 |      3.4 |\n| gm                    | file   | file   |    5.36 |      3.4 |\n| gm                    | file   | buffer |    5.36 |      3.4 |\n| sharp                 | buffer | file   |   22.05 |     14.0 |\n| sharp                 | buffer | buffer |   22.14 |     14.0 |\n| sharp                 | file   | file   |   21.79 |     13.8 |\n| sharp                 | file   | buffer |   21.90 |     13.9 |\n| sharp                 | stream | stream |   20.87 |     13.2 |\n| sharp +promise        | file   | buffer |   21.89 |     13.9 |\n| sharp +sharpen        | file   | buffer |   19.69 |     12.5 |\n| sharp +progressive    | file   | buffer |   16.93 |     10.7 |\n| sharp +sequentialRead | file   | buffer |   21.60 |     13.7 |\n\nYou can expect greater performance with caching enabled (default) and using 8+ core machines.\n\n## Thanks\n\nThis module would never have been possible without the help and code contributions of the following people:\n\n* [John Cupitt](https://github.com/jcupitt)\n* [Pierre Inglebert](https://github.com/pierreinglebert)\n* [Jonathan Ong](https://github.com/jonathanong)\n* [Chanon Sajjamanochai](https://github.com/chanon)\n* [Juliano Julio](https://github.com/julianojulio)\n* [Daniel Gasienica](https://github.com/gasi)\n* [Julian Walker](https://github.com/julianwa)\n* [Amit Pitaru](https://github.com/apitaru)\n* [Brandon Aaron](https://github.com/brandonaaron)\n* [Andreas Lind](https://github.com/papandreou)\n\nThank you!\n\n## Licence\n\nCopyright 2013, 2014 Lovell Fuller and contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0.html)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n",
    "readme_filenames": [
      "./README.md"
    ]
  },
  "llm_calls_before_build": 50,
  "dockerfile_attempt_1": 1,
  "dockerfile": "FROM centos:7\n\nRUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \\\n    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n\nRUN yum groupinstall -y \"Development Tools\" && \\\n    yum install -y curl git python2 pkgconfig epel-release wget \\\n    glib2-devel libjpeg-turbo-devel libpng-devel libwebp-devel \\\n    libexif-devel lcms2-devel librsvg2-devel giflib-devel && \\\n    yum clean all\n\nRUN git clone https://github.com/lovell/sharp.git /app\nWORKDIR /app\nRUN git checkout 177a4f574c67461d74ecffb190c3026a94f2133b\n\nRUN bash preinstall.sh\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\n\nRUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\nENV NVM_DIR /root/.nvm\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install 6.10.3 && nvm alias default 6.10.3\nENV PATH \"/root/.nvm/versions/node/v6.10.3/bin:${PATH}\"\n\nRUN npm install",
  "dockerfile_build_success": true,
  "llm_calls_total": 70
}